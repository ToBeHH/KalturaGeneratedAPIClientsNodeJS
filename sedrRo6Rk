// ===================================================================================================
//                           _  __     _ _
//                          | |/ /__ _| | |_ _  _ _ _ __ _
//                          | ' </ _` | |  _| || | '_/ _` |
//                          |_|\_\__,_|_|\__|\_,_|_| \__,_|
//
// This file is part of the Kaltura Collaborative Media Suite which allows users
// to do with audio, video, and animation what Wiki platfroms allow them to do with
// text.
//
// Copyright (C) 2006-2016  Kaltura Inc.
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
//
// @ignore
// ===================================================================================================
const kaltura = require('./KalturaClientBase');

/**
 *
 */
class ListResponse extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaListResponse';
	}
	
	/**
	 * 
	 * @return int
	 */
	 getTotalCount() {
	 	return this.totalCount;
	 }
}
module.exports.ListResponse = ListResponse;

/**
 *
 */
class BaseRestriction extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaBaseRestriction';
	}
}
module.exports.BaseRestriction = BaseRestriction;

/**
 *
 */
class AccessControl extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaAccessControl';
	}
	
	/**
	 * The id of the Access Control Profile
	 * @return int
	 */
	 getId() {
	 	return this.id;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getPartnerId() {
	 	return this.partnerId;
	 }
	
	/**
	 * The name of the Access Control Profile
	 * @return string
	 */
	 getName() {
	 	return this.name;
	 }
	
	/**
	 * @param name string The name of the Access Control Profile
	 */
	 setName(name) {
	 	this.name = name;
	 }
	
	/**
	 * System name of the Access Control Profile
	 * @return string
	 */
	 getSystemName() {
	 	return this.systemName;
	 }
	
	/**
	 * @param systemName string System name of the Access Control Profile
	 */
	 setSystemName(systemName) {
	 	this.systemName = systemName;
	 }
	
	/**
	 * The description of the Access Control Profile
	 * @return string
	 */
	 getDescription() {
	 	return this.description;
	 }
	
	/**
	 * @param description string The description of the Access Control Profile
	 */
	 setDescription(description) {
	 	this.description = description;
	 }
	
	/**
	 * Creation date as Unix timestamp (In seconds)
	 * @return int
	 */
	 getCreatedAt() {
	 	return this.createdAt;
	 }
	
	/**
	 * True if this Conversion Profile is the default
	 * @return int
	 */
	 getIsDefault() {
	 	return this.isDefault;
	 }
	
	/**
	 * @param isDefault int True if this Conversion Profile is the default
	 */
	 setIsDefault(isDefault) {
	 	this.isDefault = isDefault;
	 }
	
	/**
	 * Array of Access Control Restrictions
	 * @return array
	 */
	 getRestrictions() {
	 	return this.restrictions;
	 }
	
	/**
	 * @param restrictions array Array of Access Control Restrictions
	 */
	 setRestrictions(restrictions) {
	 	this.restrictions = restrictions;
	 }
	
	/**
	 * Indicates that the access control profile is new and should be handled using KalturaAccessControlProfile object and accessControlProfile service
	 * @return bool
	 */
	 getContainsUnsuportedRestrictions() {
	 	return this.containsUnsuportedRestrictions;
	 }
}
module.exports.AccessControl = AccessControl;

/**
 *
 */
class ContextTypeHolder extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaContextTypeHolder';
	}
	
	/**
	 * The type of the condition context
	 * @return string
	 */
	 getType() {
	 	return this.type;
	 }
	
	/**
	 * @param type string The type of the condition context
	 */
	 setType(type) {
	 	this.type = type;
	 }
}
module.exports.ContextTypeHolder = ContextTypeHolder;

/**
 *
 */
class AccessControlContextTypeHolder extends ContextTypeHolder{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaAccessControlContextTypeHolder';
	}
}
module.exports.AccessControlContextTypeHolder = AccessControlContextTypeHolder;

/**
 *
 */
class AccessControlMessage extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaAccessControlMessage';
	}
	
	/**
	 * 
	 * @return string
	 */
	 getMessage() {
	 	return this.message;
	 }
	
	/**
	 * @param message string 
	 */
	 setMessage(message) {
	 	this.message = message;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getCode() {
	 	return this.code;
	 }
	
	/**
	 * @param code string 
	 */
	 setCode(code) {
	 	this.code = code;
	 }
}
module.exports.AccessControlMessage = AccessControlMessage;

/**
 *
 */
class RuleAction extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaRuleAction';
	}
	
	/**
	 * The type of the action
	 * @return string
	 */
	 getType() {
	 	return this.type;
	 }
}
module.exports.RuleAction = RuleAction;

/**
 *
 */
class Condition extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaCondition';
	}
	
	/**
	 * The type of the access control condition
	 * @return string
	 */
	 getType() {
	 	return this.type;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getDescription() {
	 	return this.description;
	 }
	
	/**
	 * @param description string 
	 */
	 setDescription(description) {
	 	this.description = description;
	 }
	
	/**
	 * 
	 * @return bool
	 */
	 getNot() {
	 	return this.not;
	 }
	
	/**
	 * @param not bool 
	 */
	 setNot(not) {
	 	this.not = not;
	 }
}
module.exports.Condition = Condition;

/**
 *
 */
class Rule extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaRule';
	}
	
	/**
	 * Short Rule Description
	 * @return string
	 */
	 getDescription() {
	 	return this.description;
	 }
	
	/**
	 * @param description string Short Rule Description
	 */
	 setDescription(description) {
	 	this.description = description;
	 }
	
	/**
	 * Rule Custom Data to allow saving rule specific information
	 * @return string
	 */
	 getRuleData() {
	 	return this.ruleData;
	 }
	
	/**
	 * @param ruleData string Rule Custom Data to allow saving rule specific information
	 */
	 setRuleData(ruleData) {
	 	this.ruleData = ruleData;
	 }
	
	/**
	 * Message to be thrown to the player in case the rule is fulfilled
	 * @return string
	 */
	 getMessage() {
	 	return this.message;
	 }
	
	/**
	 * @param message string Message to be thrown to the player in case the rule is fulfilled
	 */
	 setMessage(message) {
	 	this.message = message;
	 }
	
	/**
	 * Code to be thrown to the player in case the rule is fulfilled
	 * @return string
	 */
	 getCode() {
	 	return this.code;
	 }
	
	/**
	 * @param code string Code to be thrown to the player in case the rule is fulfilled
	 */
	 setCode(code) {
	 	this.code = code;
	 }
	
	/**
	 * Actions to be performed by the player in case the rule is fulfilled
	 * @return array
	 */
	 getActions() {
	 	return this.actions;
	 }
	
	/**
	 * @param actions array Actions to be performed by the player in case the rule is fulfilled
	 */
	 setActions(actions) {
	 	this.actions = actions;
	 }
	
	/**
	 * Conditions to validate the rule
	 * @return array
	 */
	 getConditions() {
	 	return this.conditions;
	 }
	
	/**
	 * @param conditions array Conditions to validate the rule
	 */
	 setConditions(conditions) {
	 	this.conditions = conditions;
	 }
	
	/**
	 * Indicates what contexts should be tested by this rule
	 * @return array
	 */
	 getContexts() {
	 	return this.contexts;
	 }
	
	/**
	 * @param contexts array Indicates what contexts should be tested by this rule
	 */
	 setContexts(contexts) {
	 	this.contexts = contexts;
	 }
	
	/**
	 * Indicates that this rule is enough and no need to continue checking the rest of the rules
	 * @return bool
	 */
	 getStopProcessing() {
	 	return this.stopProcessing;
	 }
	
	/**
	 * @param stopProcessing bool Indicates that this rule is enough and no need to continue checking the rest of the rules
	 */
	 setStopProcessing(stopProcessing) {
	 	this.stopProcessing = stopProcessing;
	 }
	
	/**
	 * Indicates if we should force ks validation for admin ks users as well
	 * @return int
	 */
	 getForceAdminValidation() {
	 	return this.forceAdminValidation;
	 }
	
	/**
	 * @param forceAdminValidation int Indicates if we should force ks validation for admin ks users as well
	 */
	 setForceAdminValidation(forceAdminValidation) {
	 	this.forceAdminValidation = forceAdminValidation;
	 }
}
module.exports.Rule = Rule;

/**
 *
 */
class AccessControlProfile extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaAccessControlProfile';
	}
	
	/**
	 * The id of the Access Control Profile
	 * @return int
	 */
	 getId() {
	 	return this.id;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getPartnerId() {
	 	return this.partnerId;
	 }
	
	/**
	 * The name of the Access Control Profile
	 * @return string
	 */
	 getName() {
	 	return this.name;
	 }
	
	/**
	 * @param name string The name of the Access Control Profile
	 */
	 setName(name) {
	 	this.name = name;
	 }
	
	/**
	 * System name of the Access Control Profile
	 * @return string
	 */
	 getSystemName() {
	 	return this.systemName;
	 }
	
	/**
	 * @param systemName string System name of the Access Control Profile
	 */
	 setSystemName(systemName) {
	 	this.systemName = systemName;
	 }
	
	/**
	 * The description of the Access Control Profile
	 * @return string
	 */
	 getDescription() {
	 	return this.description;
	 }
	
	/**
	 * @param description string The description of the Access Control Profile
	 */
	 setDescription(description) {
	 	this.description = description;
	 }
	
	/**
	 * Creation time as Unix timestamp (In seconds)
	 * @return int
	 */
	 getCreatedAt() {
	 	return this.createdAt;
	 }
	
	/**
	 * Update time as Unix timestamp (In seconds)
	 * @return int
	 */
	 getUpdatedAt() {
	 	return this.updatedAt;
	 }
	
	/**
	 * True if this access control profile is the partner default
	 * @return int
	 */
	 getIsDefault() {
	 	return this.isDefault;
	 }
	
	/**
	 * @param isDefault int True if this access control profile is the partner default
	 */
	 setIsDefault(isDefault) {
	 	this.isDefault = isDefault;
	 }
	
	/**
	 * Array of access control rules
	 * @return array
	 */
	 getRules() {
	 	return this.rules;
	 }
	
	/**
	 * @param rules array Array of access control rules
	 */
	 setRules(rules) {
	 	this.rules = rules;
	 }
}
module.exports.AccessControlProfile = AccessControlProfile;

/**
 *
 */
class KeyValue extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaKeyValue';
	}
	
	/**
	 * 
	 * @return string
	 */
	 getKey() {
	 	return this.key;
	 }
	
	/**
	 * @param key string 
	 */
	 setKey(key) {
	 	this.key = key;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getValue() {
	 	return this.value;
	 }
	
	/**
	 * @param value string 
	 */
	 setValue(value) {
	 	this.value = value;
	 }
}
module.exports.KeyValue = KeyValue;

/**
 *
 */
class AccessControlScope extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaAccessControlScope';
	}
	
	/**
	 * URL to be used to test domain conditions
	 * @return string
	 */
	 getReferrer() {
	 	return this.referrer;
	 }
	
	/**
	 * @param referrer string URL to be used to test domain conditions
	 */
	 setReferrer(referrer) {
	 	this.referrer = referrer;
	 }
	
	/**
	 * IP to be used to test geographic location conditions
	 * @return string
	 */
	 getIp() {
	 	return this.ip;
	 }
	
	/**
	 * @param ip string IP to be used to test geographic location conditions
	 */
	 setIp(ip) {
	 	this.ip = ip;
	 }
	
	/**
	 * Kaltura session to be used to test session and user conditions
	 * @return string
	 */
	 getKs() {
	 	return this.ks;
	 }
	
	/**
	 * @param ks string Kaltura session to be used to test session and user conditions
	 */
	 setKs(ks) {
	 	this.ks = ks;
	 }
	
	/**
	 * Browser or client application to be used to test agent conditions
	 * @return string
	 */
	 getUserAgent() {
	 	return this.userAgent;
	 }
	
	/**
	 * @param userAgent string Browser or client application to be used to test agent conditions
	 */
	 setUserAgent(userAgent) {
	 	this.userAgent = userAgent;
	 }
	
	/**
	 * Unix timestamp (In seconds) to be used to test entry scheduling, keep null to use now
	 * @return int
	 */
	 getTime() {
	 	return this.time;
	 }
	
	/**
	 * @param time int Unix timestamp (In seconds) to be used to test entry scheduling, keep null to use now
	 */
	 setTime(time) {
	 	this.time = time;
	 }
	
	/**
	 * Indicates what contexts should be tested. No contexts means any context
	 * @return array
	 */
	 getContexts() {
	 	return this.contexts;
	 }
	
	/**
	 * @param contexts array Indicates what contexts should be tested. No contexts means any context
	 */
	 setContexts(contexts) {
	 	this.contexts = contexts;
	 }
	
	/**
	 * Array of hashes to pass to the access control profile scope
	 * @return array
	 */
	 getHashes() {
	 	return this.hashes;
	 }
	
	/**
	 * @param hashes array Array of hashes to pass to the access control profile scope
	 */
	 setHashes(hashes) {
	 	this.hashes = hashes;
	 }
}
module.exports.AccessControlScope = AccessControlScope;

/**
 *
 */
class ReportFilter extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaReportFilter';
	}
	
	/**
	 * The dimension whose values should be filtered
	 * @return string
	 */
	 getDimension() {
	 	return this.dimension;
	 }
	
	/**
	 * @param dimension string The dimension whose values should be filtered
	 */
	 setDimension(dimension) {
	 	this.dimension = dimension;
	 }
	
	/**
	 * The (comma separated) values to include in the filter
	 * @return string
	 */
	 getValues() {
	 	return this.values;
	 }
	
	/**
	 * @param values string The (comma separated) values to include in the filter
	 */
	 setValues(values) {
	 	this.values = values;
	 }
}
module.exports.ReportFilter = ReportFilter;

/**
 *
 */
class AnalyticsFilter extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaAnalyticsFilter';
	}
	
	/**
	 * Query start time (in local time) MM/dd/yyyy HH:mi
	 * @return string
	 */
	 getFrom_time() {
	 	return this.from_time;
	 }
	
	/**
	 * @param from_time string Query start time (in local time) MM/dd/yyyy HH:mi
	 */
	 setFrom_time(from_time) {
	 	this.from_time = from_time;
	 }
	
	/**
	 * Query end time (in local time) MM/dd/yyyy HH:mi
	 * @return string
	 */
	 getTo_time() {
	 	return this.to_time;
	 }
	
	/**
	 * @param to_time string Query end time (in local time) MM/dd/yyyy HH:mi
	 */
	 setTo_time(to_time) {
	 	this.to_time = to_time;
	 }
	
	/**
	 * Comma separated metrics list
	 * @return string
	 */
	 getMetrics() {
	 	return this.metrics;
	 }
	
	/**
	 * @param metrics string Comma separated metrics list
	 */
	 setMetrics(metrics) {
	 	this.metrics = metrics;
	 }
	
	/**
	 * Timezone offset from UTC (in minutes)
	 * @return float
	 */
	 getUtcOffset() {
	 	return this.utcOffset;
	 }
	
	/**
	 * @param utcOffset float Timezone offset from UTC (in minutes)
	 */
	 setUtcOffset(utcOffset) {
	 	this.utcOffset = utcOffset;
	 }
	
	/**
	 * Comma separated dimensions list
	 * @return string
	 */
	 getDimensions() {
	 	return this.dimensions;
	 }
	
	/**
	 * @param dimensions string Comma separated dimensions list
	 */
	 setDimensions(dimensions) {
	 	this.dimensions = dimensions;
	 }
	
	/**
	 * Array of filters
	 * @return array
	 */
	 getFilters() {
	 	return this.filters;
	 }
	
	/**
	 * @param filters array Array of filters
	 */
	 setFilters(filters) {
	 	this.filters = filters;
	 }
	
	/**
	 * Query order by metric/dimension
	 * @return string
	 */
	 getOrderBy() {
	 	return this.orderBy;
	 }
	
	/**
	 * @param orderBy string Query order by metric/dimension
	 */
	 setOrderBy(orderBy) {
	 	this.orderBy = orderBy;
	 }
}
module.exports.AnalyticsFilter = AnalyticsFilter;

/**
 *
 */
class CuePoint extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaCuePoint';
	}
	
	/**
	 * 
	 * @return string
	 */
	 getId() {
	 	return this.id;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getCuePointType() {
	 	return this.cuePointType;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getStatus() {
	 	return this.status;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getEntryId() {
	 	return this.entryId;
	 }
	
	/**
	 * @param entryId string 
	 */
	 setEntryId(entryId) {
	 	this.entryId = entryId;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getPartnerId() {
	 	return this.partnerId;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getCreatedAt() {
	 	return this.createdAt;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getUpdatedAt() {
	 	return this.updatedAt;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getTriggeredAt() {
	 	return this.triggeredAt;
	 }
	
	/**
	 * @param triggeredAt int 
	 */
	 setTriggeredAt(triggeredAt) {
	 	this.triggeredAt = triggeredAt;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getTags() {
	 	return this.tags;
	 }
	
	/**
	 * @param tags string 
	 */
	 setTags(tags) {
	 	this.tags = tags;
	 }
	
	/**
	 * Start time in milliseconds
	 * @return int
	 */
	 getStartTime() {
	 	return this.startTime;
	 }
	
	/**
	 * @param startTime int Start time in milliseconds
	 */
	 setStartTime(startTime) {
	 	this.startTime = startTime;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getUserId() {
	 	return this.userId;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getPartnerData() {
	 	return this.partnerData;
	 }
	
	/**
	 * @param partnerData string 
	 */
	 setPartnerData(partnerData) {
	 	this.partnerData = partnerData;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getPartnerSortValue() {
	 	return this.partnerSortValue;
	 }
	
	/**
	 * @param partnerSortValue int 
	 */
	 setPartnerSortValue(partnerSortValue) {
	 	this.partnerSortValue = partnerSortValue;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getForceStop() {
	 	return this.forceStop;
	 }
	
	/**
	 * @param forceStop int 
	 */
	 setForceStop(forceStop) {
	 	this.forceStop = forceStop;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getThumbOffset() {
	 	return this.thumbOffset;
	 }
	
	/**
	 * @param thumbOffset int 
	 */
	 setThumbOffset(thumbOffset) {
	 	this.thumbOffset = thumbOffset;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getSystemName() {
	 	return this.systemName;
	 }
	
	/**
	 * @param systemName string 
	 */
	 setSystemName(systemName) {
	 	this.systemName = systemName;
	 }
}
module.exports.CuePoint = CuePoint;

/**
 *
 */
class Annotation extends CuePoint{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaAnnotation';
	}
	
	/**
	 * 
	 * @return string
	 */
	 getParentId() {
	 	return this.parentId;
	 }
	
	/**
	 * @param parentId string 
	 */
	 setParentId(parentId) {
	 	this.parentId = parentId;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getText() {
	 	return this.text;
	 }
	
	/**
	 * @param text string 
	 */
	 setText(text) {
	 	this.text = text;
	 }
	
	/**
	 * End time in milliseconds
	 * @return int
	 */
	 getEndTime() {
	 	return this.endTime;
	 }
	
	/**
	 * @param endTime int End time in milliseconds
	 */
	 setEndTime(endTime) {
	 	this.endTime = endTime;
	 }
	
	/**
	 * Duration in milliseconds
	 * @return int
	 */
	 getDuration() {
	 	return this.duration;
	 }
	
	/**
	 * Depth in the tree
	 * @return int
	 */
	 getDepth() {
	 	return this.depth;
	 }
	
	/**
	 * Number of all descendants
	 * @return int
	 */
	 getChildrenCount() {
	 	return this.childrenCount;
	 }
	
	/**
	 * Number of children, first generation only
	 * @return int
	 */
	 getDirectChildrenCount() {
	 	return this.directChildrenCount;
	 }
	
	/**
	 * Is the annotation public
	 * @return int
	 */
	 getIsPublic() {
	 	return this.isPublic;
	 }
	
	/**
	 * @param isPublic int Is the annotation public
	 */
	 setIsPublic(isPublic) {
	 	this.isPublic = isPublic;
	 }
	
	/**
	 * Should the cue point get indexed on the entry
	 * @return int
	 */
	 getSearchableOnEntry() {
	 	return this.searchableOnEntry;
	 }
	
	/**
	 * @param searchableOnEntry int Should the cue point get indexed on the entry
	 */
	 setSearchableOnEntry(searchableOnEntry) {
	 	this.searchableOnEntry = searchableOnEntry;
	 }
}
module.exports.Annotation = Annotation;

/**
 *
 */
class ApiExceptionArg extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaApiExceptionArg';
	}
	
	/**
	 * 
	 * @return string
	 */
	 getName() {
	 	return this.name;
	 }
	
	/**
	 * @param name string 
	 */
	 setName(name) {
	 	this.name = name;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getValue() {
	 	return this.value;
	 }
	
	/**
	 * @param value string 
	 */
	 setValue(value) {
	 	this.value = value;
	 }
}
module.exports.ApiExceptionArg = ApiExceptionArg;

/**
 *
 */
class AppToken extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaAppToken';
	}
	
	/**
	 * The id of the application token
	 * @return string
	 */
	 getId() {
	 	return this.id;
	 }
	
	/**
	 * The application token
	 * @return string
	 */
	 getToken() {
	 	return this.token;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getPartnerId() {
	 	return this.partnerId;
	 }
	
	/**
	 * Creation time as Unix timestamp (In seconds)
	 * @return int
	 */
	 getCreatedAt() {
	 	return this.createdAt;
	 }
	
	/**
	 * Update time as Unix timestamp (In seconds)
	 * @return int
	 */
	 getUpdatedAt() {
	 	return this.updatedAt;
	 }
	
	/**
	 * Application token status
	 * @return int
	 */
	 getStatus() {
	 	return this.status;
	 }
	
	/**
	 * Expiry time of current token (unix timestamp in seconds)
	 * @return int
	 */
	 getExpiry() {
	 	return this.expiry;
	 }
	
	/**
	 * @param expiry int Expiry time of current token (unix timestamp in seconds)
	 */
	 setExpiry(expiry) {
	 	this.expiry = expiry;
	 }
	
	/**
	 * Type of KS (Kaltura Session) that created using the current token
	 * @return int
	 */
	 getSessionType() {
	 	return this.sessionType;
	 }
	
	/**
	 * @param sessionType int Type of KS (Kaltura Session) that created using the current token
	 */
	 setSessionType(sessionType) {
	 	this.sessionType = sessionType;
	 }
	
	/**
	 * User id of KS (Kaltura Session) that created using the current token
	 * @return string
	 */
	 getSessionUserId() {
	 	return this.sessionUserId;
	 }
	
	/**
	 * @param sessionUserId string User id of KS (Kaltura Session) that created using the current token
	 */
	 setSessionUserId(sessionUserId) {
	 	this.sessionUserId = sessionUserId;
	 }
	
	/**
	 * Expiry duration of KS (Kaltura Session) that created using the current token (in seconds)
	 * @return int
	 */
	 getSessionDuration() {
	 	return this.sessionDuration;
	 }
	
	/**
	 * @param sessionDuration int Expiry duration of KS (Kaltura Session) that created using the current token (in seconds)
	 */
	 setSessionDuration(sessionDuration) {
	 	this.sessionDuration = sessionDuration;
	 }
	
	/**
	 * Comma separated privileges to be applied on KS (Kaltura Session) that created using the current token
	 * @return string
	 */
	 getSessionPrivileges() {
	 	return this.sessionPrivileges;
	 }
	
	/**
	 * @param sessionPrivileges string Comma separated privileges to be applied on KS (Kaltura Session) that created using the current token
	 */
	 setSessionPrivileges(sessionPrivileges) {
	 	this.sessionPrivileges = sessionPrivileges;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getHashType() {
	 	return this.hashType;
	 }
	
	/**
	 * @param hashType string 
	 */
	 setHashType(hashType) {
	 	this.hashType = hashType;
	 }
}
module.exports.AppToken = AppToken;

/**
 *
 */
class Asset extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaAsset';
	}
	
	/**
	 * The ID of the Flavor Asset
	 * @return string
	 */
	 getId() {
	 	return this.id;
	 }
	
	/**
	 * The entry ID of the Flavor Asset
	 * @return string
	 */
	 getEntryId() {
	 	return this.entryId;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getPartnerId() {
	 	return this.partnerId;
	 }
	
	/**
	 * The version of the Flavor Asset
	 * @return int
	 */
	 getVersion() {
	 	return this.version;
	 }
	
	/**
	 * The size (in KBytes) of the Flavor Asset
	 * @return int
	 */
	 getSize() {
	 	return this.size;
	 }
	
	/**
	 * Tags used to identify the Flavor Asset in various scenarios
	 * @return string
	 */
	 getTags() {
	 	return this.tags;
	 }
	
	/**
	 * @param tags string Tags used to identify the Flavor Asset in various scenarios
	 */
	 setTags(tags) {
	 	this.tags = tags;
	 }
	
	/**
	 * The file extension
	 * @return string
	 */
	 getFileExt() {
	 	return this.fileExt;
	 }
	
	/**
	 * @param fileExt string The file extension
	 */
	 setFileExt(fileExt) {
	 	this.fileExt = fileExt;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getCreatedAt() {
	 	return this.createdAt;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getUpdatedAt() {
	 	return this.updatedAt;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getDeletedAt() {
	 	return this.deletedAt;
	 }
	
	/**
	 * System description, error message, warnings and failure cause
	 * @return string
	 */
	 getDescription() {
	 	return this.description;
	 }
	
	/**
	 * Partner private data
	 * @return string
	 */
	 getPartnerData() {
	 	return this.partnerData;
	 }
	
	/**
	 * @param partnerData string Partner private data
	 */
	 setPartnerData(partnerData) {
	 	this.partnerData = partnerData;
	 }
	
	/**
	 * Partner friendly description
	 * @return string
	 */
	 getPartnerDescription() {
	 	return this.partnerDescription;
	 }
	
	/**
	 * @param partnerDescription string Partner friendly description
	 */
	 setPartnerDescription(partnerDescription) {
	 	this.partnerDescription = partnerDescription;
	 }
	
	/**
	 * Comma separated list of source flavor params ids
	 * @return string
	 */
	 getActualSourceAssetParamsIds() {
	 	return this.actualSourceAssetParamsIds;
	 }
	
	/**
	 * @param actualSourceAssetParamsIds string Comma separated list of source flavor params ids
	 */
	 setActualSourceAssetParamsIds(actualSourceAssetParamsIds) {
	 	this.actualSourceAssetParamsIds = actualSourceAssetParamsIds;
	 }
}
module.exports.Asset = Asset;

/**
 *
 */
class AssetDistributionCondition extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaAssetDistributionCondition';
	}
}
module.exports.AssetDistributionCondition = AssetDistributionCondition;

/**
 *
 */
class AssetDistributionRule extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaAssetDistributionRule';
	}
	
	/**
	 * The validation error description that will be set on the "data" property on KalturaDistributionValidationErrorMissingAsset if rule was not fulfilled
	 * @return string
	 */
	 getValidationError() {
	 	return this.validationError;
	 }
	
	/**
	 * @param validationError string The validation error description that will be set on the "data" property on KalturaDistributionValidationErrorMissingAsset if rule was not fulfilled
	 */
	 setValidationError(validationError) {
	 	this.validationError = validationError;
	 }
	
	/**
	 * An array of asset distribution conditions
	 * @return array
	 */
	 getAssetDistributionConditions() {
	 	return this.assetDistributionConditions;
	 }
	
	/**
	 * @param assetDistributionConditions array An array of asset distribution conditions
	 */
	 setAssetDistributionConditions(assetDistributionConditions) {
	 	this.assetDistributionConditions = assetDistributionConditions;
	 }
}
module.exports.AssetDistributionRule = AssetDistributionRule;

/**
 *
 */
class String extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaString';
	}
	
	/**
	 * 
	 * @return string
	 */
	 getValue() {
	 	return this.value;
	 }
	
	/**
	 * @param value string 
	 */
	 setValue(value) {
	 	this.value = value;
	 }
}
module.exports.String = String;

/**
 *
 */
class AssetParams extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaAssetParams';
	}
	
	/**
	 * The id of the Flavor Params
	 * @return int
	 */
	 getId() {
	 	return this.id;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getPartnerId() {
	 	return this.partnerId;
	 }
	
	/**
	 * @param partnerId int 
	 */
	 setPartnerId(partnerId) {
	 	this.partnerId = partnerId;
	 }
	
	/**
	 * The name of the Flavor Params
	 * @return string
	 */
	 getName() {
	 	return this.name;
	 }
	
	/**
	 * @param name string The name of the Flavor Params
	 */
	 setName(name) {
	 	this.name = name;
	 }
	
	/**
	 * System name of the Flavor Params
	 * @return string
	 */
	 getSystemName() {
	 	return this.systemName;
	 }
	
	/**
	 * @param systemName string System name of the Flavor Params
	 */
	 setSystemName(systemName) {
	 	this.systemName = systemName;
	 }
	
	/**
	 * The description of the Flavor Params
	 * @return string
	 */
	 getDescription() {
	 	return this.description;
	 }
	
	/**
	 * @param description string The description of the Flavor Params
	 */
	 setDescription(description) {
	 	this.description = description;
	 }
	
	/**
	 * Creation date as Unix timestamp (In seconds)
	 * @return int
	 */
	 getCreatedAt() {
	 	return this.createdAt;
	 }
	
	/**
	 * True if those Flavor Params are part of system defaults
	 * @return int
	 */
	 getIsSystemDefault() {
	 	return this.isSystemDefault;
	 }
	
	/**
	 * The Flavor Params tags are used to identify the flavor for different usage (e.g. web, hd, mobile)
	 * @return string
	 */
	 getTags() {
	 	return this.tags;
	 }
	
	/**
	 * @param tags string The Flavor Params tags are used to identify the flavor for different usage (e.g. web, hd, mobile)
	 */
	 setTags(tags) {
	 	this.tags = tags;
	 }
	
	/**
	 * Array of partner permisison names that required for using this asset params
	 * @return array
	 */
	 getRequiredPermissions() {
	 	return this.requiredPermissions;
	 }
	
	/**
	 * @param requiredPermissions array Array of partner permisison names that required for using this asset params
	 */
	 setRequiredPermissions(requiredPermissions) {
	 	this.requiredPermissions = requiredPermissions;
	 }
	
	/**
	 * Id of remote storage profile that used to get the source, zero indicates Kaltura data center
	 * @return int
	 */
	 getSourceRemoteStorageProfileId() {
	 	return this.sourceRemoteStorageProfileId;
	 }
	
	/**
	 * @param sourceRemoteStorageProfileId int Id of remote storage profile that used to get the source, zero indicates Kaltura data center
	 */
	 setSourceRemoteStorageProfileId(sourceRemoteStorageProfileId) {
	 	this.sourceRemoteStorageProfileId = sourceRemoteStorageProfileId;
	 }
	
	/**
	 * Comma seperated ids of remote storage profiles that the flavor distributed to, the distribution done by the conversion engine
	 * @return int
	 */
	 getRemoteStorageProfileIds() {
	 	return this.remoteStorageProfileIds;
	 }
	
	/**
	 * @param remoteStorageProfileIds int Comma seperated ids of remote storage profiles that the flavor distributed to, the distribution done by the conversion engine
	 */
	 setRemoteStorageProfileIds(remoteStorageProfileIds) {
	 	this.remoteStorageProfileIds = remoteStorageProfileIds;
	 }
	
	/**
	 * Media parser type to be used for post-conversion validation
	 * @return string
	 */
	 getMediaParserType() {
	 	return this.mediaParserType;
	 }
	
	/**
	 * @param mediaParserType string Media parser type to be used for post-conversion validation
	 */
	 setMediaParserType(mediaParserType) {
	 	this.mediaParserType = mediaParserType;
	 }
	
	/**
	 * Comma seperated ids of source flavor params this flavor is created from
	 * @return string
	 */
	 getSourceAssetParamsIds() {
	 	return this.sourceAssetParamsIds;
	 }
	
	/**
	 * @param sourceAssetParamsIds string Comma seperated ids of source flavor params this flavor is created from
	 */
	 setSourceAssetParamsIds(sourceAssetParamsIds) {
	 	this.sourceAssetParamsIds = sourceAssetParamsIds;
	 }
}
module.exports.AssetParams = AssetParams;

/**
 *
 */
class Resource extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaResource';
	}
}
module.exports.Resource = Resource;

/**
 *
 */
class ContentResource extends Resource{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaContentResource';
	}
}
module.exports.ContentResource = ContentResource;

/**
 *
 */
class AssetParamsResourceContainer extends Resource{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaAssetParamsResourceContainer';
	}
	
	/**
	 * The content resource to associate with asset params
	 * @return ContentResource
	 */
	 getResource() {
	 	return this.resource;
	 }
	
	/**
	 * @param resource ContentResource The content resource to associate with asset params
	 */
	 setResource(resource) {
	 	this.resource = resource;
	 }
	
	/**
	 * The asset params to associate with the reaource
	 * @return int
	 */
	 getAssetParamsId() {
	 	return this.assetParamsId;
	 }
	
	/**
	 * @param assetParamsId int The asset params to associate with the reaource
	 */
	 setAssetParamsId(assetParamsId) {
	 	this.assetParamsId = assetParamsId;
	 }
}
module.exports.AssetParamsResourceContainer = AssetParamsResourceContainer;

/**
 *
 */
class AssetServeOptions extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaAssetServeOptions';
	}
	
	/**
	 * 
	 * @return bool
	 */
	 getDownload() {
	 	return this.download;
	 }
	
	/**
	 * @param download bool 
	 */
	 setDownload(download) {
	 	this.download = download;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getReferrer() {
	 	return this.referrer;
	 }
	
	/**
	 * @param referrer string 
	 */
	 setReferrer(referrer) {
	 	this.referrer = referrer;
	 }
}
module.exports.AssetServeOptions = AssetServeOptions;

/**
 *
 */
class AttachmentAsset extends Asset{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaAttachmentAsset';
	}
	
	/**
	 * The filename of the attachment asset content
	 * @return string
	 */
	 getFilename() {
	 	return this.filename;
	 }
	
	/**
	 * @param filename string The filename of the attachment asset content
	 */
	 setFilename(filename) {
	 	this.filename = filename;
	 }
	
	/**
	 * Attachment asset title
	 * @return string
	 */
	 getTitle() {
	 	return this.title;
	 }
	
	/**
	 * @param title string Attachment asset title
	 */
	 setTitle(title) {
	 	this.title = title;
	 }
	
	/**
	 * The attachment format
	 * @return string
	 */
	 getFormat() {
	 	return this.format;
	 }
	
	/**
	 * @param format string The attachment format
	 */
	 setFormat(format) {
	 	this.format = format;
	 }
	
	/**
	 * The status of the asset
	 * @return int
	 */
	 getStatus() {
	 	return this.status;
	 }
}
module.exports.AttachmentAsset = AttachmentAsset;

/**
 *
 */
class OperationAttributes extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaOperationAttributes';
	}
}
module.exports.OperationAttributes = OperationAttributes;

/**
 *
 */
class BaseEntry extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaBaseEntry';
	}
	
	/**
	 * Auto generated 10 characters alphanumeric string
	 * @return string
	 */
	 getId() {
	 	return this.id;
	 }
	
	/**
	 * Entry name (Min 1 chars)
	 * @return string
	 */
	 getName() {
	 	return this.name;
	 }
	
	/**
	 * @param name string Entry name (Min 1 chars)
	 */
	 setName(name) {
	 	this.name = name;
	 }
	
	/**
	 * Entry description
	 * @return string
	 */
	 getDescription() {
	 	return this.description;
	 }
	
	/**
	 * @param description string Entry description
	 */
	 setDescription(description) {
	 	this.description = description;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getPartnerId() {
	 	return this.partnerId;
	 }
	
	/**
	 * The ID of the user who is the owner of this entry
	 * @return string
	 */
	 getUserId() {
	 	return this.userId;
	 }
	
	/**
	 * @param userId string The ID of the user who is the owner of this entry
	 */
	 setUserId(userId) {
	 	this.userId = userId;
	 }
	
	/**
	 * The ID of the user who created this entry
	 * @return string
	 */
	 getCreatorId() {
	 	return this.creatorId;
	 }
	
	/**
	 * @param creatorId string The ID of the user who created this entry
	 */
	 setCreatorId(creatorId) {
	 	this.creatorId = creatorId;
	 }
	
	/**
	 * Entry tags
	 * @return string
	 */
	 getTags() {
	 	return this.tags;
	 }
	
	/**
	 * @param tags string Entry tags
	 */
	 setTags(tags) {
	 	this.tags = tags;
	 }
	
	/**
	 * Entry admin tags can be updated only by administrators
	 * @return string
	 */
	 getAdminTags() {
	 	return this.adminTags;
	 }
	
	/**
	 * @param adminTags string Entry admin tags can be updated only by administrators
	 */
	 setAdminTags(adminTags) {
	 	this.adminTags = adminTags;
	 }
	
	/**
	 * Comma separated list of full names of categories to which this entry belongs. Only categories that don't have entitlement (privacy context) are listed, to retrieve the full list of categories, use the categoryEntry.list action
	 * @return string
	 */
	 getCategories() {
	 	return this.categories;
	 }
	
	/**
	 * @param categories string Comma separated list of full names of categories to which this entry belongs. Only categories that don't have entitlement (privacy context) are listed, to retrieve the full list of categories, use the categoryEntry.list action
	 */
	 setCategories(categories) {
	 	this.categories = categories;
	 }
	
	/**
	 * Comma separated list of ids of categories to which this entry belongs. Only categories that don't have entitlement (privacy context) are listed, to retrieve the full list of categories, use the categoryEntry.list action
	 * @return string
	 */
	 getCategoriesIds() {
	 	return this.categoriesIds;
	 }
	
	/**
	 * @param categoriesIds string Comma separated list of ids of categories to which this entry belongs. Only categories that don't have entitlement (privacy context) are listed, to retrieve the full list of categories, use the categoryEntry.list action
	 */
	 setCategoriesIds(categoriesIds) {
	 	this.categoriesIds = categoriesIds;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getStatus() {
	 	return this.status;
	 }
	
	/**
	 * Entry moderation status
	 * @return int
	 */
	 getModerationStatus() {
	 	return this.moderationStatus;
	 }
	
	/**
	 * Number of moderation requests waiting for this entry
	 * @return int
	 */
	 getModerationCount() {
	 	return this.moderationCount;
	 }
	
	/**
	 * The type of the entry, this is auto filled by the derived entry object
	 * @return string
	 */
	 getType() {
	 	return this.type;
	 }
	
	/**
	 * @param type string The type of the entry, this is auto filled by the derived entry object
	 */
	 setType(type) {
	 	this.type = type;
	 }
	
	/**
	 * Entry creation date as Unix timestamp (In seconds)
	 * @return int
	 */
	 getCreatedAt() {
	 	return this.createdAt;
	 }
	
	/**
	 * Entry update date as Unix timestamp (In seconds)
	 * @return int
	 */
	 getUpdatedAt() {
	 	return this.updatedAt;
	 }
	
	/**
	 * The calculated average rank. rank = totalRank / votes
	 * @return float
	 */
	 getRank() {
	 	return this.rank;
	 }
	
	/**
	 * The sum of all rank values submitted to the baseEntry.anonymousRank action
	 * @return int
	 */
	 getTotalRank() {
	 	return this.totalRank;
	 }
	
	/**
	 * A count of all requests made to the baseEntry.anonymousRank action
	 * @return int
	 */
	 getVotes() {
	 	return this.votes;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getGroupId() {
	 	return this.groupId;
	 }
	
	/**
	 * @param groupId int 
	 */
	 setGroupId(groupId) {
	 	this.groupId = groupId;
	 }
	
	/**
	 * Can be used to store various partner related data as a string
	 * @return string
	 */
	 getPartnerData() {
	 	return this.partnerData;
	 }
	
	/**
	 * @param partnerData string Can be used to store various partner related data as a string
	 */
	 setPartnerData(partnerData) {
	 	this.partnerData = partnerData;
	 }
	
	/**
	 * Download URL for the entry
	 * @return string
	 */
	 getDownloadUrl() {
	 	return this.downloadUrl;
	 }
	
	/**
	 * Indexed search text for full text search
	 * @return string
	 */
	 getSearchText() {
	 	return this.searchText;
	 }
	
	/**
	 * License type used for this entry
	 * @return int
	 */
	 getLicenseType() {
	 	return this.licenseType;
	 }
	
	/**
	 * @param licenseType int License type used for this entry
	 */
	 setLicenseType(licenseType) {
	 	this.licenseType = licenseType;
	 }
	
	/**
	 * Version of the entry data
	 * @return int
	 */
	 getVersion() {
	 	return this.version;
	 }
	
	/**
	 * Thumbnail URL
	 * @return string
	 */
	 getThumbnailUrl() {
	 	return this.thumbnailUrl;
	 }
	
	/**
	 * The Access Control ID assigned to this entry (null when not set, send -1 to remove)
	 * @return int
	 */
	 getAccessControlId() {
	 	return this.accessControlId;
	 }
	
	/**
	 * @param accessControlId int The Access Control ID assigned to this entry (null when not set, send -1 to remove)
	 */
	 setAccessControlId(accessControlId) {
	 	this.accessControlId = accessControlId;
	 }
	
	/**
	 * Entry scheduling start date (null when not set, send -1 to remove)
	 * @return int
	 */
	 getStartDate() {
	 	return this.startDate;
	 }
	
	/**
	 * @param startDate int Entry scheduling start date (null when not set, send -1 to remove)
	 */
	 setStartDate(startDate) {
	 	this.startDate = startDate;
	 }
	
	/**
	 * Entry scheduling end date (null when not set, send -1 to remove)
	 * @return int
	 */
	 getEndDate() {
	 	return this.endDate;
	 }
	
	/**
	 * @param endDate int Entry scheduling end date (null when not set, send -1 to remove)
	 */
	 setEndDate(endDate) {
	 	this.endDate = endDate;
	 }
	
	/**
	 * Entry external reference id
	 * @return string
	 */
	 getReferenceId() {
	 	return this.referenceId;
	 }
	
	/**
	 * @param referenceId string Entry external reference id
	 */
	 setReferenceId(referenceId) {
	 	this.referenceId = referenceId;
	 }
	
	/**
	 * ID of temporary entry that will replace this entry when it's approved and ready for replacement
	 * @return string
	 */
	 getReplacingEntryId() {
	 	return this.replacingEntryId;
	 }
	
	/**
	 * ID of the entry that will be replaced when the replacement approved and this entry is ready
	 * @return string
	 */
	 getReplacedEntryId() {
	 	return this.replacedEntryId;
	 }
	
	/**
	 * Status of the replacement readiness and approval
	 * @return string
	 */
	 getReplacementStatus() {
	 	return this.replacementStatus;
	 }
	
	/**
	 * Can be used to store various partner related data as a numeric value
	 * @return int
	 */
	 getPartnerSortValue() {
	 	return this.partnerSortValue;
	 }
	
	/**
	 * @param partnerSortValue int Can be used to store various partner related data as a numeric value
	 */
	 setPartnerSortValue(partnerSortValue) {
	 	this.partnerSortValue = partnerSortValue;
	 }
	
	/**
	 * Override the default ingestion profile
	 * @return int
	 */
	 getConversionProfileId() {
	 	return this.conversionProfileId;
	 }
	
	/**
	 * @param conversionProfileId int Override the default ingestion profile
	 */
	 setConversionProfileId(conversionProfileId) {
	 	this.conversionProfileId = conversionProfileId;
	 }
	
	/**
	 * IF not empty, points to an entry ID the should replace this current entry's id
	 * @return string
	 */
	 getRedirectEntryId() {
	 	return this.redirectEntryId;
	 }
	
	/**
	 * @param redirectEntryId string IF not empty, points to an entry ID the should replace this current entry's id
	 */
	 setRedirectEntryId(redirectEntryId) {
	 	this.redirectEntryId = redirectEntryId;
	 }
	
	/**
	 * ID of source root entry, used for clipped, skipped and cropped entries that created from another entry
	 * @return string
	 */
	 getRootEntryId() {
	 	return this.rootEntryId;
	 }
	
	/**
	 * ID of source root entry, used for defining entires association
	 * @return string
	 */
	 getParentEntryId() {
	 	return this.parentEntryId;
	 }
	
	/**
	 * @param parentEntryId string ID of source root entry, used for defining entires association
	 */
	 setParentEntryId(parentEntryId) {
	 	this.parentEntryId = parentEntryId;
	 }
	
	/**
	 * clipping, skipping and cropping attributes that used to create this entry
	 * @return array
	 */
	 getOperationAttributes() {
	 	return this.operationAttributes;
	 }
	
	/**
	 * @param operationAttributes array clipping, skipping and cropping attributes that used to create this entry
	 */
	 setOperationAttributes(operationAttributes) {
	 	this.operationAttributes = operationAttributes;
	 }
	
	/**
	 * list of user ids that are entitled to edit the entry (no server enforcement) The difference between entitledUsersEdit and entitledUsersPublish is applicative only
	 * @return string
	 */
	 getEntitledUsersEdit() {
	 	return this.entitledUsersEdit;
	 }
	
	/**
	 * @param entitledUsersEdit string list of user ids that are entitled to edit the entry (no server enforcement) The difference between entitledUsersEdit and entitledUsersPublish is applicative only
	 */
	 setEntitledUsersEdit(entitledUsersEdit) {
	 	this.entitledUsersEdit = entitledUsersEdit;
	 }
	
	/**
	 * list of user ids that are entitled to publish the entry (no server enforcement) The difference between entitledUsersEdit and entitledUsersPublish is applicative only
	 * @return string
	 */
	 getEntitledUsersPublish() {
	 	return this.entitledUsersPublish;
	 }
	
	/**
	 * @param entitledUsersPublish string list of user ids that are entitled to publish the entry (no server enforcement) The difference between entitledUsersEdit and entitledUsersPublish is applicative only
	 */
	 setEntitledUsersPublish(entitledUsersPublish) {
	 	this.entitledUsersPublish = entitledUsersPublish;
	 }
	
	/**
	 * Comma seperated string of the capabilities of the entry. Any capability needed can be added to this list
	 * @return string
	 */
	 getCapabilities() {
	 	return this.capabilities;
	 }
	
	/**
	 * Template entry id
	 * @return string
	 */
	 getTemplateEntryId() {
	 	return this.templateEntryId;
	 }
	
	/**
	 * @param templateEntryId string Template entry id
	 */
	 setTemplateEntryId(templateEntryId) {
	 	this.templateEntryId = templateEntryId;
	 }
	
	/**
	 * should we display this entry in search
	 * @return int
	 */
	 getDisplayInSearch() {
	 	return this.displayInSearch;
	 }
	
	/**
	 * @param displayInSearch int should we display this entry in search
	 */
	 setDisplayInSearch(displayInSearch) {
	 	this.displayInSearch = displayInSearch;
	 }
}
module.exports.BaseEntry = BaseEntry;

/**
 *
 */
class BaseEntryCloneOptionItem extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaBaseEntryCloneOptionItem';
	}
}
module.exports.BaseEntryCloneOptionItem = BaseEntryCloneOptionItem;

/**
 *
 */
class BaseResponseProfile extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaBaseResponseProfile';
	}
}
module.exports.BaseResponseProfile = BaseResponseProfile;

/**
 *
 */
class BaseSyndicationFeed extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaBaseSyndicationFeed';
	}
	
	/**
	 * 
	 * @return string
	 */
	 getId() {
	 	return this.id;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getFeedUrl() {
	 	return this.feedUrl;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getPartnerId() {
	 	return this.partnerId;
	 }
	
	/**
	 * link a playlist that will set what content the feed will include
 * if empty, all content will be included in feed
	 * @return string
	 */
	 getPlaylistId() {
	 	return this.playlistId;
	 }
	
	/**
	 * @param playlistId string link a playlist that will set what content the feed will include
 * if empty, all content will be included in feed
	 */
	 setPlaylistId(playlistId) {
	 	this.playlistId = playlistId;
	 }
	
	/**
	 * feed name
	 * @return string
	 */
	 getName() {
	 	return this.name;
	 }
	
	/**
	 * @param name string feed name
	 */
	 setName(name) {
	 	this.name = name;
	 }
	
	/**
	 * feed status
	 * @return int
	 */
	 getStatus() {
	 	return this.status;
	 }
	
	/**
	 * feed type
	 * @return int
	 */
	 getType() {
	 	return this.type;
	 }
	
	/**
	 * @param type int feed type
	 */
	 setType(type) {
	 	this.type = type;
	 }
	
	/**
	 * Base URL for each video, on the partners site
 * This is required by all syndication types
	 * @return string
	 */
	 getLandingPage() {
	 	return this.landingPage;
	 }
	
	/**
	 * @param landingPage string Base URL for each video, on the partners site
 * This is required by all syndication types
	 */
	 setLandingPage(landingPage) {
	 	this.landingPage = landingPage;
	 }
	
	/**
	 * Creation date as Unix timestamp (In seconds)
	 * @return int
	 */
	 getCreatedAt() {
	 	return this.createdAt;
	 }
	
	/**
	 * allow_embed tells google OR yahoo weather to allow embedding the video on google OR yahoo video results
 * or just to provide a link to the landing page.
 * it is applied on the video-player_loc property in the XML (google)
 * and addes media-player tag (yahoo)
	 * @return bool
	 */
	 getAllowEmbed() {
	 	return this.allowEmbed;
	 }
	
	/**
	 * @param allowEmbed bool allow_embed tells google OR yahoo weather to allow embedding the video on google OR yahoo video results
 * or just to provide a link to the landing page.
 * it is applied on the video-player_loc property in the XML (google)
 * and addes media-player tag (yahoo)
	 */
	 setAllowEmbed(allowEmbed) {
	 	this.allowEmbed = allowEmbed;
	 }
	
	/**
	 * Select a uiconf ID as player skin to include in the kwidget url
	 * @return int
	 */
	 getPlayerUiconfId() {
	 	return this.playerUiconfId;
	 }
	
	/**
	 * @param playerUiconfId int Select a uiconf ID as player skin to include in the kwidget url
	 */
	 setPlayerUiconfId(playerUiconfId) {
	 	this.playerUiconfId = playerUiconfId;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getFlavorParamId() {
	 	return this.flavorParamId;
	 }
	
	/**
	 * @param flavorParamId int 
	 */
	 setFlavorParamId(flavorParamId) {
	 	this.flavorParamId = flavorParamId;
	 }
	
	/**
	 * 
	 * @return bool
	 */
	 getTranscodeExistingContent() {
	 	return this.transcodeExistingContent;
	 }
	
	/**
	 * @param transcodeExistingContent bool 
	 */
	 setTranscodeExistingContent(transcodeExistingContent) {
	 	this.transcodeExistingContent = transcodeExistingContent;
	 }
	
	/**
	 * 
	 * @return bool
	 */
	 getAddToDefaultConversionProfile() {
	 	return this.addToDefaultConversionProfile;
	 }
	
	/**
	 * @param addToDefaultConversionProfile bool 
	 */
	 setAddToDefaultConversionProfile(addToDefaultConversionProfile) {
	 	this.addToDefaultConversionProfile = addToDefaultConversionProfile;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getCategories() {
	 	return this.categories;
	 }
	
	/**
	 * @param categories string 
	 */
	 setCategories(categories) {
	 	this.categories = categories;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getStorageId() {
	 	return this.storageId;
	 }
	
	/**
	 * @param storageId int 
	 */
	 setStorageId(storageId) {
	 	this.storageId = storageId;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getEntriesOrderBy() {
	 	return this.entriesOrderBy;
	 }
	
	/**
	 * @param entriesOrderBy string 
	 */
	 setEntriesOrderBy(entriesOrderBy) {
	 	this.entriesOrderBy = entriesOrderBy;
	 }
	
	/**
	 * Should enforce entitlement on feed entries
	 * @return bool
	 */
	 getEnforceEntitlement() {
	 	return this.enforceEntitlement;
	 }
	
	/**
	 * @param enforceEntitlement bool Should enforce entitlement on feed entries
	 */
	 setEnforceEntitlement(enforceEntitlement) {
	 	this.enforceEntitlement = enforceEntitlement;
	 }
	
	/**
	 * Set privacy context for search entries that assiged to private and public categories within a category privacy context
	 * @return string
	 */
	 getPrivacyContext() {
	 	return this.privacyContext;
	 }
	
	/**
	 * @param privacyContext string Set privacy context for search entries that assiged to private and public categories within a category privacy context
	 */
	 setPrivacyContext(privacyContext) {
	 	this.privacyContext = privacyContext;
	 }
	
	/**
	 * Update date as Unix timestamp (In seconds)
	 * @return int
	 */
	 getUpdatedAt() {
	 	return this.updatedAt;
	 }
	
	/**
	 * 
	 * @return bool
	 */
	 getUseCategoryEntries() {
	 	return this.useCategoryEntries;
	 }
	
	/**
	 * @param useCategoryEntries bool 
	 */
	 setUseCategoryEntries(useCategoryEntries) {
	 	this.useCategoryEntries = useCategoryEntries;
	 }
	
	/**
	 * Feed content-type header value
	 * @return string
	 */
	 getFeedContentTypeHeader() {
	 	return this.feedContentTypeHeader;
	 }
	
	/**
	 * @param feedContentTypeHeader string Feed content-type header value
	 */
	 setFeedContentTypeHeader(feedContentTypeHeader) {
	 	this.feedContentTypeHeader = feedContentTypeHeader;
	 }
}
module.exports.BaseSyndicationFeed = BaseSyndicationFeed;

/**
 *
 */
class JobData extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaJobData';
	}
}
module.exports.JobData = JobData;

/**
 *
 */
class BatchHistoryData extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaBatchHistoryData';
	}
	
	/**
	 * 
	 * @return int
	 */
	 getSchedulerId() {
	 	return this.schedulerId;
	 }
	
	/**
	 * @param schedulerId int 
	 */
	 setSchedulerId(schedulerId) {
	 	this.schedulerId = schedulerId;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getWorkerId() {
	 	return this.workerId;
	 }
	
	/**
	 * @param workerId int 
	 */
	 setWorkerId(workerId) {
	 	this.workerId = workerId;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getBatchIndex() {
	 	return this.batchIndex;
	 }
	
	/**
	 * @param batchIndex int 
	 */
	 setBatchIndex(batchIndex) {
	 	this.batchIndex = batchIndex;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getTimeStamp() {
	 	return this.timeStamp;
	 }
	
	/**
	 * @param timeStamp int 
	 */
	 setTimeStamp(timeStamp) {
	 	this.timeStamp = timeStamp;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getMessage() {
	 	return this.message;
	 }
	
	/**
	 * @param message string 
	 */
	 setMessage(message) {
	 	this.message = message;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getErrType() {
	 	return this.errType;
	 }
	
	/**
	 * @param errType int 
	 */
	 setErrType(errType) {
	 	this.errType = errType;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getErrNumber() {
	 	return this.errNumber;
	 }
	
	/**
	 * @param errNumber int 
	 */
	 setErrNumber(errNumber) {
	 	this.errNumber = errNumber;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getHostName() {
	 	return this.hostName;
	 }
	
	/**
	 * @param hostName string 
	 */
	 setHostName(hostName) {
	 	this.hostName = hostName;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getSessionId() {
	 	return this.sessionId;
	 }
	
	/**
	 * @param sessionId string 
	 */
	 setSessionId(sessionId) {
	 	this.sessionId = sessionId;
	 }
}
module.exports.BatchHistoryData = BatchHistoryData;

/**
 *
 */
class BatchJob extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaBatchJob';
	}
	
	/**
	 * 
	 * @return int
	 */
	 getId() {
	 	return this.id;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getPartnerId() {
	 	return this.partnerId;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getCreatedAt() {
	 	return this.createdAt;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getUpdatedAt() {
	 	return this.updatedAt;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getDeletedAt() {
	 	return this.deletedAt;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getLockExpiration() {
	 	return this.lockExpiration;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getExecutionAttempts() {
	 	return this.executionAttempts;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getLockVersion() {
	 	return this.lockVersion;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getEntryId() {
	 	return this.entryId;
	 }
	
	/**
	 * @param entryId string 
	 */
	 setEntryId(entryId) {
	 	this.entryId = entryId;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getEntryName() {
	 	return this.entryName;
	 }
	
	/**
	 * @param entryName string 
	 */
	 setEntryName(entryName) {
	 	this.entryName = entryName;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getJobType() {
	 	return this.jobType;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getJobSubType() {
	 	return this.jobSubType;
	 }
	
	/**
	 * @param jobSubType int 
	 */
	 setJobSubType(jobSubType) {
	 	this.jobSubType = jobSubType;
	 }
	
	/**
	 * 
	 * @return JobData
	 */
	 getData() {
	 	return this.data;
	 }
	
	/**
	 * @param data JobData 
	 */
	 setData(data) {
	 	this.data = data;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getStatus() {
	 	return this.status;
	 }
	
	/**
	 * @param status int 
	 */
	 setStatus(status) {
	 	this.status = status;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getAbort() {
	 	return this.abort;
	 }
	
	/**
	 * @param abort int 
	 */
	 setAbort(abort) {
	 	this.abort = abort;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getCheckAgainTimeout() {
	 	return this.checkAgainTimeout;
	 }
	
	/**
	 * @param checkAgainTimeout int 
	 */
	 setCheckAgainTimeout(checkAgainTimeout) {
	 	this.checkAgainTimeout = checkAgainTimeout;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getMessage() {
	 	return this.message;
	 }
	
	/**
	 * @param message string 
	 */
	 setMessage(message) {
	 	this.message = message;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getDescription() {
	 	return this.description;
	 }
	
	/**
	 * @param description string 
	 */
	 setDescription(description) {
	 	this.description = description;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getPriority() {
	 	return this.priority;
	 }
	
	/**
	 * @param priority int 
	 */
	 setPriority(priority) {
	 	this.priority = priority;
	 }
	
	/**
	 * 
	 * @return array
	 */
	 getHistory() {
	 	return this.history;
	 }
	
	/**
	 * @param history array 
	 */
	 setHistory(history) {
	 	this.history = history;
	 }
	
	/**
	 * The id of the bulk upload job that initiated this job
	 * @return int
	 */
	 getBulkJobId() {
	 	return this.bulkJobId;
	 }
	
	/**
	 * @param bulkJobId int The id of the bulk upload job that initiated this job
	 */
	 setBulkJobId(bulkJobId) {
	 	this.bulkJobId = bulkJobId;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getBatchVersion() {
	 	return this.batchVersion;
	 }
	
	/**
	 * @param batchVersion int 
	 */
	 setBatchVersion(batchVersion) {
	 	this.batchVersion = batchVersion;
	 }
	
	/**
	 * When one job creates another - the parent should set this parentJobId to be its own id
	 * @return int
	 */
	 getParentJobId() {
	 	return this.parentJobId;
	 }
	
	/**
	 * @param parentJobId int When one job creates another - the parent should set this parentJobId to be its own id
	 */
	 setParentJobId(parentJobId) {
	 	this.parentJobId = parentJobId;
	 }
	
	/**
	 * The id of the root parent job
	 * @return int
	 */
	 getRootJobId() {
	 	return this.rootJobId;
	 }
	
	/**
	 * @param rootJobId int The id of the root parent job
	 */
	 setRootJobId(rootJobId) {
	 	this.rootJobId = rootJobId;
	 }
	
	/**
	 * The time that the job was pulled from the queue
	 * @return int
	 */
	 getQueueTime() {
	 	return this.queueTime;
	 }
	
	/**
	 * @param queueTime int The time that the job was pulled from the queue
	 */
	 setQueueTime(queueTime) {
	 	this.queueTime = queueTime;
	 }
	
	/**
	 * The time that the job was finished or closed as failed
	 * @return int
	 */
	 getFinishTime() {
	 	return this.finishTime;
	 }
	
	/**
	 * @param finishTime int The time that the job was finished or closed as failed
	 */
	 setFinishTime(finishTime) {
	 	this.finishTime = finishTime;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getErrType() {
	 	return this.errType;
	 }
	
	/**
	 * @param errType int 
	 */
	 setErrType(errType) {
	 	this.errType = errType;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getErrNumber() {
	 	return this.errNumber;
	 }
	
	/**
	 * @param errNumber int 
	 */
	 setErrNumber(errNumber) {
	 	this.errNumber = errNumber;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getEstimatedEffort() {
	 	return this.estimatedEffort;
	 }
	
	/**
	 * @param estimatedEffort int 
	 */
	 setEstimatedEffort(estimatedEffort) {
	 	this.estimatedEffort = estimatedEffort;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getUrgency() {
	 	return this.urgency;
	 }
	
	/**
	 * @param urgency int 
	 */
	 setUrgency(urgency) {
	 	this.urgency = urgency;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getSchedulerId() {
	 	return this.schedulerId;
	 }
	
	/**
	 * @param schedulerId int 
	 */
	 setSchedulerId(schedulerId) {
	 	this.schedulerId = schedulerId;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getWorkerId() {
	 	return this.workerId;
	 }
	
	/**
	 * @param workerId int 
	 */
	 setWorkerId(workerId) {
	 	this.workerId = workerId;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getBatchIndex() {
	 	return this.batchIndex;
	 }
	
	/**
	 * @param batchIndex int 
	 */
	 setBatchIndex(batchIndex) {
	 	this.batchIndex = batchIndex;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getLastSchedulerId() {
	 	return this.lastSchedulerId;
	 }
	
	/**
	 * @param lastSchedulerId int 
	 */
	 setLastSchedulerId(lastSchedulerId) {
	 	this.lastSchedulerId = lastSchedulerId;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getLastWorkerId() {
	 	return this.lastWorkerId;
	 }
	
	/**
	 * @param lastWorkerId int 
	 */
	 setLastWorkerId(lastWorkerId) {
	 	this.lastWorkerId = lastWorkerId;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getDc() {
	 	return this.dc;
	 }
	
	/**
	 * @param dc int 
	 */
	 setDc(dc) {
	 	this.dc = dc;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getJobObjectId() {
	 	return this.jobObjectId;
	 }
	
	/**
	 * @param jobObjectId string 
	 */
	 setJobObjectId(jobObjectId) {
	 	this.jobObjectId = jobObjectId;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getJobObjectType() {
	 	return this.jobObjectType;
	 }
	
	/**
	 * @param jobObjectType int 
	 */
	 setJobObjectType(jobObjectType) {
	 	this.jobObjectType = jobObjectType;
	 }
}
module.exports.BatchJob = BatchJob;

/**
 *
 */
class PlayerDeliveryType extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaPlayerDeliveryType';
	}
	
	/**
	 * 
	 * @return string
	 */
	 getId() {
	 	return this.id;
	 }
	
	/**
	 * @param id string 
	 */
	 setId(id) {
	 	this.id = id;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getLabel() {
	 	return this.label;
	 }
	
	/**
	 * @param label string 
	 */
	 setLabel(label) {
	 	this.label = label;
	 }
	
	/**
	 * 
	 * @return array
	 */
	 getFlashvars() {
	 	return this.flashvars;
	 }
	
	/**
	 * @param flashvars array 
	 */
	 setFlashvars(flashvars) {
	 	this.flashvars = flashvars;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getMinVersion() {
	 	return this.minVersion;
	 }
	
	/**
	 * @param minVersion string 
	 */
	 setMinVersion(minVersion) {
	 	this.minVersion = minVersion;
	 }
	
	/**
	 * 
	 * @return bool
	 */
	 getEnabledByDefault() {
	 	return this.enabledByDefault;
	 }
	
	/**
	 * @param enabledByDefault bool 
	 */
	 setEnabledByDefault(enabledByDefault) {
	 	this.enabledByDefault = enabledByDefault;
	 }
}
module.exports.PlayerDeliveryType = PlayerDeliveryType;

/**
 *
 */
class PlayerEmbedCodeType extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaPlayerEmbedCodeType';
	}
	
	/**
	 * 
	 * @return string
	 */
	 getId() {
	 	return this.id;
	 }
	
	/**
	 * @param id string 
	 */
	 setId(id) {
	 	this.id = id;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getLabel() {
	 	return this.label;
	 }
	
	/**
	 * @param label string 
	 */
	 setLabel(label) {
	 	this.label = label;
	 }
	
	/**
	 * 
	 * @return bool
	 */
	 getEntryOnly() {
	 	return this.entryOnly;
	 }
	
	/**
	 * @param entryOnly bool 
	 */
	 setEntryOnly(entryOnly) {
	 	this.entryOnly = entryOnly;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getMinVersion() {
	 	return this.minVersion;
	 }
	
	/**
	 * @param minVersion string 
	 */
	 setMinVersion(minVersion) {
	 	this.minVersion = minVersion;
	 }
}
module.exports.PlayerEmbedCodeType = PlayerEmbedCodeType;

/**
 *
 */
class Partner extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaPartner';
	}
	
	/**
	 * 
	 * @return int
	 */
	 getId() {
	 	return this.id;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getName() {
	 	return this.name;
	 }
	
	/**
	 * @param name string 
	 */
	 setName(name) {
	 	this.name = name;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getWebsite() {
	 	return this.website;
	 }
	
	/**
	 * @param website string 
	 */
	 setWebsite(website) {
	 	this.website = website;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getNotificationUrl() {
	 	return this.notificationUrl;
	 }
	
	/**
	 * @param notificationUrl string 
	 */
	 setNotificationUrl(notificationUrl) {
	 	this.notificationUrl = notificationUrl;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getAppearInSearch() {
	 	return this.appearInSearch;
	 }
	
	/**
	 * @param appearInSearch int 
	 */
	 setAppearInSearch(appearInSearch) {
	 	this.appearInSearch = appearInSearch;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getCreatedAt() {
	 	return this.createdAt;
	 }
	
	/**
	 * deprecated - lastName and firstName replaces this field
	 * @return string
	 */
	 getAdminName() {
	 	return this.adminName;
	 }
	
	/**
	 * @param adminName string deprecated - lastName and firstName replaces this field
	 */
	 setAdminName(adminName) {
	 	this.adminName = adminName;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getAdminEmail() {
	 	return this.adminEmail;
	 }
	
	/**
	 * @param adminEmail string 
	 */
	 setAdminEmail(adminEmail) {
	 	this.adminEmail = adminEmail;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getDescription() {
	 	return this.description;
	 }
	
	/**
	 * @param description string 
	 */
	 setDescription(description) {
	 	this.description = description;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getCommercialUse() {
	 	return this.commercialUse;
	 }
	
	/**
	 * @param commercialUse int 
	 */
	 setCommercialUse(commercialUse) {
	 	this.commercialUse = commercialUse;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getLandingPage() {
	 	return this.landingPage;
	 }
	
	/**
	 * @param landingPage string 
	 */
	 setLandingPage(landingPage) {
	 	this.landingPage = landingPage;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getUserLandingPage() {
	 	return this.userLandingPage;
	 }
	
	/**
	 * @param userLandingPage string 
	 */
	 setUserLandingPage(userLandingPage) {
	 	this.userLandingPage = userLandingPage;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getContentCategories() {
	 	return this.contentCategories;
	 }
	
	/**
	 * @param contentCategories string 
	 */
	 setContentCategories(contentCategories) {
	 	this.contentCategories = contentCategories;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getType() {
	 	return this.type;
	 }
	
	/**
	 * @param type int 
	 */
	 setType(type) {
	 	this.type = type;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getPhone() {
	 	return this.phone;
	 }
	
	/**
	 * @param phone string 
	 */
	 setPhone(phone) {
	 	this.phone = phone;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getDescribeYourself() {
	 	return this.describeYourself;
	 }
	
	/**
	 * @param describeYourself string 
	 */
	 setDescribeYourself(describeYourself) {
	 	this.describeYourself = describeYourself;
	 }
	
	/**
	 * 
	 * @return bool
	 */
	 getAdultContent() {
	 	return this.adultContent;
	 }
	
	/**
	 * @param adultContent bool 
	 */
	 setAdultContent(adultContent) {
	 	this.adultContent = adultContent;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getDefConversionProfileType() {
	 	return this.defConversionProfileType;
	 }
	
	/**
	 * @param defConversionProfileType string 
	 */
	 setDefConversionProfileType(defConversionProfileType) {
	 	this.defConversionProfileType = defConversionProfileType;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getNotify() {
	 	return this.notify;
	 }
	
	/**
	 * @param notify int 
	 */
	 setNotify(notify) {
	 	this.notify = notify;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getStatus() {
	 	return this.status;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getAllowQuickEdit() {
	 	return this.allowQuickEdit;
	 }
	
	/**
	 * @param allowQuickEdit int 
	 */
	 setAllowQuickEdit(allowQuickEdit) {
	 	this.allowQuickEdit = allowQuickEdit;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getMergeEntryLists() {
	 	return this.mergeEntryLists;
	 }
	
	/**
	 * @param mergeEntryLists int 
	 */
	 setMergeEntryLists(mergeEntryLists) {
	 	this.mergeEntryLists = mergeEntryLists;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getNotificationsConfig() {
	 	return this.notificationsConfig;
	 }
	
	/**
	 * @param notificationsConfig string 
	 */
	 setNotificationsConfig(notificationsConfig) {
	 	this.notificationsConfig = notificationsConfig;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getMaxUploadSize() {
	 	return this.maxUploadSize;
	 }
	
	/**
	 * @param maxUploadSize int 
	 */
	 setMaxUploadSize(maxUploadSize) {
	 	this.maxUploadSize = maxUploadSize;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getPartnerPackage() {
	 	return this.partnerPackage;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getSecret() {
	 	return this.secret;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getAdminSecret() {
	 	return this.adminSecret;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getCmsPassword() {
	 	return this.cmsPassword;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getAllowMultiNotification() {
	 	return this.allowMultiNotification;
	 }
	
	/**
	 * @param allowMultiNotification int 
	 */
	 setAllowMultiNotification(allowMultiNotification) {
	 	this.allowMultiNotification = allowMultiNotification;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getAdminLoginUsersQuota() {
	 	return this.adminLoginUsersQuota;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getAdminUserId() {
	 	return this.adminUserId;
	 }
	
	/**
	 * @param adminUserId string 
	 */
	 setAdminUserId(adminUserId) {
	 	this.adminUserId = adminUserId;
	 }
	
	/**
	 * firstName and lastName replace the old (deprecated) adminName
	 * @return string
	 */
	 getFirstName() {
	 	return this.firstName;
	 }
	
	/**
	 * @param firstName string firstName and lastName replace the old (deprecated) adminName
	 */
	 setFirstName(firstName) {
	 	this.firstName = firstName;
	 }
	
	/**
	 * lastName and firstName replace the old (deprecated) adminName
	 * @return string
	 */
	 getLastName() {
	 	return this.lastName;
	 }
	
	/**
	 * @param lastName string lastName and firstName replace the old (deprecated) adminName
	 */
	 setLastName(lastName) {
	 	this.lastName = lastName;
	 }
	
	/**
	 * country code (2char) - this field is optional
	 * @return string
	 */
	 getCountry() {
	 	return this.country;
	 }
	
	/**
	 * @param country string country code (2char) - this field is optional
	 */
	 setCountry(country) {
	 	this.country = country;
	 }
	
	/**
	 * state code (2char) - this field is optional
	 * @return string
	 */
	 getState() {
	 	return this.state;
	 }
	
	/**
	 * @param state string state code (2char) - this field is optional
	 */
	 setState(state) {
	 	this.state = state;
	 }
	
	/**
	 * 
	 * @return array
	 */
	 getAdditionalParams() {
	 	return this.additionalParams;
	 }
	
	/**
	 * @param additionalParams array 
	 */
	 setAdditionalParams(additionalParams) {
	 	this.additionalParams = additionalParams;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getPublishersQuota() {
	 	return this.publishersQuota;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getPartnerGroupType() {
	 	return this.partnerGroupType;
	 }
	
	/**
	 * 
	 * @return bool
	 */
	 getDefaultEntitlementEnforcement() {
	 	return this.defaultEntitlementEnforcement;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getDefaultDeliveryType() {
	 	return this.defaultDeliveryType;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getDefaultEmbedCodeType() {
	 	return this.defaultEmbedCodeType;
	 }
	
	/**
	 * 
	 * @return array
	 */
	 getDeliveryTypes() {
	 	return this.deliveryTypes;
	 }
	
	/**
	 * 
	 * @return array
	 */
	 getEmbedCodeTypes() {
	 	return this.embedCodeTypes;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getTemplatePartnerId() {
	 	return this.templatePartnerId;
	 }
	
	/**
	 * 
	 * @return bool
	 */
	 getIgnoreSeoLinks() {
	 	return this.ignoreSeoLinks;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getHost() {
	 	return this.host;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getCdnHost() {
	 	return this.cdnHost;
	 }
	
	/**
	 * 
	 * @return bool
	 */
	 getIsFirstLogin() {
	 	return this.isFirstLogin;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getLogoutUrl() {
	 	return this.logoutUrl;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getPartnerParentId() {
	 	return this.partnerParentId;
	 }
	
	/**
	 * @param partnerParentId int 
	 */
	 setPartnerParentId(partnerParentId) {
	 	this.partnerParentId = partnerParentId;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getCrmId() {
	 	return this.crmId;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getReferenceId() {
	 	return this.referenceId;
	 }
	
	/**
	 * @param referenceId string 
	 */
	 setReferenceId(referenceId) {
	 	this.referenceId = referenceId;
	 }
	
	/**
	 * 
	 * @return bool
	 */
	 getTimeAlignedRenditions() {
	 	return this.timeAlignedRenditions;
	 }
}
module.exports.Partner = Partner;

/**
 *
 */
class Value extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaValue';
	}
	
	/**
	 * 
	 * @return string
	 */
	 getDescription() {
	 	return this.description;
	 }
	
	/**
	 * @param description string 
	 */
	 setDescription(description) {
	 	this.description = description;
	 }
}
module.exports.Value = Value;

/**
 *
 */
class BooleanValue extends Value{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaBooleanValue';
	}
	
	/**
	 * 
	 * @return bool
	 */
	 getValue() {
	 	return this.value;
	 }
	
	/**
	 * @param value bool 
	 */
	 setValue(value) {
	 	this.value = value;
	 }
}
module.exports.BooleanValue = BooleanValue;

/**
 *
 */
class BulkServiceData extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaBulkServiceData';
	}
}
module.exports.BulkServiceData = BulkServiceData;

/**
 *
 */
class BulkUploadPluginData extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaBulkUploadPluginData';
	}
	
	/**
	 * 
	 * @return string
	 */
	 getField() {
	 	return this.field;
	 }
	
	/**
	 * @param field string 
	 */
	 setField(field) {
	 	this.field = field;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getValue() {
	 	return this.value;
	 }
	
	/**
	 * @param value string 
	 */
	 setValue(value) {
	 	this.value = value;
	 }
}
module.exports.BulkUploadPluginData = BulkUploadPluginData;

/**
 *
 */
class BulkUploadResult extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaBulkUploadResult';
	}
	
	/**
	 * The id of the result
	 * @return int
	 */
	 getId() {
	 	return this.id;
	 }
	
	/**
	 * The id of the parent job
	 * @return int
	 */
	 getBulkUploadJobId() {
	 	return this.bulkUploadJobId;
	 }
	
	/**
	 * @param bulkUploadJobId int The id of the parent job
	 */
	 setBulkUploadJobId(bulkUploadJobId) {
	 	this.bulkUploadJobId = bulkUploadJobId;
	 }
	
	/**
	 * The index of the line in the CSV
	 * @return int
	 */
	 getLineIndex() {
	 	return this.lineIndex;
	 }
	
	/**
	 * @param lineIndex int The index of the line in the CSV
	 */
	 setLineIndex(lineIndex) {
	 	this.lineIndex = lineIndex;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getPartnerId() {
	 	return this.partnerId;
	 }
	
	/**
	 * @param partnerId int 
	 */
	 setPartnerId(partnerId) {
	 	this.partnerId = partnerId;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getStatus() {
	 	return this.status;
	 }
	
	/**
	 * @param status string 
	 */
	 setStatus(status) {
	 	this.status = status;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getAction() {
	 	return this.action;
	 }
	
	/**
	 * @param action string 
	 */
	 setAction(action) {
	 	this.action = action;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getObjectId() {
	 	return this.objectId;
	 }
	
	/**
	 * @param objectId string 
	 */
	 setObjectId(objectId) {
	 	this.objectId = objectId;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getObjectStatus() {
	 	return this.objectStatus;
	 }
	
	/**
	 * @param objectStatus int 
	 */
	 setObjectStatus(objectStatus) {
	 	this.objectStatus = objectStatus;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getBulkUploadResultObjectType() {
	 	return this.bulkUploadResultObjectType;
	 }
	
	/**
	 * @param bulkUploadResultObjectType string 
	 */
	 setBulkUploadResultObjectType(bulkUploadResultObjectType) {
	 	this.bulkUploadResultObjectType = bulkUploadResultObjectType;
	 }
	
	/**
	 * The data as recieved in the csv
	 * @return string
	 */
	 getRowData() {
	 	return this.rowData;
	 }
	
	/**
	 * @param rowData string The data as recieved in the csv
	 */
	 setRowData(rowData) {
	 	this.rowData = rowData;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getPartnerData() {
	 	return this.partnerData;
	 }
	
	/**
	 * @param partnerData string 
	 */
	 setPartnerData(partnerData) {
	 	this.partnerData = partnerData;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getObjectErrorDescription() {
	 	return this.objectErrorDescription;
	 }
	
	/**
	 * @param objectErrorDescription string 
	 */
	 setObjectErrorDescription(objectErrorDescription) {
	 	this.objectErrorDescription = objectErrorDescription;
	 }
	
	/**
	 * 
	 * @return array
	 */
	 getPluginsData() {
	 	return this.pluginsData;
	 }
	
	/**
	 * @param pluginsData array 
	 */
	 setPluginsData(pluginsData) {
	 	this.pluginsData = pluginsData;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getErrorDescription() {
	 	return this.errorDescription;
	 }
	
	/**
	 * @param errorDescription string 
	 */
	 setErrorDescription(errorDescription) {
	 	this.errorDescription = errorDescription;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getErrorCode() {
	 	return this.errorCode;
	 }
	
	/**
	 * @param errorCode string 
	 */
	 setErrorCode(errorCode) {
	 	this.errorCode = errorCode;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getErrorType() {
	 	return this.errorType;
	 }
	
	/**
	 * @param errorType int 
	 */
	 setErrorType(errorType) {
	 	this.errorType = errorType;
	 }
}
module.exports.BulkUploadResult = BulkUploadResult;

/**
 *
 */
class BulkUpload extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaBulkUpload';
	}
	
	/**
	 * 
	 * @return int
	 */
	 getId() {
	 	return this.id;
	 }
	
	/**
	 * @param id int 
	 */
	 setId(id) {
	 	this.id = id;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getUploadedBy() {
	 	return this.uploadedBy;
	 }
	
	/**
	 * @param uploadedBy string 
	 */
	 setUploadedBy(uploadedBy) {
	 	this.uploadedBy = uploadedBy;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getUploadedByUserId() {
	 	return this.uploadedByUserId;
	 }
	
	/**
	 * @param uploadedByUserId string 
	 */
	 setUploadedByUserId(uploadedByUserId) {
	 	this.uploadedByUserId = uploadedByUserId;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getUploadedOn() {
	 	return this.uploadedOn;
	 }
	
	/**
	 * @param uploadedOn int 
	 */
	 setUploadedOn(uploadedOn) {
	 	this.uploadedOn = uploadedOn;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getNumOfEntries() {
	 	return this.numOfEntries;
	 }
	
	/**
	 * @param numOfEntries int 
	 */
	 setNumOfEntries(numOfEntries) {
	 	this.numOfEntries = numOfEntries;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getStatus() {
	 	return this.status;
	 }
	
	/**
	 * @param status int 
	 */
	 setStatus(status) {
	 	this.status = status;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getLogFileUrl() {
	 	return this.logFileUrl;
	 }
	
	/**
	 * @param logFileUrl string 
	 */
	 setLogFileUrl(logFileUrl) {
	 	this.logFileUrl = logFileUrl;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getCsvFileUrl() {
	 	return this.csvFileUrl;
	 }
	
	/**
	 * @param csvFileUrl string 
	 */
	 setCsvFileUrl(csvFileUrl) {
	 	this.csvFileUrl = csvFileUrl;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getBulkFileUrl() {
	 	return this.bulkFileUrl;
	 }
	
	/**
	 * @param bulkFileUrl string 
	 */
	 setBulkFileUrl(bulkFileUrl) {
	 	this.bulkFileUrl = bulkFileUrl;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getBulkUploadType() {
	 	return this.bulkUploadType;
	 }
	
	/**
	 * @param bulkUploadType string 
	 */
	 setBulkUploadType(bulkUploadType) {
	 	this.bulkUploadType = bulkUploadType;
	 }
	
	/**
	 * 
	 * @return array
	 */
	 getResults() {
	 	return this.results;
	 }
	
	/**
	 * @param results array 
	 */
	 setResults(results) {
	 	this.results = results;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getError() {
	 	return this.error;
	 }
	
	/**
	 * @param error string 
	 */
	 setError(error) {
	 	this.error = error;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getErrorType() {
	 	return this.errorType;
	 }
	
	/**
	 * @param errorType int 
	 */
	 setErrorType(errorType) {
	 	this.errorType = errorType;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getErrorNumber() {
	 	return this.errorNumber;
	 }
	
	/**
	 * @param errorNumber int 
	 */
	 setErrorNumber(errorNumber) {
	 	this.errorNumber = errorNumber;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getFileName() {
	 	return this.fileName;
	 }
	
	/**
	 * @param fileName string 
	 */
	 setFileName(fileName) {
	 	this.fileName = fileName;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getDescription() {
	 	return this.description;
	 }
	
	/**
	 * @param description string 
	 */
	 setDescription(description) {
	 	this.description = description;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getNumOfObjects() {
	 	return this.numOfObjects;
	 }
	
	/**
	 * @param numOfObjects int 
	 */
	 setNumOfObjects(numOfObjects) {
	 	this.numOfObjects = numOfObjects;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getBulkUploadObjectType() {
	 	return this.bulkUploadObjectType;
	 }
	
	/**
	 * @param bulkUploadObjectType string 
	 */
	 setBulkUploadObjectType(bulkUploadObjectType) {
	 	this.bulkUploadObjectType = bulkUploadObjectType;
	 }
}
module.exports.BulkUpload = BulkUpload;

/**
 *
 */
class BulkUploadObjectData extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaBulkUploadObjectData';
	}
}
module.exports.BulkUploadObjectData = BulkUploadObjectData;

/**
 *
 */
class CEError extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaCEError';
	}
	
	/**
	 * 
	 * @return string
	 */
	 getId() {
	 	return this.id;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getPartnerId() {
	 	return this.partnerId;
	 }
	
	/**
	 * @param partnerId int 
	 */
	 setPartnerId(partnerId) {
	 	this.partnerId = partnerId;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getBrowser() {
	 	return this.browser;
	 }
	
	/**
	 * @param browser string 
	 */
	 setBrowser(browser) {
	 	this.browser = browser;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getServerIp() {
	 	return this.serverIp;
	 }
	
	/**
	 * @param serverIp string 
	 */
	 setServerIp(serverIp) {
	 	this.serverIp = serverIp;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getServerOs() {
	 	return this.serverOs;
	 }
	
	/**
	 * @param serverOs string 
	 */
	 setServerOs(serverOs) {
	 	this.serverOs = serverOs;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getPhpVersion() {
	 	return this.phpVersion;
	 }
	
	/**
	 * @param phpVersion string 
	 */
	 setPhpVersion(phpVersion) {
	 	this.phpVersion = phpVersion;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getCeAdminEmail() {
	 	return this.ceAdminEmail;
	 }
	
	/**
	 * @param ceAdminEmail string 
	 */
	 setCeAdminEmail(ceAdminEmail) {
	 	this.ceAdminEmail = ceAdminEmail;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getType() {
	 	return this.type;
	 }
	
	/**
	 * @param type string 
	 */
	 setType(type) {
	 	this.type = type;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getDescription() {
	 	return this.description;
	 }
	
	/**
	 * @param description string 
	 */
	 setDescription(description) {
	 	this.description = description;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getData() {
	 	return this.data;
	 }
	
	/**
	 * @param data string 
	 */
	 setData(data) {
	 	this.data = data;
	 }
}
module.exports.CEError = CEError;

/**
 *
 */
class CaptionAsset extends Asset{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaCaptionAsset';
	}
	
	/**
	 * The Caption Params used to create this Caption Asset
	 * @return int
	 */
	 getCaptionParamsId() {
	 	return this.captionParamsId;
	 }
	
	/**
	 * @param captionParamsId int The Caption Params used to create this Caption Asset
	 */
	 setCaptionParamsId(captionParamsId) {
	 	this.captionParamsId = captionParamsId;
	 }
	
	/**
	 * The language of the caption asset content
	 * @return string
	 */
	 getLanguage() {
	 	return this.language;
	 }
	
	/**
	 * @param language string The language of the caption asset content
	 */
	 setLanguage(language) {
	 	this.language = language;
	 }
	
	/**
	 * The language of the caption asset content
	 * @return string
	 */
	 getLanguageCode() {
	 	return this.languageCode;
	 }
	
	/**
	 * Is default caption asset of the entry
	 * @return int
	 */
	 getIsDefault() {
	 	return this.isDefault;
	 }
	
	/**
	 * @param isDefault int Is default caption asset of the entry
	 */
	 setIsDefault(isDefault) {
	 	this.isDefault = isDefault;
	 }
	
	/**
	 * Friendly label
	 * @return string
	 */
	 getLabel() {
	 	return this.label;
	 }
	
	/**
	 * @param label string Friendly label
	 */
	 setLabel(label) {
	 	this.label = label;
	 }
	
	/**
	 * The caption format
	 * @return string
	 */
	 getFormat() {
	 	return this.format;
	 }
	
	/**
	 * @param format string The caption format
	 */
	 setFormat(format) {
	 	this.format = format;
	 }
	
	/**
	 * The status of the asset
	 * @return int
	 */
	 getStatus() {
	 	return this.status;
	 }
	
	/**
	 * The parent id of the asset
	 * @return string
	 */
	 getParentId() {
	 	return this.parentId;
	 }
	
	/**
	 * @param parentId string The parent id of the asset
	 */
	 setParentId(parentId) {
	 	this.parentId = parentId;
	 }
	
	/**
	 * The Accuracy of the caption content
	 * @return int
	 */
	 getAccuracy() {
	 	return this.accuracy;
	 }
	
	/**
	 * @param accuracy int The Accuracy of the caption content
	 */
	 setAccuracy(accuracy) {
	 	this.accuracy = accuracy;
	 }
}
module.exports.CaptionAsset = CaptionAsset;

/**
 *
 */
class CaptionAssetItem extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaCaptionAssetItem';
	}
	
	/**
	 * The Caption Asset object
	 * @return CaptionAsset
	 */
	 getAsset() {
	 	return this.asset;
	 }
	
	/**
	 * @param asset CaptionAsset The Caption Asset object
	 */
	 setAsset(asset) {
	 	this.asset = asset;
	 }
	
	/**
	 * The entry object
	 * @return BaseEntry
	 */
	 getEntry() {
	 	return this.entry;
	 }
	
	/**
	 * @param entry BaseEntry The entry object
	 */
	 setEntry(entry) {
	 	this.entry = entry;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getStartTime() {
	 	return this.startTime;
	 }
	
	/**
	 * @param startTime int 
	 */
	 setStartTime(startTime) {
	 	this.startTime = startTime;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getEndTime() {
	 	return this.endTime;
	 }
	
	/**
	 * @param endTime int 
	 */
	 setEndTime(endTime) {
	 	this.endTime = endTime;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getContent() {
	 	return this.content;
	 }
	
	/**
	 * @param content string 
	 */
	 setContent(content) {
	 	this.content = content;
	 }
}
module.exports.CaptionAssetItem = CaptionAssetItem;

/**
 *
 */
class CaptionParams extends AssetParams{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaCaptionParams';
	}
	
	/**
	 * The language of the caption content
	 * @return string
	 */
	 getLanguage() {
	 	return this.language;
	 }
	
	/**
	 * @param language string The language of the caption content
	 */
	 setLanguage(language) {
	 	this.language = language;
	 }
	
	/**
	 * Is default caption asset of the entry
	 * @return int
	 */
	 getIsDefault() {
	 	return this.isDefault;
	 }
	
	/**
	 * @param isDefault int Is default caption asset of the entry
	 */
	 setIsDefault(isDefault) {
	 	this.isDefault = isDefault;
	 }
	
	/**
	 * Friendly label
	 * @return string
	 */
	 getLabel() {
	 	return this.label;
	 }
	
	/**
	 * @param label string Friendly label
	 */
	 setLabel(label) {
	 	this.label = label;
	 }
	
	/**
	 * The caption format
	 * @return string
	 */
	 getFormat() {
	 	return this.format;
	 }
	
	/**
	 * @param format string The caption format
	 */
	 setFormat(format) {
	 	this.format = format;
	 }
	
	/**
	 * Id of the caption params or the flavor params to be used as source for the caption creation
	 * @return int
	 */
	 getSourceParamsId() {
	 	return this.sourceParamsId;
	 }
	
	/**
	 * @param sourceParamsId int Id of the caption params or the flavor params to be used as source for the caption creation
	 */
	 setSourceParamsId(sourceParamsId) {
	 	this.sourceParamsId = sourceParamsId;
	 }
}
module.exports.CaptionParams = CaptionParams;

/**
 *
 */
class Category extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaCategory';
	}
	
	/**
	 * The id of the Category
	 * @return int
	 */
	 getId() {
	 	return this.id;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getParentId() {
	 	return this.parentId;
	 }
	
	/**
	 * @param parentId int 
	 */
	 setParentId(parentId) {
	 	this.parentId = parentId;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getDepth() {
	 	return this.depth;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getPartnerId() {
	 	return this.partnerId;
	 }
	
	/**
	 * The name of the Category.
 * The following characters are not allowed: '<', '>', ','
	 * @return string
	 */
	 getName() {
	 	return this.name;
	 }
	
	/**
	 * @param name string The name of the Category.
 * The following characters are not allowed: '<', '>', ','
	 */
	 setName(name) {
	 	this.name = name;
	 }
	
	/**
	 * The full name of the Category
	 * @return string
	 */
	 getFullName() {
	 	return this.fullName;
	 }
	
	/**
	 * The full ids of the Category
	 * @return string
	 */
	 getFullIds() {
	 	return this.fullIds;
	 }
	
	/**
	 * Number of entries in this Category (including child categories)
	 * @return int
	 */
	 getEntriesCount() {
	 	return this.entriesCount;
	 }
	
	/**
	 * Creation date as Unix timestamp (In seconds)
	 * @return int
	 */
	 getCreatedAt() {
	 	return this.createdAt;
	 }
	
	/**
	 * Update date as Unix timestamp (In seconds)
	 * @return int
	 */
	 getUpdatedAt() {
	 	return this.updatedAt;
	 }
	
	/**
	 * Category description
	 * @return string
	 */
	 getDescription() {
	 	return this.description;
	 }
	
	/**
	 * @param description string Category description
	 */
	 setDescription(description) {
	 	this.description = description;
	 }
	
	/**
	 * Category tags
	 * @return string
	 */
	 getTags() {
	 	return this.tags;
	 }
	
	/**
	 * @param tags string Category tags
	 */
	 setTags(tags) {
	 	this.tags = tags;
	 }
	
	/**
	 * If category will be returned for list action
	 * @return int
	 */
	 getAppearInList() {
	 	return this.appearInList;
	 }
	
	/**
	 * @param appearInList int If category will be returned for list action
	 */
	 setAppearInList(appearInList) {
	 	this.appearInList = appearInList;
	 }
	
	/**
	 * defines the privacy of the entries that assigned to this category
	 * @return int
	 */
	 getPrivacy() {
	 	return this.privacy;
	 }
	
	/**
	 * @param privacy int defines the privacy of the entries that assigned to this category
	 */
	 setPrivacy(privacy) {
	 	this.privacy = privacy;
	 }
	
	/**
	 * If Category members are inherited from parent category or set manualy
	 * @return int
	 */
	 getInheritanceType() {
	 	return this.inheritanceType;
	 }
	
	/**
	 * @param inheritanceType int If Category members are inherited from parent category or set manualy
	 */
	 setInheritanceType(inheritanceType) {
	 	this.inheritanceType = inheritanceType;
	 }
	
	/**
	 * Who can ask to join this category
	 * @return int
	 */
	 getUserJoinPolicy() {
	 	return this.userJoinPolicy;
	 }
	
	/**
	 * Default permissionLevel for new users
	 * @return int
	 */
	 getDefaultPermissionLevel() {
	 	return this.defaultPermissionLevel;
	 }
	
	/**
	 * @param defaultPermissionLevel int Default permissionLevel for new users
	 */
	 setDefaultPermissionLevel(defaultPermissionLevel) {
	 	this.defaultPermissionLevel = defaultPermissionLevel;
	 }
	
	/**
	 * Category Owner (User id)
	 * @return string
	 */
	 getOwner() {
	 	return this.owner;
	 }
	
	/**
	 * @param owner string Category Owner (User id)
	 */
	 setOwner(owner) {
	 	this.owner = owner;
	 }
	
	/**
	 * Number of entries that belong to this category directly
	 * @return int
	 */
	 getDirectEntriesCount() {
	 	return this.directEntriesCount;
	 }
	
	/**
	 * Category external id, controlled and managed by the partner
	 * @return string
	 */
	 getReferenceId() {
	 	return this.referenceId;
	 }
	
	/**
	 * @param referenceId string Category external id, controlled and managed by the partner
	 */
	 setReferenceId(referenceId) {
	 	this.referenceId = referenceId;
	 }
	
	/**
	 * who can assign entries to this category
	 * @return int
	 */
	 getContributionPolicy() {
	 	return this.contributionPolicy;
	 }
	
	/**
	 * @param contributionPolicy int who can assign entries to this category
	 */
	 setContributionPolicy(contributionPolicy) {
	 	this.contributionPolicy = contributionPolicy;
	 }
	
	/**
	 * Number of active members for this category
	 * @return int
	 */
	 getMembersCount() {
	 	return this.membersCount;
	 }
	
	/**
	 * Number of pending members for this category
	 * @return int
	 */
	 getPendingMembersCount() {
	 	return this.pendingMembersCount;
	 }
	
	/**
	 * Set privacy context for search entries that assiged to private and public categories. the entries will be private if the search context is set with those categories
	 * @return string
	 */
	 getPrivacyContext() {
	 	return this.privacyContext;
	 }
	
	/**
	 * @param privacyContext string Set privacy context for search entries that assiged to private and public categories. the entries will be private if the search context is set with those categories
	 */
	 setPrivacyContext(privacyContext) {
	 	this.privacyContext = privacyContext;
	 }
	
	/**
	 * comma separated parents that defines a privacyContext for search
	 * @return string
	 */
	 getPrivacyContexts() {
	 	return this.privacyContexts;
	 }
	
	/**
	 * Status
	 * @return int
	 */
	 getStatus() {
	 	return this.status;
	 }
	
	/**
	 * The category id that this category inherit its members and members permission (for contribution and join)
	 * @return int
	 */
	 getInheritedParentId() {
	 	return this.inheritedParentId;
	 }
	
	/**
	 * Can be used to store various partner related data as a numeric value
	 * @return int
	 */
	 getPartnerSortValue() {
	 	return this.partnerSortValue;
	 }
	
	/**
	 * @param partnerSortValue int Can be used to store various partner related data as a numeric value
	 */
	 setPartnerSortValue(partnerSortValue) {
	 	this.partnerSortValue = partnerSortValue;
	 }
	
	/**
	 * Can be used to store various partner related data as a string
	 * @return string
	 */
	 getPartnerData() {
	 	return this.partnerData;
	 }
	
	/**
	 * @param partnerData string Can be used to store various partner related data as a string
	 */
	 setPartnerData(partnerData) {
	 	this.partnerData = partnerData;
	 }
	
	/**
	 * Enable client side applications to define how to sort the category child categories
	 * @return string
	 */
	 getDefaultOrderBy() {
	 	return this.defaultOrderBy;
	 }
	
	/**
	 * @param defaultOrderBy string Enable client side applications to define how to sort the category child categories
	 */
	 setDefaultOrderBy(defaultOrderBy) {
	 	this.defaultOrderBy = defaultOrderBy;
	 }
	
	/**
	 * Number of direct children categories
	 * @return int
	 */
	 getDirectSubCategoriesCount() {
	 	return this.directSubCategoriesCount;
	 }
	
	/**
	 * Moderation to add entries to this category by users that are not of permission level Manager or Moderator
	 * @return int
	 */
	 getModeration() {
	 	return this.moderation;
	 }
	
	/**
	 * @param moderation int Moderation to add entries to this category by users that are not of permission level Manager or Moderator
	 */
	 setModeration(moderation) {
	 	this.moderation = moderation;
	 }
	
	/**
	 * Nunber of pending moderation entries
	 * @return int
	 */
	 getPendingEntriesCount() {
	 	return this.pendingEntriesCount;
	 }
	
	/**
	 * Flag indicating that the category is an aggregation category
	 * @return int
	 */
	 getIsAggregationCategory() {
	 	return this.isAggregationCategory;
	 }
	
	/**
	 * @param isAggregationCategory int Flag indicating that the category is an aggregation category
	 */
	 setIsAggregationCategory(isAggregationCategory) {
	 	this.isAggregationCategory = isAggregationCategory;
	 }
	
	/**
	 * List of aggregation channels the category belongs to
	 * @return string
	 */
	 getAggregationCategories() {
	 	return this.aggregationCategories;
	 }
	
	/**
	 * @param aggregationCategories string List of aggregation channels the category belongs to
	 */
	 setAggregationCategories(aggregationCategories) {
	 	this.aggregationCategories = aggregationCategories;
	 }
}
module.exports.Category = Category;

/**
 *
 */
class CategoryEntry extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaCategoryEntry';
	}
	
	/**
	 * 
	 * @return int
	 */
	 getCategoryId() {
	 	return this.categoryId;
	 }
	
	/**
	 * @param categoryId int 
	 */
	 setCategoryId(categoryId) {
	 	this.categoryId = categoryId;
	 }
	
	/**
	 * entry id
	 * @return string
	 */
	 getEntryId() {
	 	return this.entryId;
	 }
	
	/**
	 * @param entryId string entry id
	 */
	 setEntryId(entryId) {
	 	this.entryId = entryId;
	 }
	
	/**
	 * Creation date as Unix timestamp (In seconds)
	 * @return int
	 */
	 getCreatedAt() {
	 	return this.createdAt;
	 }
	
	/**
	 * The full ids of the Category
	 * @return string
	 */
	 getCategoryFullIds() {
	 	return this.categoryFullIds;
	 }
	
	/**
	 * CategroyEntry status
	 * @return int
	 */
	 getStatus() {
	 	return this.status;
	 }
	
	/**
	 * CategroyEntry creator puser ID
	 * @return string
	 */
	 getCreatorUserId() {
	 	return this.creatorUserId;
	 }
}
module.exports.CategoryEntry = CategoryEntry;

/**
 *
 */
class CategoryUser extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaCategoryUser';
	}
	
	/**
	 * 
	 * @return int
	 */
	 getCategoryId() {
	 	return this.categoryId;
	 }
	
	/**
	 * @param categoryId int 
	 */
	 setCategoryId(categoryId) {
	 	this.categoryId = categoryId;
	 }
	
	/**
	 * User id
	 * @return string
	 */
	 getUserId() {
	 	return this.userId;
	 }
	
	/**
	 * @param userId string User id
	 */
	 setUserId(userId) {
	 	this.userId = userId;
	 }
	
	/**
	 * Partner id
	 * @return int
	 */
	 getPartnerId() {
	 	return this.partnerId;
	 }
	
	/**
	 * Permission level
	 * @return int
	 */
	 getPermissionLevel() {
	 	return this.permissionLevel;
	 }
	
	/**
	 * @param permissionLevel int Permission level
	 */
	 setPermissionLevel(permissionLevel) {
	 	this.permissionLevel = permissionLevel;
	 }
	
	/**
	 * Status
	 * @return int
	 */
	 getStatus() {
	 	return this.status;
	 }
	
	/**
	 * CategoryUser creation date as Unix timestamp (In seconds)
	 * @return int
	 */
	 getCreatedAt() {
	 	return this.createdAt;
	 }
	
	/**
	 * CategoryUser update date as Unix timestamp (In seconds)
	 * @return int
	 */
	 getUpdatedAt() {
	 	return this.updatedAt;
	 }
	
	/**
	 * Update method can be either manual or automatic to distinguish between manual operations (for example in KMC) on automatic - using bulk upload
	 * @return int
	 */
	 getUpdateMethod() {
	 	return this.updateMethod;
	 }
	
	/**
	 * @param updateMethod int Update method can be either manual or automatic to distinguish between manual operations (for example in KMC) on automatic - using bulk upload
	 */
	 setUpdateMethod(updateMethod) {
	 	this.updateMethod = updateMethod;
	 }
	
	/**
	 * The full ids of the Category
	 * @return string
	 */
	 getCategoryFullIds() {
	 	return this.categoryFullIds;
	 }
	
	/**
	 * Set of category-related permissions for the current category user
	 * @return string
	 */
	 getPermissionNames() {
	 	return this.permissionNames;
	 }
	
	/**
	 * @param permissionNames string Set of category-related permissions for the current category user
	 */
	 setPermissionNames(permissionNames) {
	 	this.permissionNames = permissionNames;
	 }
}
module.exports.CategoryUser = CategoryUser;

/**
 *
 */
class ClientConfiguration extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaClientConfiguration';
	}
	
	/**
	 * 
	 * @return string
	 */
	 getClientTag() {
	 	return this.clientTag;
	 }
	
	/**
	 * @param clientTag string 
	 */
	 setClientTag(clientTag) {
	 	this.clientTag = clientTag;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getApiVersion() {
	 	return this.apiVersion;
	 }
	
	/**
	 * @param apiVersion string 
	 */
	 setApiVersion(apiVersion) {
	 	this.apiVersion = apiVersion;
	 }
}
module.exports.ClientConfiguration = ClientConfiguration;

/**
 *
 */
class ClientNotification extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaClientNotification';
	}
	
	/**
	 * The URL where the notification should be sent to
	 * @return string
	 */
	 getUrl() {
	 	return this.url;
	 }
	
	/**
	 * @param url string The URL where the notification should be sent to
	 */
	 setUrl(url) {
	 	this.url = url;
	 }
	
	/**
	 * The serialized notification data to send
	 * @return string
	 */
	 getData() {
	 	return this.data;
	 }
	
	/**
	 * @param data string The serialized notification data to send
	 */
	 setData(data) {
	 	this.data = data;
	 }
}
module.exports.ClientNotification = ClientNotification;

/**
 *
 */
class Context extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaContext';
	}
}
module.exports.Context = Context;

/**
 *
 */
class ContextDataResult extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaContextDataResult';
	}
	
	/**
	 * Array of messages as received from the rules that invalidated
	 * @return array
	 */
	 getMessages() {
	 	return this.messages;
	 }
	
	/**
	 * @param messages array Array of messages as received from the rules that invalidated
	 */
	 setMessages(messages) {
	 	this.messages = messages;
	 }
	
	/**
	 * Array of actions as received from the rules that invalidated
	 * @return array
	 */
	 getActions() {
	 	return this.actions;
	 }
	
	/**
	 * @param actions array Array of actions as received from the rules that invalidated
	 */
	 setActions(actions) {
	 	this.actions = actions;
	 }
}
module.exports.ContextDataResult = ContextDataResult;

/**
 *
 */
class ControlPanelCommand extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaControlPanelCommand';
	}
	
	/**
	 * The id of the Category
	 * @return int
	 */
	 getId() {
	 	return this.id;
	 }
	
	/**
	 * Creation date as Unix timestamp (In seconds)
	 * @return int
	 */
	 getCreatedAt() {
	 	return this.createdAt;
	 }
	
	/**
	 * Creator name
	 * @return string
	 */
	 getCreatedBy() {
	 	return this.createdBy;
	 }
	
	/**
	 * @param createdBy string Creator name
	 */
	 setCreatedBy(createdBy) {
	 	this.createdBy = createdBy;
	 }
	
	/**
	 * Update date as Unix timestamp (In seconds)
	 * @return int
	 */
	 getUpdatedAt() {
	 	return this.updatedAt;
	 }
	
	/**
	 * Updater name
	 * @return string
	 */
	 getUpdatedBy() {
	 	return this.updatedBy;
	 }
	
	/**
	 * @param updatedBy string Updater name
	 */
	 setUpdatedBy(updatedBy) {
	 	this.updatedBy = updatedBy;
	 }
	
	/**
	 * Creator id
	 * @return int
	 */
	 getCreatedById() {
	 	return this.createdById;
	 }
	
	/**
	 * @param createdById int Creator id
	 */
	 setCreatedById(createdById) {
	 	this.createdById = createdById;
	 }
	
	/**
	 * The id of the scheduler that the command refers to
	 * @return int
	 */
	 getSchedulerId() {
	 	return this.schedulerId;
	 }
	
	/**
	 * @param schedulerId int The id of the scheduler that the command refers to
	 */
	 setSchedulerId(schedulerId) {
	 	this.schedulerId = schedulerId;
	 }
	
	/**
	 * The id of the scheduler worker that the command refers to
	 * @return int
	 */
	 getWorkerId() {
	 	return this.workerId;
	 }
	
	/**
	 * @param workerId int The id of the scheduler worker that the command refers to
	 */
	 setWorkerId(workerId) {
	 	this.workerId = workerId;
	 }
	
	/**
	 * The id of the scheduler worker as configured in the ini file
	 * @return int
	 */
	 getWorkerConfiguredId() {
	 	return this.workerConfiguredId;
	 }
	
	/**
	 * @param workerConfiguredId int The id of the scheduler worker as configured in the ini file
	 */
	 setWorkerConfiguredId(workerConfiguredId) {
	 	this.workerConfiguredId = workerConfiguredId;
	 }
	
	/**
	 * The name of the scheduler worker that the command refers to
	 * @return int
	 */
	 getWorkerName() {
	 	return this.workerName;
	 }
	
	/**
	 * @param workerName int The name of the scheduler worker that the command refers to
	 */
	 setWorkerName(workerName) {
	 	this.workerName = workerName;
	 }
	
	/**
	 * The index of the batch process that the command refers to
	 * @return int
	 */
	 getBatchIndex() {
	 	return this.batchIndex;
	 }
	
	/**
	 * @param batchIndex int The index of the batch process that the command refers to
	 */
	 setBatchIndex(batchIndex) {
	 	this.batchIndex = batchIndex;
	 }
	
	/**
	 * The command type - stop / start / config
	 * @return int
	 */
	 getType() {
	 	return this.type;
	 }
	
	/**
	 * @param type int The command type - stop / start / config
	 */
	 setType(type) {
	 	this.type = type;
	 }
	
	/**
	 * The command target type - data center / scheduler / job / job type
	 * @return int
	 */
	 getTargetType() {
	 	return this.targetType;
	 }
	
	/**
	 * @param targetType int The command target type - data center / scheduler / job / job type
	 */
	 setTargetType(targetType) {
	 	this.targetType = targetType;
	 }
	
	/**
	 * The command status
	 * @return int
	 */
	 getStatus() {
	 	return this.status;
	 }
	
	/**
	 * @param status int The command status
	 */
	 setStatus(status) {
	 	this.status = status;
	 }
	
	/**
	 * The reason for the command
	 * @return string
	 */
	 getCause() {
	 	return this.cause;
	 }
	
	/**
	 * @param cause string The reason for the command
	 */
	 setCause(cause) {
	 	this.cause = cause;
	 }
	
	/**
	 * Command description
	 * @return string
	 */
	 getDescription() {
	 	return this.description;
	 }
	
	/**
	 * @param description string Command description
	 */
	 setDescription(description) {
	 	this.description = description;
	 }
	
	/**
	 * Error description
	 * @return string
	 */
	 getErrorDescription() {
	 	return this.errorDescription;
	 }
	
	/**
	 * @param errorDescription string Error description
	 */
	 setErrorDescription(errorDescription) {
	 	this.errorDescription = errorDescription;
	 }
}
module.exports.ControlPanelCommand = ControlPanelCommand;

/**
 *
 */
class ConversionAttribute extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaConversionAttribute';
	}
	
	/**
	 * The id of the flavor params, set to null for source flavor
	 * @return int
	 */
	 getFlavorParamsId() {
	 	return this.flavorParamsId;
	 }
	
	/**
	 * @param flavorParamsId int The id of the flavor params, set to null for source flavor
	 */
	 setFlavorParamsId(flavorParamsId) {
	 	this.flavorParamsId = flavorParamsId;
	 }
	
	/**
	 * Attribute name
	 * @return string
	 */
	 getName() {
	 	return this.name;
	 }
	
	/**
	 * @param name string Attribute name
	 */
	 setName(name) {
	 	this.name = name;
	 }
	
	/**
	 * Attribute value
	 * @return string
	 */
	 getValue() {
	 	return this.value;
	 }
	
	/**
	 * @param value string Attribute value
	 */
	 setValue(value) {
	 	this.value = value;
	 }
}
module.exports.ConversionAttribute = ConversionAttribute;

/**
 *
 */
class CropDimensions extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaCropDimensions';
	}
	
	/**
	 * Crop left point
	 * @return int
	 */
	 getLeft() {
	 	return this.left;
	 }
	
	/**
	 * @param left int Crop left point
	 */
	 setLeft(left) {
	 	this.left = left;
	 }
	
	/**
	 * Crop top point
	 * @return int
	 */
	 getTop() {
	 	return this.top;
	 }
	
	/**
	 * @param top int Crop top point
	 */
	 setTop(top) {
	 	this.top = top;
	 }
	
	/**
	 * Crop width
	 * @return int
	 */
	 getWidth() {
	 	return this.width;
	 }
	
	/**
	 * @param width int Crop width
	 */
	 setWidth(width) {
	 	this.width = width;
	 }
	
	/**
	 * Crop height
	 * @return int
	 */
	 getHeight() {
	 	return this.height;
	 }
	
	/**
	 * @param height int Crop height
	 */
	 setHeight(height) {
	 	this.height = height;
	 }
}
module.exports.CropDimensions = CropDimensions;

/**
 *
 */
class ConversionProfile extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaConversionProfile';
	}
	
	/**
	 * The id of the Conversion Profile
	 * @return int
	 */
	 getId() {
	 	return this.id;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getPartnerId() {
	 	return this.partnerId;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getStatus() {
	 	return this.status;
	 }
	
	/**
	 * @param status string 
	 */
	 setStatus(status) {
	 	this.status = status;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getType() {
	 	return this.type;
	 }
	
	/**
	 * @param type string 
	 */
	 setType(type) {
	 	this.type = type;
	 }
	
	/**
	 * The name of the Conversion Profile
	 * @return string
	 */
	 getName() {
	 	return this.name;
	 }
	
	/**
	 * @param name string The name of the Conversion Profile
	 */
	 setName(name) {
	 	this.name = name;
	 }
	
	/**
	 * System name of the Conversion Profile
	 * @return string
	 */
	 getSystemName() {
	 	return this.systemName;
	 }
	
	/**
	 * @param systemName string System name of the Conversion Profile
	 */
	 setSystemName(systemName) {
	 	this.systemName = systemName;
	 }
	
	/**
	 * Comma separated tags
	 * @return string
	 */
	 getTags() {
	 	return this.tags;
	 }
	
	/**
	 * @param tags string Comma separated tags
	 */
	 setTags(tags) {
	 	this.tags = tags;
	 }
	
	/**
	 * The description of the Conversion Profile
	 * @return string
	 */
	 getDescription() {
	 	return this.description;
	 }
	
	/**
	 * @param description string The description of the Conversion Profile
	 */
	 setDescription(description) {
	 	this.description = description;
	 }
	
	/**
	 * ID of the default entry to be used for template data
	 * @return string
	 */
	 getDefaultEntryId() {
	 	return this.defaultEntryId;
	 }
	
	/**
	 * @param defaultEntryId string ID of the default entry to be used for template data
	 */
	 setDefaultEntryId(defaultEntryId) {
	 	this.defaultEntryId = defaultEntryId;
	 }
	
	/**
	 * Creation date as Unix timestamp (In seconds)
	 * @return int
	 */
	 getCreatedAt() {
	 	return this.createdAt;
	 }
	
	/**
	 * List of included flavor ids (comma separated)
	 * @return string
	 */
	 getFlavorParamsIds() {
	 	return this.flavorParamsIds;
	 }
	
	/**
	 * @param flavorParamsIds string List of included flavor ids (comma separated)
	 */
	 setFlavorParamsIds(flavorParamsIds) {
	 	this.flavorParamsIds = flavorParamsIds;
	 }
	
	/**
	 * Indicates that this conversion profile is system default
	 * @return int
	 */
	 getIsDefault() {
	 	return this.isDefault;
	 }
	
	/**
	 * @param isDefault int Indicates that this conversion profile is system default
	 */
	 setIsDefault(isDefault) {
	 	this.isDefault = isDefault;
	 }
	
	/**
	 * Indicates that this conversion profile is partner default
	 * @return bool
	 */
	 getIsPartnerDefault() {
	 	return this.isPartnerDefault;
	 }
	
	/**
	 * Cropping dimensions
	 * @return CropDimensions
	 */
	 getCropDimensions() {
	 	return this.cropDimensions;
	 }
	
	/**
	 * @param cropDimensions CropDimensions Cropping dimensions
	 */
	 setCropDimensions(cropDimensions) {
	 	this.cropDimensions = cropDimensions;
	 }
	
	/**
	 * Clipping start position (in miliseconds)
	 * @return int
	 */
	 getClipStart() {
	 	return this.clipStart;
	 }
	
	/**
	 * @param clipStart int Clipping start position (in miliseconds)
	 */
	 setClipStart(clipStart) {
	 	this.clipStart = clipStart;
	 }
	
	/**
	 * Clipping duration (in miliseconds)
	 * @return int
	 */
	 getClipDuration() {
	 	return this.clipDuration;
	 }
	
	/**
	 * @param clipDuration int Clipping duration (in miliseconds)
	 */
	 setClipDuration(clipDuration) {
	 	this.clipDuration = clipDuration;
	 }
	
	/**
	 * XSL to transform ingestion MRSS XML
	 * @return string
	 */
	 getXslTransformation() {
	 	return this.xslTransformation;
	 }
	
	/**
	 * @param xslTransformation string XSL to transform ingestion MRSS XML
	 */
	 setXslTransformation(xslTransformation) {
	 	this.xslTransformation = xslTransformation;
	 }
	
	/**
	 * ID of default storage profile to be used for linked net-storage file syncs
	 * @return int
	 */
	 getStorageProfileId() {
	 	return this.storageProfileId;
	 }
	
	/**
	 * @param storageProfileId int ID of default storage profile to be used for linked net-storage file syncs
	 */
	 setStorageProfileId(storageProfileId) {
	 	this.storageProfileId = storageProfileId;
	 }
	
	/**
	 * Media parser type to be used for extract media
	 * @return string
	 */
	 getMediaParserType() {
	 	return this.mediaParserType;
	 }
	
	/**
	 * @param mediaParserType string Media parser type to be used for extract media
	 */
	 setMediaParserType(mediaParserType) {
	 	this.mediaParserType = mediaParserType;
	 }
	
	/**
	 * Should calculate file conversion complexity
	 * @return int
	 */
	 getCalculateComplexity() {
	 	return this.calculateComplexity;
	 }
	
	/**
	 * @param calculateComplexity int Should calculate file conversion complexity
	 */
	 setCalculateComplexity(calculateComplexity) {
	 	this.calculateComplexity = calculateComplexity;
	 }
	
	/**
	 * Defines the tags that should be used to define 'collective'/group/multi-flavor processing,
 * like 'mbr' or 'ism'
	 * @return string
	 */
	 getCollectionTags() {
	 	return this.collectionTags;
	 }
	
	/**
	 * @param collectionTags string Defines the tags that should be used to define 'collective'/group/multi-flavor processing,
 * like 'mbr' or 'ism'
	 */
	 setCollectionTags(collectionTags) {
	 	this.collectionTags = collectionTags;
	 }
	
	/**
	 * JSON string with array of "condition,profile-id" pairs
	 * @return string
	 */
	 getConditionalProfiles() {
	 	return this.conditionalProfiles;
	 }
	
	/**
	 * @param conditionalProfiles string JSON string with array of "condition,profile-id" pairs
	 */
	 setConditionalProfiles(conditionalProfiles) {
	 	this.conditionalProfiles = conditionalProfiles;
	 }
	
	/**
	 * When set, the ExtractMedia job should detect the source file GOP using this value as the max calculated period
	 * @return int
	 */
	 getDetectGOP() {
	 	return this.detectGOP;
	 }
	
	/**
	 * @param detectGOP int When set, the ExtractMedia job should detect the source file GOP using this value as the max calculated period
	 */
	 setDetectGOP(detectGOP) {
	 	this.detectGOP = detectGOP;
	 }
}
module.exports.ConversionProfile = ConversionProfile;

/**
 *
 */
class ConversionProfileAssetParams extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaConversionProfileAssetParams';
	}
	
	/**
	 * The id of the conversion profile
	 * @return int
	 */
	 getConversionProfileId() {
	 	return this.conversionProfileId;
	 }
	
	/**
	 * The id of the asset params
	 * @return int
	 */
	 getAssetParamsId() {
	 	return this.assetParamsId;
	 }
	
	/**
	 * The ingestion origin of the asset params
	 * @return int
	 */
	 getReadyBehavior() {
	 	return this.readyBehavior;
	 }
	
	/**
	 * @param readyBehavior int The ingestion origin of the asset params
	 */
	 setReadyBehavior(readyBehavior) {
	 	this.readyBehavior = readyBehavior;
	 }
	
	/**
	 * The ingestion origin of the asset params
	 * @return int
	 */
	 getOrigin() {
	 	return this.origin;
	 }
	
	/**
	 * @param origin int The ingestion origin of the asset params
	 */
	 setOrigin(origin) {
	 	this.origin = origin;
	 }
	
	/**
	 * Asset params system name
	 * @return string
	 */
	 getSystemName() {
	 	return this.systemName;
	 }
	
	/**
	 * @param systemName string Asset params system name
	 */
	 setSystemName(systemName) {
	 	this.systemName = systemName;
	 }
	
	/**
	 * Starts conversion even if the decision layer reduced the configuration to comply with the source
	 * @return int
	 */
	 getForceNoneComplied() {
	 	return this.forceNoneComplied;
	 }
	
	/**
	 * @param forceNoneComplied int Starts conversion even if the decision layer reduced the configuration to comply with the source
	 */
	 setForceNoneComplied(forceNoneComplied) {
	 	this.forceNoneComplied = forceNoneComplied;
	 }
	
	/**
	 * Specifies how to treat the flavor after conversion is finished
	 * @return int
	 */
	 getDeletePolicy() {
	 	return this.deletePolicy;
	 }
	
	/**
	 * @param deletePolicy int Specifies how to treat the flavor after conversion is finished
	 */
	 setDeletePolicy(deletePolicy) {
	 	this.deletePolicy = deletePolicy;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getIsEncrypted() {
	 	return this.isEncrypted;
	 }
	
	/**
	 * @param isEncrypted int 
	 */
	 setIsEncrypted(isEncrypted) {
	 	this.isEncrypted = isEncrypted;
	 }
	
	/**
	 * 
	 * @return float
	 */
	 getContentAwareness() {
	 	return this.contentAwareness;
	 }
	
	/**
	 * @param contentAwareness float 
	 */
	 setContentAwareness(contentAwareness) {
	 	this.contentAwareness = contentAwareness;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getTwoPass() {
	 	return this.twoPass;
	 }
	
	/**
	 * @param twoPass int 
	 */
	 setTwoPass(twoPass) {
	 	this.twoPass = twoPass;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getTags() {
	 	return this.tags;
	 }
	
	/**
	 * @param tags string 
	 */
	 setTags(tags) {
	 	this.tags = tags;
	 }
}
module.exports.ConversionProfileAssetParams = ConversionProfileAssetParams;

/**
 *
 */
class ConvertCollectionFlavorData extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaConvertCollectionFlavorData';
	}
	
	/**
	 * 
	 * @return string
	 */
	 getFlavorAssetId() {
	 	return this.flavorAssetId;
	 }
	
	/**
	 * @param flavorAssetId string 
	 */
	 setFlavorAssetId(flavorAssetId) {
	 	this.flavorAssetId = flavorAssetId;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getFlavorParamsOutputId() {
	 	return this.flavorParamsOutputId;
	 }
	
	/**
	 * @param flavorParamsOutputId int 
	 */
	 setFlavorParamsOutputId(flavorParamsOutputId) {
	 	this.flavorParamsOutputId = flavorParamsOutputId;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getReadyBehavior() {
	 	return this.readyBehavior;
	 }
	
	/**
	 * @param readyBehavior int 
	 */
	 setReadyBehavior(readyBehavior) {
	 	this.readyBehavior = readyBehavior;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getVideoBitrate() {
	 	return this.videoBitrate;
	 }
	
	/**
	 * @param videoBitrate int 
	 */
	 setVideoBitrate(videoBitrate) {
	 	this.videoBitrate = videoBitrate;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getAudioBitrate() {
	 	return this.audioBitrate;
	 }
	
	/**
	 * @param audioBitrate int 
	 */
	 setAudioBitrate(audioBitrate) {
	 	this.audioBitrate = audioBitrate;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getDestFileSyncLocalPath() {
	 	return this.destFileSyncLocalPath;
	 }
	
	/**
	 * @param destFileSyncLocalPath string 
	 */
	 setDestFileSyncLocalPath(destFileSyncLocalPath) {
	 	this.destFileSyncLocalPath = destFileSyncLocalPath;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getDestFileSyncRemoteUrl() {
	 	return this.destFileSyncRemoteUrl;
	 }
	
	/**
	 * @param destFileSyncRemoteUrl string 
	 */
	 setDestFileSyncRemoteUrl(destFileSyncRemoteUrl) {
	 	this.destFileSyncRemoteUrl = destFileSyncRemoteUrl;
	 }
}
module.exports.ConvertCollectionFlavorData = ConvertCollectionFlavorData;

/**
 *
 */
class Coordinate extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaCoordinate';
	}
	
	/**
	 * 
	 * @return float
	 */
	 getLatitude() {
	 	return this.latitude;
	 }
	
	/**
	 * @param latitude float 
	 */
	 setLatitude(latitude) {
	 	this.latitude = latitude;
	 }
	
	/**
	 * 
	 * @return float
	 */
	 getLongitude() {
	 	return this.longitude;
	 }
	
	/**
	 * @param longitude float 
	 */
	 setLongitude(longitude) {
	 	this.longitude = longitude;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getName() {
	 	return this.name;
	 }
	
	/**
	 * @param name string 
	 */
	 setName(name) {
	 	this.name = name;
	 }
}
module.exports.Coordinate = Coordinate;

/**
 *
 */
class DataEntry extends BaseEntry{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaDataEntry';
	}
	
	/**
	 * The data of the entry
	 * @return string
	 */
	 getDataContent() {
	 	return this.dataContent;
	 }
	
	/**
	 * @param dataContent string The data of the entry
	 */
	 setDataContent(dataContent) {
	 	this.dataContent = dataContent;
	 }
	
	/**
	 * indicator whether to return the object for get action with the dataContent field
	 * @return bool
	 */
	 getRetrieveDataContentByGet() {
	 	return this.retrieveDataContentByGet;
	 }
	
	/**
	 * @param retrieveDataContentByGet bool indicator whether to return the object for get action with the dataContent field
	 */
	 setRetrieveDataContentByGet(retrieveDataContentByGet) {
	 	this.retrieveDataContentByGet = retrieveDataContentByGet;
	 }
}
module.exports.DataEntry = DataEntry;

/**
 *
 */
class UrlRecognizer extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaUrlRecognizer';
	}
	
	/**
	 * The hosts that are recognized
	 * @return string
	 */
	 getHosts() {
	 	return this.hosts;
	 }
	
	/**
	 * @param hosts string The hosts that are recognized
	 */
	 setHosts(hosts) {
	 	this.hosts = hosts;
	 }
	
	/**
	 * The URI prefix we use for security
	 * @return string
	 */
	 getUriPrefix() {
	 	return this.uriPrefix;
	 }
	
	/**
	 * @param uriPrefix string The URI prefix we use for security
	 */
	 setUriPrefix(uriPrefix) {
	 	this.uriPrefix = uriPrefix;
	 }
}
module.exports.UrlRecognizer = UrlRecognizer;

/**
 *
 */
class UrlTokenizer extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaUrlTokenizer';
	}
	
	/**
	 * Window
	 * @return int
	 */
	 getWindow() {
	 	return this.window;
	 }
	
	/**
	 * @param window int Window
	 */
	 setWindow(window) {
	 	this.window = window;
	 }
	
	/**
	 * key
	 * @return string
	 */
	 getKey() {
	 	return this.key;
	 }
	
	/**
	 * @param key string key
	 */
	 setKey(key) {
	 	this.key = key;
	 }
	
	/**
	 * 
	 * @return bool
	 */
	 getLimitIpAddress() {
	 	return this.limitIpAddress;
	 }
	
	/**
	 * @param limitIpAddress bool 
	 */
	 setLimitIpAddress(limitIpAddress) {
	 	this.limitIpAddress = limitIpAddress;
	 }
}
module.exports.UrlTokenizer = UrlTokenizer;

/**
 *
 */
class SearchItem extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaSearchItem';
	}
}
module.exports.SearchItem = SearchItem;

/**
 *
 */
class Filter extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaFilter';
	}
	
	/**
	 * 
	 * @return string
	 */
	 getOrderBy() {
	 	return this.orderBy;
	 }
	
	/**
	 * @param orderBy string 
	 */
	 setOrderBy(orderBy) {
	 	this.orderBy = orderBy;
	 }
	
	/**
	 * 
	 * @return SearchItem
	 */
	 getAdvancedSearch() {
	 	return this.advancedSearch;
	 }
	
	/**
	 * @param advancedSearch SearchItem 
	 */
	 setAdvancedSearch(advancedSearch) {
	 	this.advancedSearch = advancedSearch;
	 }
}
module.exports.Filter = Filter;

/**
 *
 */
class RelatedFilter extends Filter{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaRelatedFilter';
	}
}
module.exports.RelatedFilter = RelatedFilter;

/**
 *
 */
class AssetBaseFilter extends RelatedFilter{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaAssetBaseFilter';
	}
	
	/**
	 * 
	 * @return string
	 */
	 getIdEqual() {
	 	return this.idEqual;
	 }
	
	/**
	 * @param idEqual string 
	 */
	 setIdEqual(idEqual) {
	 	this.idEqual = idEqual;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getIdIn() {
	 	return this.idIn;
	 }
	
	/**
	 * @param idIn string 
	 */
	 setIdIn(idIn) {
	 	this.idIn = idIn;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getEntryIdEqual() {
	 	return this.entryIdEqual;
	 }
	
	/**
	 * @param entryIdEqual string 
	 */
	 setEntryIdEqual(entryIdEqual) {
	 	this.entryIdEqual = entryIdEqual;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getEntryIdIn() {
	 	return this.entryIdIn;
	 }
	
	/**
	 * @param entryIdIn string 
	 */
	 setEntryIdIn(entryIdIn) {
	 	this.entryIdIn = entryIdIn;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getPartnerIdEqual() {
	 	return this.partnerIdEqual;
	 }
	
	/**
	 * @param partnerIdEqual int 
	 */
	 setPartnerIdEqual(partnerIdEqual) {
	 	this.partnerIdEqual = partnerIdEqual;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getPartnerIdIn() {
	 	return this.partnerIdIn;
	 }
	
	/**
	 * @param partnerIdIn string 
	 */
	 setPartnerIdIn(partnerIdIn) {
	 	this.partnerIdIn = partnerIdIn;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getSizeGreaterThanOrEqual() {
	 	return this.sizeGreaterThanOrEqual;
	 }
	
	/**
	 * @param sizeGreaterThanOrEqual int 
	 */
	 setSizeGreaterThanOrEqual(sizeGreaterThanOrEqual) {
	 	this.sizeGreaterThanOrEqual = sizeGreaterThanOrEqual;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getSizeLessThanOrEqual() {
	 	return this.sizeLessThanOrEqual;
	 }
	
	/**
	 * @param sizeLessThanOrEqual int 
	 */
	 setSizeLessThanOrEqual(sizeLessThanOrEqual) {
	 	this.sizeLessThanOrEqual = sizeLessThanOrEqual;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getTagsLike() {
	 	return this.tagsLike;
	 }
	
	/**
	 * @param tagsLike string 
	 */
	 setTagsLike(tagsLike) {
	 	this.tagsLike = tagsLike;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getTagsMultiLikeOr() {
	 	return this.tagsMultiLikeOr;
	 }
	
	/**
	 * @param tagsMultiLikeOr string 
	 */
	 setTagsMultiLikeOr(tagsMultiLikeOr) {
	 	this.tagsMultiLikeOr = tagsMultiLikeOr;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getTagsMultiLikeAnd() {
	 	return this.tagsMultiLikeAnd;
	 }
	
	/**
	 * @param tagsMultiLikeAnd string 
	 */
	 setTagsMultiLikeAnd(tagsMultiLikeAnd) {
	 	this.tagsMultiLikeAnd = tagsMultiLikeAnd;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getCreatedAtGreaterThanOrEqual() {
	 	return this.createdAtGreaterThanOrEqual;
	 }
	
	/**
	 * @param createdAtGreaterThanOrEqual int 
	 */
	 setCreatedAtGreaterThanOrEqual(createdAtGreaterThanOrEqual) {
	 	this.createdAtGreaterThanOrEqual = createdAtGreaterThanOrEqual;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getCreatedAtLessThanOrEqual() {
	 	return this.createdAtLessThanOrEqual;
	 }
	
	/**
	 * @param createdAtLessThanOrEqual int 
	 */
	 setCreatedAtLessThanOrEqual(createdAtLessThanOrEqual) {
	 	this.createdAtLessThanOrEqual = createdAtLessThanOrEqual;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getUpdatedAtGreaterThanOrEqual() {
	 	return this.updatedAtGreaterThanOrEqual;
	 }
	
	/**
	 * @param updatedAtGreaterThanOrEqual int 
	 */
	 setUpdatedAtGreaterThanOrEqual(updatedAtGreaterThanOrEqual) {
	 	this.updatedAtGreaterThanOrEqual = updatedAtGreaterThanOrEqual;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getUpdatedAtLessThanOrEqual() {
	 	return this.updatedAtLessThanOrEqual;
	 }
	
	/**
	 * @param updatedAtLessThanOrEqual int 
	 */
	 setUpdatedAtLessThanOrEqual(updatedAtLessThanOrEqual) {
	 	this.updatedAtLessThanOrEqual = updatedAtLessThanOrEqual;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getDeletedAtGreaterThanOrEqual() {
	 	return this.deletedAtGreaterThanOrEqual;
	 }
	
	/**
	 * @param deletedAtGreaterThanOrEqual int 
	 */
	 setDeletedAtGreaterThanOrEqual(deletedAtGreaterThanOrEqual) {
	 	this.deletedAtGreaterThanOrEqual = deletedAtGreaterThanOrEqual;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getDeletedAtLessThanOrEqual() {
	 	return this.deletedAtLessThanOrEqual;
	 }
	
	/**
	 * @param deletedAtLessThanOrEqual int 
	 */
	 setDeletedAtLessThanOrEqual(deletedAtLessThanOrEqual) {
	 	this.deletedAtLessThanOrEqual = deletedAtLessThanOrEqual;
	 }
}
module.exports.AssetBaseFilter = AssetBaseFilter;

/**
 *
 */
class AssetFilter extends AssetBaseFilter{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaAssetFilter';
	}
	
	/**
	 * 
	 * @return string
	 */
	 getTypeIn() {
	 	return this.typeIn;
	 }
	
	/**
	 * @param typeIn string 
	 */
	 setTypeIn(typeIn) {
	 	this.typeIn = typeIn;
	 }
}
module.exports.AssetFilter = AssetFilter;

/**
 *
 */
class DeliveryProfile extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaDeliveryProfile';
	}
	
	/**
	 * The id of the Delivery
	 * @return int
	 */
	 getId() {
	 	return this.id;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getPartnerId() {
	 	return this.partnerId;
	 }
	
	/**
	 * The name of the Delivery
	 * @return string
	 */
	 getName() {
	 	return this.name;
	 }
	
	/**
	 * @param name string The name of the Delivery
	 */
	 setName(name) {
	 	this.name = name;
	 }
	
	/**
	 * Delivery type
	 * @return string
	 */
	 getType() {
	 	return this.type;
	 }
	
	/**
	 * @param type string Delivery type
	 */
	 setType(type) {
	 	this.type = type;
	 }
	
	/**
	 * System name of the delivery
	 * @return string
	 */
	 getSystemName() {
	 	return this.systemName;
	 }
	
	/**
	 * @param systemName string System name of the delivery
	 */
	 setSystemName(systemName) {
	 	this.systemName = systemName;
	 }
	
	/**
	 * The description of the Delivery
	 * @return string
	 */
	 getDescription() {
	 	return this.description;
	 }
	
	/**
	 * @param description string The description of the Delivery
	 */
	 setDescription(description) {
	 	this.description = description;
	 }
	
	/**
	 * Creation time as Unix timestamp (In seconds)
	 * @return int
	 */
	 getCreatedAt() {
	 	return this.createdAt;
	 }
	
	/**
	 * Update time as Unix timestamp (In seconds)
	 * @return int
	 */
	 getUpdatedAt() {
	 	return this.updatedAt;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getStreamerType() {
	 	return this.streamerType;
	 }
	
	/**
	 * @param streamerType string 
	 */
	 setStreamerType(streamerType) {
	 	this.streamerType = streamerType;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getUrl() {
	 	return this.url;
	 }
	
	/**
	 * @param url string 
	 */
	 setUrl(url) {
	 	this.url = url;
	 }
	
	/**
	 * the host part of the url
	 * @return string
	 */
	 getHostName() {
	 	return this.hostName;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getStatus() {
	 	return this.status;
	 }
	
	/**
	 * @param status int 
	 */
	 setStatus(status) {
	 	this.status = status;
	 }
	
	/**
	 * 
	 * @return UrlRecognizer
	 */
	 getRecognizer() {
	 	return this.recognizer;
	 }
	
	/**
	 * @param recognizer UrlRecognizer 
	 */
	 setRecognizer(recognizer) {
	 	this.recognizer = recognizer;
	 }
	
	/**
	 * 
	 * @return UrlTokenizer
	 */
	 getTokenizer() {
	 	return this.tokenizer;
	 }
	
	/**
	 * @param tokenizer UrlTokenizer 
	 */
	 setTokenizer(tokenizer) {
	 	this.tokenizer = tokenizer;
	 }
	
	/**
	 * True if this is the systemwide default for the protocol
	 * @return int
	 */
	 getIsDefault() {
	 	return this.isDefault;
	 }
	
	/**
	 * the object from which this object was cloned (or 0)
	 * @return int
	 */
	 getParentId() {
	 	return this.parentId;
	 }
	
	/**
	 * Comma separated list of supported media protocols. f.i. rtmpe
	 * @return string
	 */
	 getMediaProtocols() {
	 	return this.mediaProtocols;
	 }
	
	/**
	 * @param mediaProtocols string Comma separated list of supported media protocols. f.i. rtmpe
	 */
	 setMediaProtocols(mediaProtocols) {
	 	this.mediaProtocols = mediaProtocols;
	 }
	
	/**
	 * priority used for ordering similar delivery profiles
	 * @return int
	 */
	 getPriority() {
	 	return this.priority;
	 }
	
	/**
	 * @param priority int priority used for ordering similar delivery profiles
	 */
	 setPriority(priority) {
	 	this.priority = priority;
	 }
	
	/**
	 * Extra query string parameters that should be added to the url
	 * @return string
	 */
	 getExtraParams() {
	 	return this.extraParams;
	 }
	
	/**
	 * @param extraParams string Extra query string parameters that should be added to the url
	 */
	 setExtraParams(extraParams) {
	 	this.extraParams = extraParams;
	 }
	
	/**
	 * A filter that can be used to include additional assets in the URL (e.g. captions)
	 * @return AssetFilter
	 */
	 getSupplementaryAssetsFilter() {
	 	return this.supplementaryAssetsFilter;
	 }
	
	/**
	 * @param supplementaryAssetsFilter AssetFilter A filter that can be used to include additional assets in the URL (e.g. captions)
	 */
	 setSupplementaryAssetsFilter(supplementaryAssetsFilter) {
	 	this.supplementaryAssetsFilter = supplementaryAssetsFilter;
	 }
}
module.exports.DeliveryProfile = DeliveryProfile;

/**
 *
 */
class FileSyncDescriptor extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaFileSyncDescriptor';
	}
	
	/**
	 * 
	 * @return string
	 */
	 getFileSyncLocalPath() {
	 	return this.fileSyncLocalPath;
	 }
	
	/**
	 * @param fileSyncLocalPath string 
	 */
	 setFileSyncLocalPath(fileSyncLocalPath) {
	 	this.fileSyncLocalPath = fileSyncLocalPath;
	 }
	
	/**
	 * The translated path as used by the scheduler
	 * @return string
	 */
	 getFileSyncRemoteUrl() {
	 	return this.fileSyncRemoteUrl;
	 }
	
	/**
	 * @param fileSyncRemoteUrl string The translated path as used by the scheduler
	 */
	 setFileSyncRemoteUrl(fileSyncRemoteUrl) {
	 	this.fileSyncRemoteUrl = fileSyncRemoteUrl;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getFileSyncObjectSubType() {
	 	return this.fileSyncObjectSubType;
	 }
	
	/**
	 * @param fileSyncObjectSubType int 
	 */
	 setFileSyncObjectSubType(fileSyncObjectSubType) {
	 	this.fileSyncObjectSubType = fileSyncObjectSubType;
	 }
}
module.exports.FileSyncDescriptor = FileSyncDescriptor;

/**
 *
 */
class DestFileSyncDescriptor extends FileSyncDescriptor{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaDestFileSyncDescriptor';
	}
}
module.exports.DestFileSyncDescriptor = DestFileSyncDescriptor;

/**
 *
 */
class FilterPager extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaFilterPager';
	}
	
	/**
	 * The number of objects to retrieve. (Default is 30, maximum page size is 500)
	 * @return int
	 */
	 getPageSize() {
	 	return this.pageSize;
	 }
	
	/**
	 * @param pageSize int The number of objects to retrieve. (Default is 30, maximum page size is 500)
	 */
	 setPageSize(pageSize) {
	 	this.pageSize = pageSize;
	 }
	
	/**
	 * The page number for which {pageSize} of objects should be retrieved (Default is 1)
	 * @return int
	 */
	 getPageIndex() {
	 	return this.pageIndex;
	 }
	
	/**
	 * @param pageIndex int The page number for which {pageSize} of objects should be retrieved (Default is 1)
	 */
	 setPageIndex(pageIndex) {
	 	this.pageIndex = pageIndex;
	 }
}
module.exports.FilterPager = FilterPager;

/**
 *
 */
class ResponseProfileMapping extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaResponseProfileMapping';
	}
	
	/**
	 * 
	 * @return string
	 */
	 getParentProperty() {
	 	return this.parentProperty;
	 }
	
	/**
	 * @param parentProperty string 
	 */
	 setParentProperty(parentProperty) {
	 	this.parentProperty = parentProperty;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getFilterProperty() {
	 	return this.filterProperty;
	 }
	
	/**
	 * @param filterProperty string 
	 */
	 setFilterProperty(filterProperty) {
	 	this.filterProperty = filterProperty;
	 }
	
	/**
	 * 
	 * @return bool
	 */
	 getAllowNull() {
	 	return this.allowNull;
	 }
	
	/**
	 * @param allowNull bool 
	 */
	 setAllowNull(allowNull) {
	 	this.allowNull = allowNull;
	 }
}
module.exports.ResponseProfileMapping = ResponseProfileMapping;

/**
 *
 */
class DetachedResponseProfile extends BaseResponseProfile{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaDetachedResponseProfile';
	}
	
	/**
	 * Friendly name
	 * @return string
	 */
	 getName() {
	 	return this.name;
	 }
	
	/**
	 * @param name string Friendly name
	 */
	 setName(name) {
	 	this.name = name;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getType() {
	 	return this.type;
	 }
	
	/**
	 * @param type int 
	 */
	 setType(type) {
	 	this.type = type;
	 }
	
	/**
	 * Comma separated fields list to be included or excluded
	 * @return string
	 */
	 getFields() {
	 	return this.fields;
	 }
	
	/**
	 * @param fields string Comma separated fields list to be included or excluded
	 */
	 setFields(fields) {
	 	this.fields = fields;
	 }
	
	/**
	 * 
	 * @return RelatedFilter
	 */
	 getFilter() {
	 	return this.filter;
	 }
	
	/**
	 * @param filter RelatedFilter 
	 */
	 setFilter(filter) {
	 	this.filter = filter;
	 }
	
	/**
	 * 
	 * @return FilterPager
	 */
	 getPager() {
	 	return this.pager;
	 }
	
	/**
	 * @param pager FilterPager 
	 */
	 setPager(pager) {
	 	this.pager = pager;
	 }
	
	/**
	 * 
	 * @return array
	 */
	 getRelatedProfiles() {
	 	return this.relatedProfiles;
	 }
	
	/**
	 * @param relatedProfiles array 
	 */
	 setRelatedProfiles(relatedProfiles) {
	 	this.relatedProfiles = relatedProfiles;
	 }
	
	/**
	 * 
	 * @return array
	 */
	 getMappings() {
	 	return this.mappings;
	 }
	
	/**
	 * @param mappings array 
	 */
	 setMappings(mappings) {
	 	this.mappings = mappings;
	 }
}
module.exports.DetachedResponseProfile = DetachedResponseProfile;

/**
 *
 */
class DistributionFieldConfig extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaDistributionFieldConfig';
	}
	
	/**
	 * A value taken from a connector field enum which associates the current configuration to that connector field
 * Field enum class should be returned by the provider's getFieldEnumClass function
	 * @return string
	 */
	 getFieldName() {
	 	return this.fieldName;
	 }
	
	/**
	 * @param fieldName string A value taken from a connector field enum which associates the current configuration to that connector field
 * Field enum class should be returned by the provider's getFieldEnumClass function
	 */
	 setFieldName(fieldName) {
	 	this.fieldName = fieldName;
	 }
	
	/**
	 * A string that will be shown to the user as the field name in error messages related to the current field
	 * @return string
	 */
	 getUserFriendlyFieldName() {
	 	return this.userFriendlyFieldName;
	 }
	
	/**
	 * @param userFriendlyFieldName string A string that will be shown to the user as the field name in error messages related to the current field
	 */
	 setUserFriendlyFieldName(userFriendlyFieldName) {
	 	this.userFriendlyFieldName = userFriendlyFieldName;
	 }
	
	/**
	 * An XSLT string that extracts the right value from the Kaltura entry MRSS XML.
 * The value of the current connector field will be the one that is returned from transforming the Kaltura entry MRSS XML using this XSLT string
	 * @return string
	 */
	 getEntryMrssXslt() {
	 	return this.entryMrssXslt;
	 }
	
	/**
	 * @param entryMrssXslt string An XSLT string that extracts the right value from the Kaltura entry MRSS XML.
 * The value of the current connector field will be the one that is returned from transforming the Kaltura entry MRSS XML using this XSLT string
	 */
	 setEntryMrssXslt(entryMrssXslt) {
	 	this.entryMrssXslt = entryMrssXslt;
	 }
	
	/**
	 * Is the field required to have a value for submission ?
	 * @return int
	 */
	 getIsRequired() {
	 	return this.isRequired;
	 }
	
	/**
	 * @param isRequired int Is the field required to have a value for submission ?
	 */
	 setIsRequired(isRequired) {
	 	this.isRequired = isRequired;
	 }
	
	/**
	 * Trigger distribution update when this field changes or not ?
	 * @return bool
	 */
	 getUpdateOnChange() {
	 	return this.updateOnChange;
	 }
	
	/**
	 * @param updateOnChange bool Trigger distribution update when this field changes or not ?
	 */
	 setUpdateOnChange(updateOnChange) {
	 	this.updateOnChange = updateOnChange;
	 }
	
	/**
	 * Entry column or metadata xpath that should trigger an update
	 * @return array
	 */
	 getUpdateParams() {
	 	return this.updateParams;
	 }
	
	/**
	 * @param updateParams array Entry column or metadata xpath that should trigger an update
	 */
	 setUpdateParams(updateParams) {
	 	this.updateParams = updateParams;
	 }
	
	/**
	 * Is this field config is the default for the distribution provider?
	 * @return bool
	 */
	 getIsDefault() {
	 	return this.isDefault;
	 }
	
	/**
	 * Is an error on this field going to trigger deletion of distributed content?
	 * @return bool
	 */
	 getTriggerDeleteOnError() {
	 	return this.triggerDeleteOnError;
	 }
	
	/**
	 * @param triggerDeleteOnError bool Is an error on this field going to trigger deletion of distributed content?
	 */
	 setTriggerDeleteOnError(triggerDeleteOnError) {
	 	this.triggerDeleteOnError = triggerDeleteOnError;
	 }
}
module.exports.DistributionFieldConfig = DistributionFieldConfig;

/**
 *
 */
class DistributionJobProviderData extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaDistributionJobProviderData';
	}
}
module.exports.DistributionJobProviderData = DistributionJobProviderData;

/**
 *
 */
class DistributionThumbDimensions extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaDistributionThumbDimensions';
	}
	
	/**
	 * 
	 * @return int
	 */
	 getWidth() {
	 	return this.width;
	 }
	
	/**
	 * @param width int 
	 */
	 setWidth(width) {
	 	this.width = width;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getHeight() {
	 	return this.height;
	 }
	
	/**
	 * @param height int 
	 */
	 setHeight(height) {
	 	this.height = height;
	 }
}
module.exports.DistributionThumbDimensions = DistributionThumbDimensions;

/**
 *
 */
class DistributionProfile extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaDistributionProfile';
	}
	
	/**
	 * Auto generated unique id
	 * @return int
	 */
	 getId() {
	 	return this.id;
	 }
	
	/**
	 * Profile creation date as Unix timestamp (In seconds)
	 * @return int
	 */
	 getCreatedAt() {
	 	return this.createdAt;
	 }
	
	/**
	 * Profile last update date as Unix timestamp (In seconds)
	 * @return int
	 */
	 getUpdatedAt() {
	 	return this.updatedAt;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getPartnerId() {
	 	return this.partnerId;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getProviderType() {
	 	return this.providerType;
	 }
	
	/**
	 * @param providerType string 
	 */
	 setProviderType(providerType) {
	 	this.providerType = providerType;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getName() {
	 	return this.name;
	 }
	
	/**
	 * @param name string 
	 */
	 setName(name) {
	 	this.name = name;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getStatus() {
	 	return this.status;
	 }
	
	/**
	 * @param status int 
	 */
	 setStatus(status) {
	 	this.status = status;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getSubmitEnabled() {
	 	return this.submitEnabled;
	 }
	
	/**
	 * @param submitEnabled int 
	 */
	 setSubmitEnabled(submitEnabled) {
	 	this.submitEnabled = submitEnabled;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getUpdateEnabled() {
	 	return this.updateEnabled;
	 }
	
	/**
	 * @param updateEnabled int 
	 */
	 setUpdateEnabled(updateEnabled) {
	 	this.updateEnabled = updateEnabled;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getDeleteEnabled() {
	 	return this.deleteEnabled;
	 }
	
	/**
	 * @param deleteEnabled int 
	 */
	 setDeleteEnabled(deleteEnabled) {
	 	this.deleteEnabled = deleteEnabled;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getReportEnabled() {
	 	return this.reportEnabled;
	 }
	
	/**
	 * @param reportEnabled int 
	 */
	 setReportEnabled(reportEnabled) {
	 	this.reportEnabled = reportEnabled;
	 }
	
	/**
	 * Comma separated flavor params ids that should be auto converted
	 * @return string
	 */
	 getAutoCreateFlavors() {
	 	return this.autoCreateFlavors;
	 }
	
	/**
	 * @param autoCreateFlavors string Comma separated flavor params ids that should be auto converted
	 */
	 setAutoCreateFlavors(autoCreateFlavors) {
	 	this.autoCreateFlavors = autoCreateFlavors;
	 }
	
	/**
	 * Comma separated thumbnail params ids that should be auto generated
	 * @return string
	 */
	 getAutoCreateThumb() {
	 	return this.autoCreateThumb;
	 }
	
	/**
	 * @param autoCreateThumb string Comma separated thumbnail params ids that should be auto generated
	 */
	 setAutoCreateThumb(autoCreateThumb) {
	 	this.autoCreateThumb = autoCreateThumb;
	 }
	
	/**
	 * Comma separated flavor params ids that should be submitted if ready
	 * @return string
	 */
	 getOptionalFlavorParamsIds() {
	 	return this.optionalFlavorParamsIds;
	 }
	
	/**
	 * @param optionalFlavorParamsIds string Comma separated flavor params ids that should be submitted if ready
	 */
	 setOptionalFlavorParamsIds(optionalFlavorParamsIds) {
	 	this.optionalFlavorParamsIds = optionalFlavorParamsIds;
	 }
	
	/**
	 * Comma separated flavor params ids that required to be ready before submission
	 * @return string
	 */
	 getRequiredFlavorParamsIds() {
	 	return this.requiredFlavorParamsIds;
	 }
	
	/**
	 * @param requiredFlavorParamsIds string Comma separated flavor params ids that required to be ready before submission
	 */
	 setRequiredFlavorParamsIds(requiredFlavorParamsIds) {
	 	this.requiredFlavorParamsIds = requiredFlavorParamsIds;
	 }
	
	/**
	 * Thumbnail dimensions that should be submitted if ready
	 * @return array
	 */
	 getOptionalThumbDimensions() {
	 	return this.optionalThumbDimensions;
	 }
	
	/**
	 * @param optionalThumbDimensions array Thumbnail dimensions that should be submitted if ready
	 */
	 setOptionalThumbDimensions(optionalThumbDimensions) {
	 	this.optionalThumbDimensions = optionalThumbDimensions;
	 }
	
	/**
	 * Thumbnail dimensions that required to be readt before submission
	 * @return array
	 */
	 getRequiredThumbDimensions() {
	 	return this.requiredThumbDimensions;
	 }
	
	/**
	 * @param requiredThumbDimensions array Thumbnail dimensions that required to be readt before submission
	 */
	 setRequiredThumbDimensions(requiredThumbDimensions) {
	 	this.requiredThumbDimensions = requiredThumbDimensions;
	 }
	
	/**
	 * Asset Distribution Rules for assets that should be submitted if ready
	 * @return array
	 */
	 getOptionalAssetDistributionRules() {
	 	return this.optionalAssetDistributionRules;
	 }
	
	/**
	 * @param optionalAssetDistributionRules array Asset Distribution Rules for assets that should be submitted if ready
	 */
	 setOptionalAssetDistributionRules(optionalAssetDistributionRules) {
	 	this.optionalAssetDistributionRules = optionalAssetDistributionRules;
	 }
	
	/**
	 * Assets Asset Distribution Rules for assets that are required to be ready before submission
	 * @return array
	 */
	 getRequiredAssetDistributionRules() {
	 	return this.requiredAssetDistributionRules;
	 }
	
	/**
	 * @param requiredAssetDistributionRules array Assets Asset Distribution Rules for assets that are required to be ready before submission
	 */
	 setRequiredAssetDistributionRules(requiredAssetDistributionRules) {
	 	this.requiredAssetDistributionRules = requiredAssetDistributionRules;
	 }
	
	/**
	 * If entry distribution sunrise not specified that will be the default since entry creation time, in seconds
	 * @return int
	 */
	 getSunriseDefaultOffset() {
	 	return this.sunriseDefaultOffset;
	 }
	
	/**
	 * @param sunriseDefaultOffset int If entry distribution sunrise not specified that will be the default since entry creation time, in seconds
	 */
	 setSunriseDefaultOffset(sunriseDefaultOffset) {
	 	this.sunriseDefaultOffset = sunriseDefaultOffset;
	 }
	
	/**
	 * If entry distribution sunset not specified that will be the default since entry creation time, in seconds
	 * @return int
	 */
	 getSunsetDefaultOffset() {
	 	return this.sunsetDefaultOffset;
	 }
	
	/**
	 * @param sunsetDefaultOffset int If entry distribution sunset not specified that will be the default since entry creation time, in seconds
	 */
	 setSunsetDefaultOffset(sunsetDefaultOffset) {
	 	this.sunsetDefaultOffset = sunsetDefaultOffset;
	 }
	
	/**
	 * The best external storage to be used to download the asset files from
	 * @return int
	 */
	 getRecommendedStorageProfileForDownload() {
	 	return this.recommendedStorageProfileForDownload;
	 }
	
	/**
	 * @param recommendedStorageProfileForDownload int The best external storage to be used to download the asset files from
	 */
	 setRecommendedStorageProfileForDownload(recommendedStorageProfileForDownload) {
	 	this.recommendedStorageProfileForDownload = recommendedStorageProfileForDownload;
	 }
	
	/**
	 * The best Kaltura data center to be used to download the asset files to
	 * @return int
	 */
	 getRecommendedDcForDownload() {
	 	return this.recommendedDcForDownload;
	 }
	
	/**
	 * @param recommendedDcForDownload int The best Kaltura data center to be used to download the asset files to
	 */
	 setRecommendedDcForDownload(recommendedDcForDownload) {
	 	this.recommendedDcForDownload = recommendedDcForDownload;
	 }
	
	/**
	 * The best Kaltura data center to be used to execute the distribution job
	 * @return int
	 */
	 getRecommendedDcForExecute() {
	 	return this.recommendedDcForExecute;
	 }
	
	/**
	 * @param recommendedDcForExecute int The best Kaltura data center to be used to execute the distribution job
	 */
	 setRecommendedDcForExecute(recommendedDcForExecute) {
	 	this.recommendedDcForExecute = recommendedDcForExecute;
	 }
}
module.exports.DistributionProfile = DistributionProfile;

/**
 *
 */
class DistributionProvider extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaDistributionProvider';
	}
	
	/**
	 * 
	 * @return string
	 */
	 getType() {
	 	return this.type;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getName() {
	 	return this.name;
	 }
	
	/**
	 * @param name string 
	 */
	 setName(name) {
	 	this.name = name;
	 }
	
	/**
	 * 
	 * @return bool
	 */
	 getScheduleUpdateEnabled() {
	 	return this.scheduleUpdateEnabled;
	 }
	
	/**
	 * @param scheduleUpdateEnabled bool 
	 */
	 setScheduleUpdateEnabled(scheduleUpdateEnabled) {
	 	this.scheduleUpdateEnabled = scheduleUpdateEnabled;
	 }
	
	/**
	 * 
	 * @return bool
	 */
	 getAvailabilityUpdateEnabled() {
	 	return this.availabilityUpdateEnabled;
	 }
	
	/**
	 * @param availabilityUpdateEnabled bool 
	 */
	 setAvailabilityUpdateEnabled(availabilityUpdateEnabled) {
	 	this.availabilityUpdateEnabled = availabilityUpdateEnabled;
	 }
	
	/**
	 * 
	 * @return bool
	 */
	 getDeleteInsteadUpdate() {
	 	return this.deleteInsteadUpdate;
	 }
	
	/**
	 * @param deleteInsteadUpdate bool 
	 */
	 setDeleteInsteadUpdate(deleteInsteadUpdate) {
	 	this.deleteInsteadUpdate = deleteInsteadUpdate;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getIntervalBeforeSunrise() {
	 	return this.intervalBeforeSunrise;
	 }
	
	/**
	 * @param intervalBeforeSunrise int 
	 */
	 setIntervalBeforeSunrise(intervalBeforeSunrise) {
	 	this.intervalBeforeSunrise = intervalBeforeSunrise;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getIntervalBeforeSunset() {
	 	return this.intervalBeforeSunset;
	 }
	
	/**
	 * @param intervalBeforeSunset int 
	 */
	 setIntervalBeforeSunset(intervalBeforeSunset) {
	 	this.intervalBeforeSunset = intervalBeforeSunset;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getUpdateRequiredEntryFields() {
	 	return this.updateRequiredEntryFields;
	 }
	
	/**
	 * @param updateRequiredEntryFields string 
	 */
	 setUpdateRequiredEntryFields(updateRequiredEntryFields) {
	 	this.updateRequiredEntryFields = updateRequiredEntryFields;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getUpdateRequiredMetadataXPaths() {
	 	return this.updateRequiredMetadataXPaths;
	 }
	
	/**
	 * @param updateRequiredMetadataXPaths string 
	 */
	 setUpdateRequiredMetadataXPaths(updateRequiredMetadataXPaths) {
	 	this.updateRequiredMetadataXPaths = updateRequiredMetadataXPaths;
	 }
}
module.exports.DistributionProvider = DistributionProvider;

/**
 *
 */
class DistributionRemoteMediaFile extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaDistributionRemoteMediaFile';
	}
	
	/**
	 * 
	 * @return string
	 */
	 getVersion() {
	 	return this.version;
	 }
	
	/**
	 * @param version string 
	 */
	 setVersion(version) {
	 	this.version = version;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getAssetId() {
	 	return this.assetId;
	 }
	
	/**
	 * @param assetId string 
	 */
	 setAssetId(assetId) {
	 	this.assetId = assetId;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getRemoteId() {
	 	return this.remoteId;
	 }
	
	/**
	 * @param remoteId string 
	 */
	 setRemoteId(remoteId) {
	 	this.remoteId = remoteId;
	 }
}
module.exports.DistributionRemoteMediaFile = DistributionRemoteMediaFile;

/**
 *
 */
class DistributionValidationError extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaDistributionValidationError';
	}
	
	/**
	 * 
	 * @return int
	 */
	 getAction() {
	 	return this.action;
	 }
	
	/**
	 * @param action int 
	 */
	 setAction(action) {
	 	this.action = action;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getErrorType() {
	 	return this.errorType;
	 }
	
	/**
	 * @param errorType int 
	 */
	 setErrorType(errorType) {
	 	this.errorType = errorType;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getDescription() {
	 	return this.description;
	 }
	
	/**
	 * @param description string 
	 */
	 setDescription(description) {
	 	this.description = description;
	 }
}
module.exports.DistributionValidationError = DistributionValidationError;

/**
 *
 */
class DocumentEntry extends BaseEntry{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaDocumentEntry';
	}
	
	/**
	 * The type of the document
	 * @return int
	 */
	 getDocumentType() {
	 	return this.documentType;
	 }
	
	/**
	 * @param documentType int The type of the document
	 */
	 setDocumentType(documentType) {
	 	this.documentType = documentType;
	 }
	
	/**
	 * Comma separated asset params ids that exists for this media entry
	 * @return string
	 */
	 getAssetParamsIds() {
	 	return this.assetParamsIds;
	 }
}
module.exports.DocumentEntry = DocumentEntry;

/**
 *
 */
class DropFolderFileHandlerConfig extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaDropFolderFileHandlerConfig';
	}
	
	/**
	 * 
	 * @return string
	 */
	 getHandlerType() {
	 	return this.handlerType;
	 }
}
module.exports.DropFolderFileHandlerConfig = DropFolderFileHandlerConfig;

/**
 *
 */
class DropFolder extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaDropFolder';
	}
	
	/**
	 * 
	 * @return int
	 */
	 getId() {
	 	return this.id;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getPartnerId() {
	 	return this.partnerId;
	 }
	
	/**
	 * @param partnerId int 
	 */
	 setPartnerId(partnerId) {
	 	this.partnerId = partnerId;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getName() {
	 	return this.name;
	 }
	
	/**
	 * @param name string 
	 */
	 setName(name) {
	 	this.name = name;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getDescription() {
	 	return this.description;
	 }
	
	/**
	 * @param description string 
	 */
	 setDescription(description) {
	 	this.description = description;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getType() {
	 	return this.type;
	 }
	
	/**
	 * @param type string 
	 */
	 setType(type) {
	 	this.type = type;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getStatus() {
	 	return this.status;
	 }
	
	/**
	 * @param status int 
	 */
	 setStatus(status) {
	 	this.status = status;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getConversionProfileId() {
	 	return this.conversionProfileId;
	 }
	
	/**
	 * @param conversionProfileId int 
	 */
	 setConversionProfileId(conversionProfileId) {
	 	this.conversionProfileId = conversionProfileId;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getDc() {
	 	return this.dc;
	 }
	
	/**
	 * @param dc int 
	 */
	 setDc(dc) {
	 	this.dc = dc;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getPath() {
	 	return this.path;
	 }
	
	/**
	 * @param path string 
	 */
	 setPath(path) {
	 	this.path = path;
	 }
	
	/**
	 * The ammount of time, in seconds, that should pass so that a file with no change in size we'll be treated as "finished uploading to folder"
	 * @return int
	 */
	 getFileSizeCheckInterval() {
	 	return this.fileSizeCheckInterval;
	 }
	
	/**
	 * @param fileSizeCheckInterval int The ammount of time, in seconds, that should pass so that a file with no change in size we'll be treated as "finished uploading to folder"
	 */
	 setFileSizeCheckInterval(fileSizeCheckInterval) {
	 	this.fileSizeCheckInterval = fileSizeCheckInterval;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getFileDeletePolicy() {
	 	return this.fileDeletePolicy;
	 }
	
	/**
	 * @param fileDeletePolicy int 
	 */
	 setFileDeletePolicy(fileDeletePolicy) {
	 	this.fileDeletePolicy = fileDeletePolicy;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getAutoFileDeleteDays() {
	 	return this.autoFileDeleteDays;
	 }
	
	/**
	 * @param autoFileDeleteDays int 
	 */
	 setAutoFileDeleteDays(autoFileDeleteDays) {
	 	this.autoFileDeleteDays = autoFileDeleteDays;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getFileHandlerType() {
	 	return this.fileHandlerType;
	 }
	
	/**
	 * @param fileHandlerType string 
	 */
	 setFileHandlerType(fileHandlerType) {
	 	this.fileHandlerType = fileHandlerType;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getFileNamePatterns() {
	 	return this.fileNamePatterns;
	 }
	
	/**
	 * @param fileNamePatterns string 
	 */
	 setFileNamePatterns(fileNamePatterns) {
	 	this.fileNamePatterns = fileNamePatterns;
	 }
	
	/**
	 * 
	 * @return DropFolderFileHandlerConfig
	 */
	 getFileHandlerConfig() {
	 	return this.fileHandlerConfig;
	 }
	
	/**
	 * @param fileHandlerConfig DropFolderFileHandlerConfig 
	 */
	 setFileHandlerConfig(fileHandlerConfig) {
	 	this.fileHandlerConfig = fileHandlerConfig;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getTags() {
	 	return this.tags;
	 }
	
	/**
	 * @param tags string 
	 */
	 setTags(tags) {
	 	this.tags = tags;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getErrorCode() {
	 	return this.errorCode;
	 }
	
	/**
	 * @param errorCode string 
	 */
	 setErrorCode(errorCode) {
	 	this.errorCode = errorCode;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getErrorDescription() {
	 	return this.errorDescription;
	 }
	
	/**
	 * @param errorDescription string 
	 */
	 setErrorDescription(errorDescription) {
	 	this.errorDescription = errorDescription;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getIgnoreFileNamePatterns() {
	 	return this.ignoreFileNamePatterns;
	 }
	
	/**
	 * @param ignoreFileNamePatterns string 
	 */
	 setIgnoreFileNamePatterns(ignoreFileNamePatterns) {
	 	this.ignoreFileNamePatterns = ignoreFileNamePatterns;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getCreatedAt() {
	 	return this.createdAt;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getUpdatedAt() {
	 	return this.updatedAt;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getLastAccessedAt() {
	 	return this.lastAccessedAt;
	 }
	
	/**
	 * @param lastAccessedAt int 
	 */
	 setLastAccessedAt(lastAccessedAt) {
	 	this.lastAccessedAt = lastAccessedAt;
	 }
	
	/**
	 * 
	 * @return bool
	 */
	 getIncremental() {
	 	return this.incremental;
	 }
	
	/**
	 * @param incremental bool 
	 */
	 setIncremental(incremental) {
	 	this.incremental = incremental;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getLastFileTimestamp() {
	 	return this.lastFileTimestamp;
	 }
	
	/**
	 * @param lastFileTimestamp int 
	 */
	 setLastFileTimestamp(lastFileTimestamp) {
	 	this.lastFileTimestamp = lastFileTimestamp;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getMetadataProfileId() {
	 	return this.metadataProfileId;
	 }
	
	/**
	 * @param metadataProfileId int 
	 */
	 setMetadataProfileId(metadataProfileId) {
	 	this.metadataProfileId = metadataProfileId;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getCategoriesMetadataFieldName() {
	 	return this.categoriesMetadataFieldName;
	 }
	
	/**
	 * @param categoriesMetadataFieldName string 
	 */
	 setCategoriesMetadataFieldName(categoriesMetadataFieldName) {
	 	this.categoriesMetadataFieldName = categoriesMetadataFieldName;
	 }
	
	/**
	 * 
	 * @return bool
	 */
	 getEnforceEntitlement() {
	 	return this.enforceEntitlement;
	 }
	
	/**
	 * @param enforceEntitlement bool 
	 */
	 setEnforceEntitlement(enforceEntitlement) {
	 	this.enforceEntitlement = enforceEntitlement;
	 }
	
	/**
	 * 
	 * @return bool
	 */
	 getShouldValidateKS() {
	 	return this.shouldValidateKS;
	 }
	
	/**
	 * @param shouldValidateKS bool 
	 */
	 setShouldValidateKS(shouldValidateKS) {
	 	this.shouldValidateKS = shouldValidateKS;
	 }
}
module.exports.DropFolder = DropFolder;

/**
 *
 */
class DropFolderFile extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaDropFolderFile';
	}
	
	/**
	 * 
	 * @return int
	 */
	 getId() {
	 	return this.id;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getPartnerId() {
	 	return this.partnerId;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getDropFolderId() {
	 	return this.dropFolderId;
	 }
	
	/**
	 * @param dropFolderId int 
	 */
	 setDropFolderId(dropFolderId) {
	 	this.dropFolderId = dropFolderId;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getFileName() {
	 	return this.fileName;
	 }
	
	/**
	 * @param fileName string 
	 */
	 setFileName(fileName) {
	 	this.fileName = fileName;
	 }
	
	/**
	 * 
	 * @return float
	 */
	 getFileSize() {
	 	return this.fileSize;
	 }
	
	/**
	 * @param fileSize float 
	 */
	 setFileSize(fileSize) {
	 	this.fileSize = fileSize;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getFileSizeLastSetAt() {
	 	return this.fileSizeLastSetAt;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getStatus() {
	 	return this.status;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getType() {
	 	return this.type;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getParsedSlug() {
	 	return this.parsedSlug;
	 }
	
	/**
	 * @param parsedSlug string 
	 */
	 setParsedSlug(parsedSlug) {
	 	this.parsedSlug = parsedSlug;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getParsedFlavor() {
	 	return this.parsedFlavor;
	 }
	
	/**
	 * @param parsedFlavor string 
	 */
	 setParsedFlavor(parsedFlavor) {
	 	this.parsedFlavor = parsedFlavor;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getParsedUserId() {
	 	return this.parsedUserId;
	 }
	
	/**
	 * @param parsedUserId string 
	 */
	 setParsedUserId(parsedUserId) {
	 	this.parsedUserId = parsedUserId;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getLeadDropFolderFileId() {
	 	return this.leadDropFolderFileId;
	 }
	
	/**
	 * @param leadDropFolderFileId int 
	 */
	 setLeadDropFolderFileId(leadDropFolderFileId) {
	 	this.leadDropFolderFileId = leadDropFolderFileId;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getDeletedDropFolderFileId() {
	 	return this.deletedDropFolderFileId;
	 }
	
	/**
	 * @param deletedDropFolderFileId int 
	 */
	 setDeletedDropFolderFileId(deletedDropFolderFileId) {
	 	this.deletedDropFolderFileId = deletedDropFolderFileId;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getEntryId() {
	 	return this.entryId;
	 }
	
	/**
	 * @param entryId string 
	 */
	 setEntryId(entryId) {
	 	this.entryId = entryId;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getErrorCode() {
	 	return this.errorCode;
	 }
	
	/**
	 * @param errorCode string 
	 */
	 setErrorCode(errorCode) {
	 	this.errorCode = errorCode;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getErrorDescription() {
	 	return this.errorDescription;
	 }
	
	/**
	 * @param errorDescription string 
	 */
	 setErrorDescription(errorDescription) {
	 	this.errorDescription = errorDescription;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getLastModificationTime() {
	 	return this.lastModificationTime;
	 }
	
	/**
	 * @param lastModificationTime string 
	 */
	 setLastModificationTime(lastModificationTime) {
	 	this.lastModificationTime = lastModificationTime;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getCreatedAt() {
	 	return this.createdAt;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getUpdatedAt() {
	 	return this.updatedAt;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getUploadStartDetectedAt() {
	 	return this.uploadStartDetectedAt;
	 }
	
	/**
	 * @param uploadStartDetectedAt int 
	 */
	 setUploadStartDetectedAt(uploadStartDetectedAt) {
	 	this.uploadStartDetectedAt = uploadStartDetectedAt;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getUploadEndDetectedAt() {
	 	return this.uploadEndDetectedAt;
	 }
	
	/**
	 * @param uploadEndDetectedAt int 
	 */
	 setUploadEndDetectedAt(uploadEndDetectedAt) {
	 	this.uploadEndDetectedAt = uploadEndDetectedAt;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getImportStartedAt() {
	 	return this.importStartedAt;
	 }
	
	/**
	 * @param importStartedAt int 
	 */
	 setImportStartedAt(importStartedAt) {
	 	this.importStartedAt = importStartedAt;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getImportEndedAt() {
	 	return this.importEndedAt;
	 }
	
	/**
	 * @param importEndedAt int 
	 */
	 setImportEndedAt(importEndedAt) {
	 	this.importEndedAt = importEndedAt;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getBatchJobId() {
	 	return this.batchJobId;
	 }
}
module.exports.DropFolderFile = DropFolderFile;

/**
 *
 */
class EmailIngestionProfile extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaEmailIngestionProfile';
	}
	
	/**
	 * 
	 * @return int
	 */
	 getId() {
	 	return this.id;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getName() {
	 	return this.name;
	 }
	
	/**
	 * @param name string 
	 */
	 setName(name) {
	 	this.name = name;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getDescription() {
	 	return this.description;
	 }
	
	/**
	 * @param description string 
	 */
	 setDescription(description) {
	 	this.description = description;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getEmailAddress() {
	 	return this.emailAddress;
	 }
	
	/**
	 * @param emailAddress string 
	 */
	 setEmailAddress(emailAddress) {
	 	this.emailAddress = emailAddress;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getMailboxId() {
	 	return this.mailboxId;
	 }
	
	/**
	 * @param mailboxId string 
	 */
	 setMailboxId(mailboxId) {
	 	this.mailboxId = mailboxId;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getPartnerId() {
	 	return this.partnerId;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getConversionProfile2Id() {
	 	return this.conversionProfile2Id;
	 }
	
	/**
	 * @param conversionProfile2Id int 
	 */
	 setConversionProfile2Id(conversionProfile2Id) {
	 	this.conversionProfile2Id = conversionProfile2Id;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getModerationStatus() {
	 	return this.moderationStatus;
	 }
	
	/**
	 * @param moderationStatus int 
	 */
	 setModerationStatus(moderationStatus) {
	 	this.moderationStatus = moderationStatus;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getStatus() {
	 	return this.status;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getCreatedAt() {
	 	return this.createdAt;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getDefaultCategory() {
	 	return this.defaultCategory;
	 }
	
	/**
	 * @param defaultCategory string 
	 */
	 setDefaultCategory(defaultCategory) {
	 	this.defaultCategory = defaultCategory;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getDefaultUserId() {
	 	return this.defaultUserId;
	 }
	
	/**
	 * @param defaultUserId string 
	 */
	 setDefaultUserId(defaultUserId) {
	 	this.defaultUserId = defaultUserId;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getDefaultTags() {
	 	return this.defaultTags;
	 }
	
	/**
	 * @param defaultTags string 
	 */
	 setDefaultTags(defaultTags) {
	 	this.defaultTags = defaultTags;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getDefaultAdminTags() {
	 	return this.defaultAdminTags;
	 }
	
	/**
	 * @param defaultAdminTags string 
	 */
	 setDefaultAdminTags(defaultAdminTags) {
	 	this.defaultAdminTags = defaultAdminTags;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getMaxAttachmentSizeKbytes() {
	 	return this.maxAttachmentSizeKbytes;
	 }
	
	/**
	 * @param maxAttachmentSizeKbytes int 
	 */
	 setMaxAttachmentSizeKbytes(maxAttachmentSizeKbytes) {
	 	this.maxAttachmentSizeKbytes = maxAttachmentSizeKbytes;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getMaxAttachmentsPerMail() {
	 	return this.maxAttachmentsPerMail;
	 }
	
	/**
	 * @param maxAttachmentsPerMail int 
	 */
	 setMaxAttachmentsPerMail(maxAttachmentsPerMail) {
	 	this.maxAttachmentsPerMail = maxAttachmentsPerMail;
	 }
}
module.exports.EmailIngestionProfile = EmailIngestionProfile;

/**
 *
 */
class StringValue extends Value{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaStringValue';
	}
	
	/**
	 * 
	 * @return string
	 */
	 getValue() {
	 	return this.value;
	 }
	
	/**
	 * @param value string 
	 */
	 setValue(value) {
	 	this.value = value;
	 }
}
module.exports.StringValue = StringValue;

/**
 *
 */
class EmailNotificationRecipient extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaEmailNotificationRecipient';
	}
	
	/**
	 * Recipient e-mail address
	 * @return StringValue
	 */
	 getEmail() {
	 	return this.email;
	 }
	
	/**
	 * @param email StringValue Recipient e-mail address
	 */
	 setEmail(email) {
	 	this.email = email;
	 }
	
	/**
	 * Recipient name
	 * @return StringValue
	 */
	 getName() {
	 	return this.name;
	 }
	
	/**
	 * @param name StringValue Recipient name
	 */
	 setName(name) {
	 	this.name = name;
	 }
}
module.exports.EmailNotificationRecipient = EmailNotificationRecipient;

/**
 *
 */
class EmailNotificationRecipientJobData extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaEmailNotificationRecipientJobData';
	}
	
	/**
	 * Provider type of the job data
	 * @return string
	 */
	 getProviderType() {
	 	return this.providerType;
	 }
}
module.exports.EmailNotificationRecipientJobData = EmailNotificationRecipientJobData;

/**
 *
 */
class EmailNotificationRecipientProvider extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaEmailNotificationRecipientProvider';
	}
}
module.exports.EmailNotificationRecipientProvider = EmailNotificationRecipientProvider;

/**
 *
 */
class EntryDistribution extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaEntryDistribution';
	}
	
	/**
	 * Auto generated unique id
	 * @return int
	 */
	 getId() {
	 	return this.id;
	 }
	
	/**
	 * Entry distribution creation date as Unix timestamp (In seconds)
	 * @return int
	 */
	 getCreatedAt() {
	 	return this.createdAt;
	 }
	
	/**
	 * Entry distribution last update date as Unix timestamp (In seconds)
	 * @return int
	 */
	 getUpdatedAt() {
	 	return this.updatedAt;
	 }
	
	/**
	 * Entry distribution submission date as Unix timestamp (In seconds)
	 * @return int
	 */
	 getSubmittedAt() {
	 	return this.submittedAt;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getEntryId() {
	 	return this.entryId;
	 }
	
	/**
	 * @param entryId string 
	 */
	 setEntryId(entryId) {
	 	this.entryId = entryId;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getPartnerId() {
	 	return this.partnerId;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getDistributionProfileId() {
	 	return this.distributionProfileId;
	 }
	
	/**
	 * @param distributionProfileId int 
	 */
	 setDistributionProfileId(distributionProfileId) {
	 	this.distributionProfileId = distributionProfileId;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getStatus() {
	 	return this.status;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getSunStatus() {
	 	return this.sunStatus;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getDirtyStatus() {
	 	return this.dirtyStatus;
	 }
	
	/**
	 * Comma separated thumbnail asset ids
	 * @return string
	 */
	 getThumbAssetIds() {
	 	return this.thumbAssetIds;
	 }
	
	/**
	 * @param thumbAssetIds string Comma separated thumbnail asset ids
	 */
	 setThumbAssetIds(thumbAssetIds) {
	 	this.thumbAssetIds = thumbAssetIds;
	 }
	
	/**
	 * Comma separated flavor asset ids
	 * @return string
	 */
	 getFlavorAssetIds() {
	 	return this.flavorAssetIds;
	 }
	
	/**
	 * @param flavorAssetIds string Comma separated flavor asset ids
	 */
	 setFlavorAssetIds(flavorAssetIds) {
	 	this.flavorAssetIds = flavorAssetIds;
	 }
	
	/**
	 * Comma separated asset ids
	 * @return string
	 */
	 getAssetIds() {
	 	return this.assetIds;
	 }
	
	/**
	 * @param assetIds string Comma separated asset ids
	 */
	 setAssetIds(assetIds) {
	 	this.assetIds = assetIds;
	 }
	
	/**
	 * Entry distribution publish time as Unix timestamp (In seconds)
	 * @return int
	 */
	 getSunrise() {
	 	return this.sunrise;
	 }
	
	/**
	 * @param sunrise int Entry distribution publish time as Unix timestamp (In seconds)
	 */
	 setSunrise(sunrise) {
	 	this.sunrise = sunrise;
	 }
	
	/**
	 * Entry distribution un-publish time as Unix timestamp (In seconds)
	 * @return int
	 */
	 getSunset() {
	 	return this.sunset;
	 }
	
	/**
	 * @param sunset int Entry distribution un-publish time as Unix timestamp (In seconds)
	 */
	 setSunset(sunset) {
	 	this.sunset = sunset;
	 }
	
	/**
	 * The id as returned from the distributed destination
	 * @return string
	 */
	 getRemoteId() {
	 	return this.remoteId;
	 }
	
	/**
	 * The plays as retrieved from the remote destination reports
	 * @return int
	 */
	 getPlays() {
	 	return this.plays;
	 }
	
	/**
	 * The views as retrieved from the remote destination reports
	 * @return int
	 */
	 getViews() {
	 	return this.views;
	 }
	
	/**
	 * 
	 * @return array
	 */
	 getValidationErrors() {
	 	return this.validationErrors;
	 }
	
	/**
	 * @param validationErrors array 
	 */
	 setValidationErrors(validationErrors) {
	 	this.validationErrors = validationErrors;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getErrorType() {
	 	return this.errorType;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getErrorNumber() {
	 	return this.errorNumber;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getErrorDescription() {
	 	return this.errorDescription;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getHasSubmitResultsLog() {
	 	return this.hasSubmitResultsLog;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getHasSubmitSentDataLog() {
	 	return this.hasSubmitSentDataLog;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getHasUpdateResultsLog() {
	 	return this.hasUpdateResultsLog;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getHasUpdateSentDataLog() {
	 	return this.hasUpdateSentDataLog;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getHasDeleteResultsLog() {
	 	return this.hasDeleteResultsLog;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getHasDeleteSentDataLog() {
	 	return this.hasDeleteSentDataLog;
	 }
}
module.exports.EntryDistribution = EntryDistribution;

/**
 *
 */
class PluginReplacementOptionsItem extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaPluginReplacementOptionsItem';
	}
}
module.exports.PluginReplacementOptionsItem = PluginReplacementOptionsItem;

/**
 *
 */
class EntryReplacementOptions extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaEntryReplacementOptions';
	}
	
	/**
	 * If true manually created thumbnails will not be deleted on entry replacement
	 * @return int
	 */
	 getKeepManualThumbnails() {
	 	return this.keepManualThumbnails;
	 }
	
	/**
	 * @param keepManualThumbnails int If true manually created thumbnails will not be deleted on entry replacement
	 */
	 setKeepManualThumbnails(keepManualThumbnails) {
	 	this.keepManualThumbnails = keepManualThumbnails;
	 }
	
	/**
	 * Array of plugin replacement options
	 * @return array
	 */
	 getPluginOptionItems() {
	 	return this.pluginOptionItems;
	 }
	
	/**
	 * @param pluginOptionItems array Array of plugin replacement options
	 */
	 setPluginOptionItems(pluginOptionItems) {
	 	this.pluginOptionItems = pluginOptionItems;
	 }
}
module.exports.EntryReplacementOptions = EntryReplacementOptions;

/**
 *
 */
class EntryServerNode extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaEntryServerNode';
	}
	
	/**
	 * unique auto-generated identifier
	 * @return int
	 */
	 getId() {
	 	return this.id;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getEntryId() {
	 	return this.entryId;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getServerNodeId() {
	 	return this.serverNodeId;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getPartnerId() {
	 	return this.partnerId;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getCreatedAt() {
	 	return this.createdAt;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getUpdatedAt() {
	 	return this.updatedAt;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getStatus() {
	 	return this.status;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getServerType() {
	 	return this.serverType;
	 }
}
module.exports.EntryServerNode = EntryServerNode;

/**
 *
 */
class EventNotificationParameter extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaEventNotificationParameter';
	}
	
	/**
	 * The key in the subject and body to be replaced with the dynamic value
	 * @return string
	 */
	 getKey() {
	 	return this.key;
	 }
	
	/**
	 * @param key string The key in the subject and body to be replaced with the dynamic value
	 */
	 setKey(key) {
	 	this.key = key;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getDescription() {
	 	return this.description;
	 }
	
	/**
	 * @param description string 
	 */
	 setDescription(description) {
	 	this.description = description;
	 }
	
	/**
	 * The dynamic value to be placed in the final output
	 * @return StringValue
	 */
	 getValue() {
	 	return this.value;
	 }
	
	/**
	 * @param value StringValue The dynamic value to be placed in the final output
	 */
	 setValue(value) {
	 	this.value = value;
	 }
}
module.exports.EventNotificationParameter = EventNotificationParameter;

/**
 *
 */
class EventNotificationTemplate extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaEventNotificationTemplate';
	}
	
	/**
	 * 
	 * @return int
	 */
	 getId() {
	 	return this.id;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getPartnerId() {
	 	return this.partnerId;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getName() {
	 	return this.name;
	 }
	
	/**
	 * @param name string 
	 */
	 setName(name) {
	 	this.name = name;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getSystemName() {
	 	return this.systemName;
	 }
	
	/**
	 * @param systemName string 
	 */
	 setSystemName(systemName) {
	 	this.systemName = systemName;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getDescription() {
	 	return this.description;
	 }
	
	/**
	 * @param description string 
	 */
	 setDescription(description) {
	 	this.description = description;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getType() {
	 	return this.type;
	 }
	
	/**
	 * @param type string 
	 */
	 setType(type) {
	 	this.type = type;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getStatus() {
	 	return this.status;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getCreatedAt() {
	 	return this.createdAt;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getUpdatedAt() {
	 	return this.updatedAt;
	 }
	
	/**
	 * Define that the template could be dispatched manually from the API
	 * @return bool
	 */
	 getManualDispatchEnabled() {
	 	return this.manualDispatchEnabled;
	 }
	
	/**
	 * @param manualDispatchEnabled bool Define that the template could be dispatched manually from the API
	 */
	 setManualDispatchEnabled(manualDispatchEnabled) {
	 	this.manualDispatchEnabled = manualDispatchEnabled;
	 }
	
	/**
	 * Define that the template could be dispatched automatically by the system
	 * @return bool
	 */
	 getAutomaticDispatchEnabled() {
	 	return this.automaticDispatchEnabled;
	 }
	
	/**
	 * @param automaticDispatchEnabled bool Define that the template could be dispatched automatically by the system
	 */
	 setAutomaticDispatchEnabled(automaticDispatchEnabled) {
	 	this.automaticDispatchEnabled = automaticDispatchEnabled;
	 }
	
	/**
	 * Define the event that should trigger this notification
	 * @return string
	 */
	 getEventType() {
	 	return this.eventType;
	 }
	
	/**
	 * @param eventType string Define the event that should trigger this notification
	 */
	 setEventType(eventType) {
	 	this.eventType = eventType;
	 }
	
	/**
	 * Define the object that raied the event that should trigger this notification
	 * @return string
	 */
	 getEventObjectType() {
	 	return this.eventObjectType;
	 }
	
	/**
	 * @param eventObjectType string Define the object that raied the event that should trigger this notification
	 */
	 setEventObjectType(eventObjectType) {
	 	this.eventObjectType = eventObjectType;
	 }
	
	/**
	 * Define the conditions that cause this notification to be triggered
	 * @return array
	 */
	 getEventConditions() {
	 	return this.eventConditions;
	 }
	
	/**
	 * @param eventConditions array Define the conditions that cause this notification to be triggered
	 */
	 setEventConditions(eventConditions) {
	 	this.eventConditions = eventConditions;
	 }
	
	/**
	 * Define the content dynamic parameters
	 * @return array
	 */
	 getContentParameters() {
	 	return this.contentParameters;
	 }
	
	/**
	 * @param contentParameters array Define the content dynamic parameters
	 */
	 setContentParameters(contentParameters) {
	 	this.contentParameters = contentParameters;
	 }
	
	/**
	 * Define the content dynamic parameters
	 * @return array
	 */
	 getUserParameters() {
	 	return this.userParameters;
	 }
	
	/**
	 * @param userParameters array Define the content dynamic parameters
	 */
	 setUserParameters(userParameters) {
	 	this.userParameters = userParameters;
	 }
}
module.exports.EventNotificationTemplate = EventNotificationTemplate;

/**
 *
 */
class ObjectIdentifier extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaObjectIdentifier';
	}
	
	/**
	 * Comma separated string of enum values denoting which features of the item need to be included in the MRSS
	 * @return string
	 */
	 getExtendedFeatures() {
	 	return this.extendedFeatures;
	 }
	
	/**
	 * @param extendedFeatures string Comma separated string of enum values denoting which features of the item need to be included in the MRSS
	 */
	 setExtendedFeatures(extendedFeatures) {
	 	this.extendedFeatures = extendedFeatures;
	 }
}
module.exports.ObjectIdentifier = ObjectIdentifier;

/**
 *
 */
class ExtendingItemMrssParameter extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaExtendingItemMrssParameter';
	}
	
	/**
	 * XPath for the extending item
	 * @return string
	 */
	 getXpath() {
	 	return this.xpath;
	 }
	
	/**
	 * @param xpath string XPath for the extending item
	 */
	 setXpath(xpath) {
	 	this.xpath = xpath;
	 }
	
	/**
	 * Object identifier
	 * @return ObjectIdentifier
	 */
	 getIdentifier() {
	 	return this.identifier;
	 }
	
	/**
	 * @param identifier ObjectIdentifier Object identifier
	 */
	 setIdentifier(identifier) {
	 	this.identifier = identifier;
	 }
	
	/**
	 * Mode of extension - append to MRSS or replace the xpath content
	 * @return int
	 */
	 getExtensionMode() {
	 	return this.extensionMode;
	 }
	
	/**
	 * @param extensionMode int Mode of extension - append to MRSS or replace the xpath content
	 */
	 setExtensionMode(extensionMode) {
	 	this.extensionMode = extensionMode;
	 }
}
module.exports.ExtendingItemMrssParameter = ExtendingItemMrssParameter;

/**
 *
 */
class PlayableEntry extends BaseEntry{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaPlayableEntry';
	}
	
	/**
	 * Number of plays
	 * @return int
	 */
	 getPlays() {
	 	return this.plays;
	 }
	
	/**
	 * Number of views
	 * @return int
	 */
	 getViews() {
	 	return this.views;
	 }
	
	/**
	 * The last time the entry was played
	 * @return int
	 */
	 getLastPlayedAt() {
	 	return this.lastPlayedAt;
	 }
	
	/**
	 * The width in pixels
	 * @return int
	 */
	 getWidth() {
	 	return this.width;
	 }
	
	/**
	 * The height in pixels
	 * @return int
	 */
	 getHeight() {
	 	return this.height;
	 }
	
	/**
	 * The duration in seconds
	 * @return int
	 */
	 getDuration() {
	 	return this.duration;
	 }
	
	/**
	 * The duration in miliseconds
	 * @return int
	 */
	 getMsDuration() {
	 	return this.msDuration;
	 }
	
	/**
	 * @param msDuration int The duration in miliseconds
	 */
	 setMsDuration(msDuration) {
	 	this.msDuration = msDuration;
	 }
	
	/**
	 * The duration type (short for 0-4 mins, medium for 4-20 mins, long for 20+ mins)
	 * @return string
	 */
	 getDurationType() {
	 	return this.durationType;
	 }
}
module.exports.PlayableEntry = PlayableEntry;

/**
 *
 */
class StreamContainer extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaStreamContainer';
	}
	
	/**
	 * 
	 * @return string
	 */
	 getType() {
	 	return this.type;
	 }
	
	/**
	 * @param type string 
	 */
	 setType(type) {
	 	this.type = type;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getTrackIndex() {
	 	return this.trackIndex;
	 }
	
	/**
	 * @param trackIndex int 
	 */
	 setTrackIndex(trackIndex) {
	 	this.trackIndex = trackIndex;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getLanguage() {
	 	return this.language;
	 }
	
	/**
	 * @param language string 
	 */
	 setLanguage(language) {
	 	this.language = language;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getChannelIndex() {
	 	return this.channelIndex;
	 }
	
	/**
	 * @param channelIndex int 
	 */
	 setChannelIndex(channelIndex) {
	 	this.channelIndex = channelIndex;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getLabel() {
	 	return this.label;
	 }
	
	/**
	 * @param label string 
	 */
	 setLabel(label) {
	 	this.label = label;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getChannelLayout() {
	 	return this.channelLayout;
	 }
	
	/**
	 * @param channelLayout string 
	 */
	 setChannelLayout(channelLayout) {
	 	this.channelLayout = channelLayout;
	 }
}
module.exports.StreamContainer = StreamContainer;

/**
 *
 */
class MediaEntry extends PlayableEntry{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaMediaEntry';
	}
	
	/**
	 * The media type of the entry
	 * @return int
	 */
	 getMediaType() {
	 	return this.mediaType;
	 }
	
	/**
	 * @param mediaType int The media type of the entry
	 */
	 setMediaType(mediaType) {
	 	this.mediaType = mediaType;
	 }
	
	/**
	 * Override the default conversion quality
	 * @return string
	 */
	 getConversionQuality() {
	 	return this.conversionQuality;
	 }
	
	/**
	 * @param conversionQuality string Override the default conversion quality
	 */
	 setConversionQuality(conversionQuality) {
	 	this.conversionQuality = conversionQuality;
	 }
	
	/**
	 * The source type of the entry
	 * @return string
	 */
	 getSourceType() {
	 	return this.sourceType;
	 }
	
	/**
	 * @param sourceType string The source type of the entry
	 */
	 setSourceType(sourceType) {
	 	this.sourceType = sourceType;
	 }
	
	/**
	 * The search provider type used to import this entry
	 * @return int
	 */
	 getSearchProviderType() {
	 	return this.searchProviderType;
	 }
	
	/**
	 * @param searchProviderType int The search provider type used to import this entry
	 */
	 setSearchProviderType(searchProviderType) {
	 	this.searchProviderType = searchProviderType;
	 }
	
	/**
	 * The ID of the media in the importing site
	 * @return string
	 */
	 getSearchProviderId() {
	 	return this.searchProviderId;
	 }
	
	/**
	 * @param searchProviderId string The ID of the media in the importing site
	 */
	 setSearchProviderId(searchProviderId) {
	 	this.searchProviderId = searchProviderId;
	 }
	
	/**
	 * The user name used for credits
	 * @return string
	 */
	 getCreditUserName() {
	 	return this.creditUserName;
	 }
	
	/**
	 * @param creditUserName string The user name used for credits
	 */
	 setCreditUserName(creditUserName) {
	 	this.creditUserName = creditUserName;
	 }
	
	/**
	 * The URL for credits
	 * @return string
	 */
	 getCreditUrl() {
	 	return this.creditUrl;
	 }
	
	/**
	 * @param creditUrl string The URL for credits
	 */
	 setCreditUrl(creditUrl) {
	 	this.creditUrl = creditUrl;
	 }
	
	/**
	 * The media date extracted from EXIF data (For images) as Unix timestamp (In seconds)
	 * @return int
	 */
	 getMediaDate() {
	 	return this.mediaDate;
	 }
	
	/**
	 * The URL used for playback. This is not the download URL
	 * @return string
	 */
	 getDataUrl() {
	 	return this.dataUrl;
	 }
	
	/**
	 * Comma separated flavor params ids that exists for this media entry
	 * @return string
	 */
	 getFlavorParamsIds() {
	 	return this.flavorParamsIds;
	 }
	
	/**
	 * True if trim action is disabled for this entry
	 * @return int
	 */
	 getIsTrimDisabled() {
	 	return this.isTrimDisabled;
	 }
	
	/**
	 * Array of streams that exists on the entry
	 * @return array
	 */
	 getStreams() {
	 	return this.streams;
	 }
	
	/**
	 * @param streams array Array of streams that exists on the entry
	 */
	 setStreams(streams) {
	 	this.streams = streams;
	 }
}
module.exports.MediaEntry = MediaEntry;

/**
 *
 */
class ExternalMediaEntry extends MediaEntry{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaExternalMediaEntry';
	}
	
	/**
	 * The source type of the external media
	 * @return string
	 */
	 getExternalSourceType() {
	 	return this.externalSourceType;
	 }
	
	/**
	 * @param externalSourceType string The source type of the external media
	 */
	 setExternalSourceType(externalSourceType) {
	 	this.externalSourceType = externalSourceType;
	 }
	
	/**
	 * Comma separated asset params ids that exists for this external media entry
	 * @return string
	 */
	 getAssetParamsIds() {
	 	return this.assetParamsIds;
	 }
}
module.exports.ExternalMediaEntry = ExternalMediaEntry;

/**
 *
 */
class FacebookCaptionDistributionInfo extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaFacebookCaptionDistributionInfo';
	}
	
	/**
	 * 
	 * @return string
	 */
	 getLanguage() {
	 	return this.language;
	 }
	
	/**
	 * @param language string 
	 */
	 setLanguage(language) {
	 	this.language = language;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getLabel() {
	 	return this.label;
	 }
	
	/**
	 * @param label string 
	 */
	 setLabel(label) {
	 	this.label = label;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getFilePath() {
	 	return this.filePath;
	 }
	
	/**
	 * @param filePath string 
	 */
	 setFilePath(filePath) {
	 	this.filePath = filePath;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getRemoteId() {
	 	return this.remoteId;
	 }
	
	/**
	 * @param remoteId string 
	 */
	 setRemoteId(remoteId) {
	 	this.remoteId = remoteId;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getVersion() {
	 	return this.version;
	 }
	
	/**
	 * @param version string 
	 */
	 setVersion(version) {
	 	this.version = version;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getAssetId() {
	 	return this.assetId;
	 }
	
	/**
	 * @param assetId string 
	 */
	 setAssetId(assetId) {
	 	this.assetId = assetId;
	 }
}
module.exports.FacebookCaptionDistributionInfo = FacebookCaptionDistributionInfo;

/**
 *
 */
class FeatureStatus extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaFeatureStatus';
	}
	
	/**
	 * 
	 * @return int
	 */
	 getType() {
	 	return this.type;
	 }
	
	/**
	 * @param type int 
	 */
	 setType(type) {
	 	this.type = type;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getValue() {
	 	return this.value;
	 }
	
	/**
	 * @param value int 
	 */
	 setValue(value) {
	 	this.value = value;
	 }
}
module.exports.FeatureStatus = FeatureStatus;

/**
 *
 */
class FeedItemInfo extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaFeedItemInfo';
	}
	
	/**
	 * 
	 * @return string
	 */
	 getItemXPath() {
	 	return this.itemXPath;
	 }
	
	/**
	 * @param itemXPath string 
	 */
	 setItemXPath(itemXPath) {
	 	this.itemXPath = itemXPath;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getItemPublishDateXPath() {
	 	return this.itemPublishDateXPath;
	 }
	
	/**
	 * @param itemPublishDateXPath string 
	 */
	 setItemPublishDateXPath(itemPublishDateXPath) {
	 	this.itemPublishDateXPath = itemPublishDateXPath;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getItemUniqueIdentifierXPath() {
	 	return this.itemUniqueIdentifierXPath;
	 }
	
	/**
	 * @param itemUniqueIdentifierXPath string 
	 */
	 setItemUniqueIdentifierXPath(itemUniqueIdentifierXPath) {
	 	this.itemUniqueIdentifierXPath = itemUniqueIdentifierXPath;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getItemContentFileSizeXPath() {
	 	return this.itemContentFileSizeXPath;
	 }
	
	/**
	 * @param itemContentFileSizeXPath string 
	 */
	 setItemContentFileSizeXPath(itemContentFileSizeXPath) {
	 	this.itemContentFileSizeXPath = itemContentFileSizeXPath;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getItemContentUrlXPath() {
	 	return this.itemContentUrlXPath;
	 }
	
	/**
	 * @param itemContentUrlXPath string 
	 */
	 setItemContentUrlXPath(itemContentUrlXPath) {
	 	this.itemContentUrlXPath = itemContentUrlXPath;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getItemContentBitrateXPath() {
	 	return this.itemContentBitrateXPath;
	 }
	
	/**
	 * @param itemContentBitrateXPath string 
	 */
	 setItemContentBitrateXPath(itemContentBitrateXPath) {
	 	this.itemContentBitrateXPath = itemContentBitrateXPath;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getItemHashXPath() {
	 	return this.itemHashXPath;
	 }
	
	/**
	 * @param itemHashXPath string 
	 */
	 setItemHashXPath(itemHashXPath) {
	 	this.itemHashXPath = itemHashXPath;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getItemContentXpath() {
	 	return this.itemContentXpath;
	 }
	
	/**
	 * @param itemContentXpath string 
	 */
	 setItemContentXpath(itemContentXpath) {
	 	this.itemContentXpath = itemContentXpath;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getContentBitrateAttributeName() {
	 	return this.contentBitrateAttributeName;
	 }
	
	/**
	 * @param contentBitrateAttributeName string 
	 */
	 setContentBitrateAttributeName(contentBitrateAttributeName) {
	 	this.contentBitrateAttributeName = contentBitrateAttributeName;
	 }
}
module.exports.FeedItemInfo = FeedItemInfo;

/**
 *
 */
class FileAsset extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaFileAsset';
	}
	
	/**
	 * 
	 * @return int
	 */
	 getId() {
	 	return this.id;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getPartnerId() {
	 	return this.partnerId;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getFileAssetObjectType() {
	 	return this.fileAssetObjectType;
	 }
	
	/**
	 * @param fileAssetObjectType string 
	 */
	 setFileAssetObjectType(fileAssetObjectType) {
	 	this.fileAssetObjectType = fileAssetObjectType;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getObjectId() {
	 	return this.objectId;
	 }
	
	/**
	 * @param objectId string 
	 */
	 setObjectId(objectId) {
	 	this.objectId = objectId;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getName() {
	 	return this.name;
	 }
	
	/**
	 * @param name string 
	 */
	 setName(name) {
	 	this.name = name;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getSystemName() {
	 	return this.systemName;
	 }
	
	/**
	 * @param systemName string 
	 */
	 setSystemName(systemName) {
	 	this.systemName = systemName;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getFileExt() {
	 	return this.fileExt;
	 }
	
	/**
	 * @param fileExt string 
	 */
	 setFileExt(fileExt) {
	 	this.fileExt = fileExt;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getVersion() {
	 	return this.version;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getCreatedAt() {
	 	return this.createdAt;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getUpdatedAt() {
	 	return this.updatedAt;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getStatus() {
	 	return this.status;
	 }
}
module.exports.FileAsset = FileAsset;

/**
 *
 */
class FileSync extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaFileSync';
	}
	
	/**
	 * 
	 * @return int
	 */
	 getId() {
	 	return this.id;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getPartnerId() {
	 	return this.partnerId;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getFileObjectType() {
	 	return this.fileObjectType;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getObjectId() {
	 	return this.objectId;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getVersion() {
	 	return this.version;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getObjectSubType() {
	 	return this.objectSubType;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getDc() {
	 	return this.dc;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getOriginal() {
	 	return this.original;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getCreatedAt() {
	 	return this.createdAt;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getUpdatedAt() {
	 	return this.updatedAt;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getReadyAt() {
	 	return this.readyAt;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getSyncTime() {
	 	return this.syncTime;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getStatus() {
	 	return this.status;
	 }
	
	/**
	 * @param status int 
	 */
	 setStatus(status) {
	 	this.status = status;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getFileType() {
	 	return this.fileType;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getLinkedId() {
	 	return this.linkedId;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getLinkCount() {
	 	return this.linkCount;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getFileRoot() {
	 	return this.fileRoot;
	 }
	
	/**
	 * @param fileRoot string 
	 */
	 setFileRoot(fileRoot) {
	 	this.fileRoot = fileRoot;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getFilePath() {
	 	return this.filePath;
	 }
	
	/**
	 * @param filePath string 
	 */
	 setFilePath(filePath) {
	 	this.filePath = filePath;
	 }
	
	/**
	 * 
	 * @return float
	 */
	 getFileSize() {
	 	return this.fileSize;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getFileUrl() {
	 	return this.fileUrl;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getFileContent() {
	 	return this.fileContent;
	 }
	
	/**
	 * 
	 * @return float
	 */
	 getFileDiscSize() {
	 	return this.fileDiscSize;
	 }
	
	/**
	 * 
	 * @return bool
	 */
	 getIsCurrentDc() {
	 	return this.isCurrentDc;
	 }
	
	/**
	 * 
	 * @return bool
	 */
	 getIsDir() {
	 	return this.isDir;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getOriginalId() {
	 	return this.originalId;
	 }
}
module.exports.FileSync = FileSync;

/**
 *
 */
class FlavorAsset extends Asset{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaFlavorAsset';
	}
	
	/**
	 * The Flavor Params used to create this Flavor Asset
	 * @return int
	 */
	 getFlavorParamsId() {
	 	return this.flavorParamsId;
	 }
	
	/**
	 * @param flavorParamsId int The Flavor Params used to create this Flavor Asset
	 */
	 setFlavorParamsId(flavorParamsId) {
	 	this.flavorParamsId = flavorParamsId;
	 }
	
	/**
	 * The width of the Flavor Asset
	 * @return int
	 */
	 getWidth() {
	 	return this.width;
	 }
	
	/**
	 * The height of the Flavor Asset
	 * @return int
	 */
	 getHeight() {
	 	return this.height;
	 }
	
	/**
	 * The overall bitrate (in KBits) of the Flavor Asset
	 * @return int
	 */
	 getBitrate() {
	 	return this.bitrate;
	 }
	
	/**
	 * The frame rate (in FPS) of the Flavor Asset
	 * @return float
	 */
	 getFrameRate() {
	 	return this.frameRate;
	 }
	
	/**
	 * True if this Flavor Asset is the original source
	 * @return bool
	 */
	 getIsOriginal() {
	 	return this.isOriginal;
	 }
	
	/**
	 * True if this Flavor Asset is playable in KDP
	 * @return bool
	 */
	 getIsWeb() {
	 	return this.isWeb;
	 }
	
	/**
	 * The container format
	 * @return string
	 */
	 getContainerFormat() {
	 	return this.containerFormat;
	 }
	
	/**
	 * The video codec
	 * @return string
	 */
	 getVideoCodecId() {
	 	return this.videoCodecId;
	 }
	
	/**
	 * The status of the Flavor Asset
	 * @return int
	 */
	 getStatus() {
	 	return this.status;
	 }
	
	/**
	 * The language of the flavor asset
	 * @return string
	 */
	 getLanguage() {
	 	return this.language;
	 }
	
	/**
	 * @param language string The language of the flavor asset
	 */
	 setLanguage(language) {
	 	this.language = language;
	 }
	
	/**
	 * The label of the flavor asset
	 * @return string
	 */
	 getLabel() {
	 	return this.label;
	 }
}
module.exports.FlavorAsset = FlavorAsset;

/**
 *
 */
class FlavorAssetUrlOptions extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaFlavorAssetUrlOptions';
	}
	
	/**
	 * The name of the downloaded file
	 * @return string
	 */
	 getFileName() {
	 	return this.fileName;
	 }
	
	/**
	 * @param fileName string The name of the downloaded file
	 */
	 setFileName(fileName) {
	 	this.fileName = fileName;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getReferrer() {
	 	return this.referrer;
	 }
	
	/**
	 * @param referrer string 
	 */
	 setReferrer(referrer) {
	 	this.referrer = referrer;
	 }
}
module.exports.FlavorAssetUrlOptions = FlavorAssetUrlOptions;

/**
 *
 */
class FlavorParams extends AssetParams{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaFlavorParams';
	}
	
	/**
	 * The video codec of the Flavor Params
	 * @return string
	 */
	 getVideoCodec() {
	 	return this.videoCodec;
	 }
	
	/**
	 * @param videoCodec string The video codec of the Flavor Params
	 */
	 setVideoCodec(videoCodec) {
	 	this.videoCodec = videoCodec;
	 }
	
	/**
	 * The video bitrate (in KBits) of the Flavor Params
	 * @return int
	 */
	 getVideoBitrate() {
	 	return this.videoBitrate;
	 }
	
	/**
	 * @param videoBitrate int The video bitrate (in KBits) of the Flavor Params
	 */
	 setVideoBitrate(videoBitrate) {
	 	this.videoBitrate = videoBitrate;
	 }
	
	/**
	 * The audio codec of the Flavor Params
	 * @return string
	 */
	 getAudioCodec() {
	 	return this.audioCodec;
	 }
	
	/**
	 * @param audioCodec string The audio codec of the Flavor Params
	 */
	 setAudioCodec(audioCodec) {
	 	this.audioCodec = audioCodec;
	 }
	
	/**
	 * The audio bitrate (in KBits) of the Flavor Params
	 * @return int
	 */
	 getAudioBitrate() {
	 	return this.audioBitrate;
	 }
	
	/**
	 * @param audioBitrate int The audio bitrate (in KBits) of the Flavor Params
	 */
	 setAudioBitrate(audioBitrate) {
	 	this.audioBitrate = audioBitrate;
	 }
	
	/**
	 * The number of audio channels for "downmixing"
	 * @return int
	 */
	 getAudioChannels() {
	 	return this.audioChannels;
	 }
	
	/**
	 * @param audioChannels int The number of audio channels for "downmixing"
	 */
	 setAudioChannels(audioChannels) {
	 	this.audioChannels = audioChannels;
	 }
	
	/**
	 * The audio sample rate of the Flavor Params
	 * @return int
	 */
	 getAudioSampleRate() {
	 	return this.audioSampleRate;
	 }
	
	/**
	 * @param audioSampleRate int The audio sample rate of the Flavor Params
	 */
	 setAudioSampleRate(audioSampleRate) {
	 	this.audioSampleRate = audioSampleRate;
	 }
	
	/**
	 * The desired width of the Flavor Params
	 * @return int
	 */
	 getWidth() {
	 	return this.width;
	 }
	
	/**
	 * @param width int The desired width of the Flavor Params
	 */
	 setWidth(width) {
	 	this.width = width;
	 }
	
	/**
	 * The desired height of the Flavor Params
	 * @return int
	 */
	 getHeight() {
	 	return this.height;
	 }
	
	/**
	 * @param height int The desired height of the Flavor Params
	 */
	 setHeight(height) {
	 	this.height = height;
	 }
	
	/**
	 * The frame rate of the Flavor Params
	 * @return float
	 */
	 getFrameRate() {
	 	return this.frameRate;
	 }
	
	/**
	 * @param frameRate float The frame rate of the Flavor Params
	 */
	 setFrameRate(frameRate) {
	 	this.frameRate = frameRate;
	 }
	
	/**
	 * The gop size of the Flavor Params
	 * @return int
	 */
	 getGopSize() {
	 	return this.gopSize;
	 }
	
	/**
	 * @param gopSize int The gop size of the Flavor Params
	 */
	 setGopSize(gopSize) {
	 	this.gopSize = gopSize;
	 }
	
	/**
	 * The list of conversion engines (comma separated)
	 * @return string
	 */
	 getConversionEngines() {
	 	return this.conversionEngines;
	 }
	
	/**
	 * @param conversionEngines string The list of conversion engines (comma separated)
	 */
	 setConversionEngines(conversionEngines) {
	 	this.conversionEngines = conversionEngines;
	 }
	
	/**
	 * The list of conversion engines extra params (separated with "|")
	 * @return string
	 */
	 getConversionEnginesExtraParams() {
	 	return this.conversionEnginesExtraParams;
	 }
	
	/**
	 * @param conversionEnginesExtraParams string The list of conversion engines extra params (separated with "|")
	 */
	 setConversionEnginesExtraParams(conversionEnginesExtraParams) {
	 	this.conversionEnginesExtraParams = conversionEnginesExtraParams;
	 }
	
	/**
	 * 
	 * @return bool
	 */
	 getTwoPass() {
	 	return this.twoPass;
	 }
	
	/**
	 * @param twoPass bool 
	 */
	 setTwoPass(twoPass) {
	 	this.twoPass = twoPass;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getDeinterlice() {
	 	return this.deinterlice;
	 }
	
	/**
	 * @param deinterlice int 
	 */
	 setDeinterlice(deinterlice) {
	 	this.deinterlice = deinterlice;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getRotate() {
	 	return this.rotate;
	 }
	
	/**
	 * @param rotate int 
	 */
	 setRotate(rotate) {
	 	this.rotate = rotate;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getOperators() {
	 	return this.operators;
	 }
	
	/**
	 * @param operators string 
	 */
	 setOperators(operators) {
	 	this.operators = operators;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getEngineVersion() {
	 	return this.engineVersion;
	 }
	
	/**
	 * @param engineVersion int 
	 */
	 setEngineVersion(engineVersion) {
	 	this.engineVersion = engineVersion;
	 }
	
	/**
	 * The container format of the Flavor Params
	 * @return string
	 */
	 getFormat() {
	 	return this.format;
	 }
	
	/**
	 * @param format string The container format of the Flavor Params
	 */
	 setFormat(format) {
	 	this.format = format;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getAspectRatioProcessingMode() {
	 	return this.aspectRatioProcessingMode;
	 }
	
	/**
	 * @param aspectRatioProcessingMode int 
	 */
	 setAspectRatioProcessingMode(aspectRatioProcessingMode) {
	 	this.aspectRatioProcessingMode = aspectRatioProcessingMode;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getForceFrameToMultiplication16() {
	 	return this.forceFrameToMultiplication16;
	 }
	
	/**
	 * @param forceFrameToMultiplication16 int 
	 */
	 setForceFrameToMultiplication16(forceFrameToMultiplication16) {
	 	this.forceFrameToMultiplication16 = forceFrameToMultiplication16;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getIsGopInSec() {
	 	return this.isGopInSec;
	 }
	
	/**
	 * @param isGopInSec int 
	 */
	 setIsGopInSec(isGopInSec) {
	 	this.isGopInSec = isGopInSec;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getIsAvoidVideoShrinkFramesizeToSource() {
	 	return this.isAvoidVideoShrinkFramesizeToSource;
	 }
	
	/**
	 * @param isAvoidVideoShrinkFramesizeToSource int 
	 */
	 setIsAvoidVideoShrinkFramesizeToSource(isAvoidVideoShrinkFramesizeToSource) {
	 	this.isAvoidVideoShrinkFramesizeToSource = isAvoidVideoShrinkFramesizeToSource;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getIsAvoidVideoShrinkBitrateToSource() {
	 	return this.isAvoidVideoShrinkBitrateToSource;
	 }
	
	/**
	 * @param isAvoidVideoShrinkBitrateToSource int 
	 */
	 setIsAvoidVideoShrinkBitrateToSource(isAvoidVideoShrinkBitrateToSource) {
	 	this.isAvoidVideoShrinkBitrateToSource = isAvoidVideoShrinkBitrateToSource;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getIsVideoFrameRateForLowBrAppleHls() {
	 	return this.isVideoFrameRateForLowBrAppleHls;
	 }
	
	/**
	 * @param isVideoFrameRateForLowBrAppleHls int 
	 */
	 setIsVideoFrameRateForLowBrAppleHls(isVideoFrameRateForLowBrAppleHls) {
	 	this.isVideoFrameRateForLowBrAppleHls = isVideoFrameRateForLowBrAppleHls;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getMultiStream() {
	 	return this.multiStream;
	 }
	
	/**
	 * @param multiStream string 
	 */
	 setMultiStream(multiStream) {
	 	this.multiStream = multiStream;
	 }
	
	/**
	 * 
	 * @return float
	 */
	 getAnamorphicPixels() {
	 	return this.anamorphicPixels;
	 }
	
	/**
	 * @param anamorphicPixels float 
	 */
	 setAnamorphicPixels(anamorphicPixels) {
	 	this.anamorphicPixels = anamorphicPixels;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getIsAvoidForcedKeyFrames() {
	 	return this.isAvoidForcedKeyFrames;
	 }
	
	/**
	 * @param isAvoidForcedKeyFrames int 
	 */
	 setIsAvoidForcedKeyFrames(isAvoidForcedKeyFrames) {
	 	this.isAvoidForcedKeyFrames = isAvoidForcedKeyFrames;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getForcedKeyFramesMode() {
	 	return this.forcedKeyFramesMode;
	 }
	
	/**
	 * @param forcedKeyFramesMode int 
	 */
	 setForcedKeyFramesMode(forcedKeyFramesMode) {
	 	this.forcedKeyFramesMode = forcedKeyFramesMode;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getIsCropIMX() {
	 	return this.isCropIMX;
	 }
	
	/**
	 * @param isCropIMX int 
	 */
	 setIsCropIMX(isCropIMX) {
	 	this.isCropIMX = isCropIMX;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getOptimizationPolicy() {
	 	return this.optimizationPolicy;
	 }
	
	/**
	 * @param optimizationPolicy int 
	 */
	 setOptimizationPolicy(optimizationPolicy) {
	 	this.optimizationPolicy = optimizationPolicy;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getMaxFrameRate() {
	 	return this.maxFrameRate;
	 }
	
	/**
	 * @param maxFrameRate int 
	 */
	 setMaxFrameRate(maxFrameRate) {
	 	this.maxFrameRate = maxFrameRate;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getVideoConstantBitrate() {
	 	return this.videoConstantBitrate;
	 }
	
	/**
	 * @param videoConstantBitrate int 
	 */
	 setVideoConstantBitrate(videoConstantBitrate) {
	 	this.videoConstantBitrate = videoConstantBitrate;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getVideoBitrateTolerance() {
	 	return this.videoBitrateTolerance;
	 }
	
	/**
	 * @param videoBitrateTolerance int 
	 */
	 setVideoBitrateTolerance(videoBitrateTolerance) {
	 	this.videoBitrateTolerance = videoBitrateTolerance;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getWatermarkData() {
	 	return this.watermarkData;
	 }
	
	/**
	 * @param watermarkData string 
	 */
	 setWatermarkData(watermarkData) {
	 	this.watermarkData = watermarkData;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getSubtitlesData() {
	 	return this.subtitlesData;
	 }
	
	/**
	 * @param subtitlesData string 
	 */
	 setSubtitlesData(subtitlesData) {
	 	this.subtitlesData = subtitlesData;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getIsEncrypted() {
	 	return this.isEncrypted;
	 }
	
	/**
	 * @param isEncrypted int 
	 */
	 setIsEncrypted(isEncrypted) {
	 	this.isEncrypted = isEncrypted;
	 }
	
	/**
	 * 
	 * @return float
	 */
	 getContentAwareness() {
	 	return this.contentAwareness;
	 }
	
	/**
	 * @param contentAwareness float 
	 */
	 setContentAwareness(contentAwareness) {
	 	this.contentAwareness = contentAwareness;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getClipOffset() {
	 	return this.clipOffset;
	 }
	
	/**
	 * @param clipOffset int 
	 */
	 setClipOffset(clipOffset) {
	 	this.clipOffset = clipOffset;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getClipDuration() {
	 	return this.clipDuration;
	 }
	
	/**
	 * @param clipDuration int 
	 */
	 setClipDuration(clipDuration) {
	 	this.clipDuration = clipDuration;
	 }
}
module.exports.FlavorParams = FlavorParams;

/**
 *
 */
class FlavorAssetWithParams extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaFlavorAssetWithParams';
	}
	
	/**
	 * The Flavor Asset (Can be null when there are params without asset)
	 * @return FlavorAsset
	 */
	 getFlavorAsset() {
	 	return this.flavorAsset;
	 }
	
	/**
	 * @param flavorAsset FlavorAsset The Flavor Asset (Can be null when there are params without asset)
	 */
	 setFlavorAsset(flavorAsset) {
	 	this.flavorAsset = flavorAsset;
	 }
	
	/**
	 * The Flavor Params
	 * @return FlavorParams
	 */
	 getFlavorParams() {
	 	return this.flavorParams;
	 }
	
	/**
	 * @param flavorParams FlavorParams The Flavor Params
	 */
	 setFlavorParams(flavorParams) {
	 	this.flavorParams = flavorParams;
	 }
	
	/**
	 * The entry id
	 * @return string
	 */
	 getEntryId() {
	 	return this.entryId;
	 }
	
	/**
	 * @param entryId string The entry id
	 */
	 setEntryId(entryId) {
	 	this.entryId = entryId;
	 }
}
module.exports.FlavorAssetWithParams = FlavorAssetWithParams;

/**
 *
 */
class FlavorParamsOutput extends FlavorParams{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaFlavorParamsOutput';
	}
	
	/**
	 * 
	 * @return int
	 */
	 getFlavorParamsId() {
	 	return this.flavorParamsId;
	 }
	
	/**
	 * @param flavorParamsId int 
	 */
	 setFlavorParamsId(flavorParamsId) {
	 	this.flavorParamsId = flavorParamsId;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getCommandLinesStr() {
	 	return this.commandLinesStr;
	 }
	
	/**
	 * @param commandLinesStr string 
	 */
	 setCommandLinesStr(commandLinesStr) {
	 	this.commandLinesStr = commandLinesStr;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getFlavorParamsVersion() {
	 	return this.flavorParamsVersion;
	 }
	
	/**
	 * @param flavorParamsVersion string 
	 */
	 setFlavorParamsVersion(flavorParamsVersion) {
	 	this.flavorParamsVersion = flavorParamsVersion;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getFlavorAssetId() {
	 	return this.flavorAssetId;
	 }
	
	/**
	 * @param flavorAssetId string 
	 */
	 setFlavorAssetId(flavorAssetId) {
	 	this.flavorAssetId = flavorAssetId;
	 }
	
	/**
	 * 
	 * @return string
	 */
	 getFlavorAssetVersion() {
	 	return this.flavorAssetVersion;
	 }
	
	/**
	 * @param flavorAssetVersion string 
	 */
	 setFlavorAssetVersion(flavorAssetVersion) {
	 	this.flavorAssetVersion = flavorAssetVersion;
	 }
	
	/**
	 * 
	 * @return int
	 */
	 getReadyBehavior() {
	 	return this.readyBehavior;
	 }
	
	/**
	 * @param readyBehavior int 
	 */
	 setReadyBehavior(readyBehavior) {
	 	this.readyBehavior = readyBehavior;
	 }
}
module.exports.FlavorParamsOutput = FlavorParamsOutput;

/**
 *
 */
class SchedulerStatus extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaSchedulerStatus';
	}
	
	/**
	 * The id of the Category
	 * @return int
	 */
	 getId() {
	 	return this.id;
	 }
	
	/**
	 * The configured id of the scheduler
	 * @return int
	 */
	 getSchedulerConfiguredId() {
	 	return this.schedulerConfiguredId;
	 }
	
	/**
	 * @param schedulerConfiguredId int The configured id of the scheduler
	 */
	 setSchedulerConfiguredId(schedulerConfiguredId) {
	 	this.schedulerConfiguredId = schedulerConfiguredId;
	 }
	
	/**
	 * The configured id of the job worker
	 * @return int
	 */
	 getWorkerConfiguredId() {
	 	return this.workerConfiguredId;
	 }
	
	/**
	 * @param workerConfiguredId int The configured id of the job worker
	 */
	 setWorkerConfiguredId(workerConfiguredId) {
	 	this.workerConfiguredId = workerConfiguredId;
	 }
	
	/**
	 * The type of the job worker
	 * @return string
	 */
	 getWorkerType() {
	 	return this.workerType;
	 }
	
	/**
	 * @param workerType string The type of the job worker
	 */
	 setWorkerType(workerType) {
	 	this.workerType = workerType;
	 }
	
	/**
	 * The status type
	 * @return int
	 */
	 getType() {
	 	return this.type;
	 }
	
	/**
	 * @param type int The status type
	 */
	 setType(type) {
	 	this.type = type;
	 }
	
	/**
	 * The status value
	 * @return int
	 */
	 getValue() {
	 	return this.value;
	 }
	
	/**
	 * @param value int The status value
	 */
	 setValue(value) {
	 	this.value = value;
	 }
	
	/**
	 * The id of the scheduler
	 * @return int
	 */
	 getSchedulerId() {
	 	return this.schedulerId;
	 }
	
	/**
	 * The id of the worker
	 * @return int
	 */
	 getWorkerId() {
	 	return this.workerId;
	 }
}
module.exports.SchedulerStatus = SchedulerStatus;

/**
 *
 */
class SchedulerConfig extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaSchedulerConfig';
	}
	
	/**
	 * The id of the Category
	 * @return int
	 */
	 getId() {
	 	return this.id;
	 }
	
	/**
	 * Creator name
	 * @return string
	 */
	 getCreatedBy() {
	 	return this.createdBy;
	 }
	
	/**
	 * @param createdBy string Creator name
	 */
	 setCreatedBy(createdBy) {
	 	this.createdBy = createdBy;
	 }
	
	/**
	 * Updater name
	 * @return string
	 */
	 getUpdatedBy() {
	 	return this.updatedBy;
	 }
	
	/**
	 * @param updatedBy string Updater name
	 */
	 setUpdatedBy(updatedBy) {
	 	this.updatedBy = updatedBy;
	 }
	
	/**
	 * Id of the control panel command that created this config item
	 * @return string
	 */
	 getCommandId() {
	 	return this.commandId;
	 }
	
	/**
	 * @param commandId string Id of the control panel command that created this config item
	 */
	 setCommandId(commandId) {
	 	this.commandId = commandId;
	 }
	
	/**
	 * The status of the control panel command
	 * @return string
	 */
	 getCommandStatus() {
	 	return this.commandStatus;
	 }
	
	/**
	 * @param commandStatus string The status of the control panel command
	 */
	 setCommandStatus(commandStatus) {
	 	this.commandStatus = commandStatus;
	 }
	
	/**
	 * The id of the scheduler
	 * @return int
	 */
	 getSchedulerId() {
	 	return this.schedulerId;
	 }
	
	/**
	 * @param schedulerId int The id of the scheduler
	 */
	 setSchedulerId(schedulerId) {
	 	this.schedulerId = schedulerId;
	 }
	
	/**
	 * The configured id of the scheduler
	 * @return int
	 */
	 getSchedulerConfiguredId() {
	 	return this.schedulerConfiguredId;
	 }
	
	/**
	 * @param schedulerConfiguredId int The configured id of the scheduler
	 */
	 setSchedulerConfiguredId(schedulerConfiguredId) {
	 	this.schedulerConfiguredId = schedulerConfiguredId;
	 }
	
	/**
	 * The name of the scheduler
	 * @return string
	 */
	 getSchedulerName() {
	 	return this.schedulerName;
	 }
	
	/**
	 * @param schedulerName string The name of the scheduler
	 */
	 setSchedulerName(schedulerName) {
	 	this.schedulerName = schedulerName;
	 }
	
	/**
	 * The id of the job worker
	 * @return int
	 */
	 getWorkerId() {
	 	return this.workerId;
	 }
	
	/**
	 * @param workerId int The id of the job worker
	 */
	 setWorkerId(workerId) {
	 	this.workerId = workerId;
	 }
	
	/**
	 * The configured id of the job worker
	 * @return int
	 */
	 getWorkerConfiguredId() {
	 	return this.workerConfiguredId;
	 }
	
	/**
	 * @param workerConfiguredId int The configured id of the job worker
	 */
	 setWorkerConfiguredId(workerConfiguredId) {
	 	this.workerConfiguredId = workerConfiguredId;
	 }
	
	/**
	 * The name of the job worker
	 * @return string
	 */
	 getWorkerName() {
	 	return this.workerName;
	 }
	
	/**
	 * @param workerName string The name of the job worker
	 */
	 setWorkerName(workerName) {
	 	this.workerName = workerName;
	 }
	
	/**
	 * The name of the variable
	 * @return string
	 */
	 getVariable() {
	 	return this.variable;
	 }
	
	/**
	 * @param variable string The name of the variable
	 */
	 setVariable(variable) {
	 	this.variable = variable;
	 }
	
	/**
	 * The part of the variable
	 * @return string
	 */
	 getVariablePart() {
	 	return this.variablePart;
	 }
	
	/**
	 * @param variablePart string The part of the variable
	 */
	 setVariablePart(variablePart) {
	 	this.variablePart = variablePart;
	 }
	
	/**
	 * The value of the variable
	 * @return string
	 */
	 getValue() {
	 	return this.value;
	 }
	
	/**
	 * @param value string The value of the variable
	 */
	 setValue(value) {
	 	this.value = value;
	 }
}
module.exports.SchedulerConfig = SchedulerConfig;

/**
 *
 */
class SchedulerWorker extends kaltura.BaseObject{
	
	constructor(object = null) {
		super(object);
		this.objectType = 'KalturaSchedulerWorker';
	}
	
	/**
	 * The id of the Worker
	 * @return int
	 */
	 getId() {
	 	return this.id;
	 }
	
	/**
	 * The id as configured in the batch config
	 * @return int
	 */
	 getConfiguredId() {
	 	return this.configuredId;
	 }
	
	/**
	 * @param configuredId int The id as configured in the batch config
	 */
	 setConfiguredId(configuredId) {
	 	this.configuredId = configuredId;
	 }
	
	/**
	 * The id of the Scheduler
	 * @return int
	 */
